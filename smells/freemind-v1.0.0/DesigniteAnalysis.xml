<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Analysis Date="21-07-2022 14:23:32" Language="java" Tool="DesigniteJava" Version="2.1.0">
    <Solution>
        <Name>freemind-v1.0.0</Name>
        <Path>.\sources\freemind-v1.0.0\</Path>
        <LOC>62682</LOC>
        <ComponentCount>50</ComponentCount>
        <TypeCount>907</TypeCount>
        <MethodCount>7208</MethodCount>
        <SmellDensity>2.04</SmellDensity>
        <CodeDuplication>-1</CodeDuplication>
        <MetricVoilations>-1</MetricVoilations>
        <TotalArchSmellCount>128</TotalArchSmellCount>
        <TotalDesignSmellCount>622</TotalDesignSmellCount>
        <TotalImplSmellCount>2158</TotalImplSmellCount>
        <Project>
            <Name>freemind-v1.0.0</Name>
            <LOC>62682</LOC>
            <ComponentCount>50</ComponentCount>
            <TypeCount>907</TypeCount>
            <MethodCount>7208</MethodCount>
            <SmellDensity>2.04</SmellDensity>
            <CodeDuplication>-1</CodeDuplication>
            <MetricVoilations>-1</MetricVoilations>
            <TotalArchSmellCount>128</TotalArchSmellCount>
            <TotalDesignSmellCount>622</TotalDesignSmellCount>
            <TotalImplSmellCount>2158</TotalImplSmellCount>
            <ComponentMetrics>
                <ComponentMetric LOC="5656" Name="accessories.plugins" OutgoingDependencies="freemind.modes,accessories.plugins.dialogs,freemind.modes.mindmapmode,freemind.preferences,freemind.common,freemind.controller,freemind.preferences.layout,freemind.view.mindmapview,freemind.main,freemind.modes.mindmapmode.actions.xml,freemind.extensions,freemind.modes.common.dialogs,accessories.plugins.util.html,accessories.plugins.util.xslt,freemind.view,freemind.modes.common.plugins" SmellDensity="1.06"/>
                <ComponentMetric LOC="1083" Name="accessories.plugins.dialogs" OutgoingDependencies="freemind.modes.mindmapmode,freemind.modes.mindmapmode.dialogs,freemind.main,freemind.modes,freemind.controller" SmellDensity="2.77"/>
                <ComponentMetric LOC="3433" Name="accessories.plugins.time" OutgoingDependencies="freemind.main,freemind.modes,freemind.modes.common.plugins,freemind.modes.mindmapmode,freemind.controller,freemind.view,freemind.view.mindmapview,freemind.extensions" SmellDensity="0.29"/>
                <ComponentMetric LOC="77" Name="accessories.plugins.util.html" OutgoingDependencies="freemind.modes,freemind.view.mindmapview,freemind.main" SmellDensity="25.97"/>
                <ComponentMetric LOC="22" Name="accessories.plugins.util.window" OutgoingDependencies="" SmellDensity="0.00"/>
                <ComponentMetric LOC="294" Name="accessories.plugins.util.xslt" OutgoingDependencies="freemind.modes,freemind.main" SmellDensity="3.40"/>
                <ComponentMetric LOC="319" Name="de.foltin" OutgoingDependencies="" SmellDensity="0.00"/>
                <ComponentMetric LOC="1365" Name="freemind.common" OutgoingDependencies="freemind.main,freemind.controller,tests.freemind,freemind.modes,freemind.modes.common.dialogs,freemind.modes.mindmapmode" SmellDensity="2.93"/>
                <ComponentMetric LOC="4092" Name="freemind.controller" OutgoingDependencies="freemind.modes,freemind.main,freemind.controller.filter,freemind.modes.mindmapmode.attributeactors,freemind.preferences,freemind.view,freemind.modes.browsemode,freemind.modes.attributes,freemind.common,freemind.controller.printpreview,freemind.preferences.layout" SmellDensity="1.22"/>
                <ComponentMetric LOC="719" Name="freemind.controller.filter.condition" OutgoingDependencies="freemind.controller,freemind.modes,freemind.modes.attributes,freemind.main,freemind.common,freemind.controller.filter,freemind.view.mindmapview" SmellDensity="5.56"/>
                <ComponentMetric LOC="1396" Name="freemind.controller.filter" OutgoingDependencies="freemind.controller.filter.condition,freemind.controller,freemind.modes,freemind.view.mindmapview,freemind.controller.filter.util,freemind.modes.attributes,freemind.main,freemind.common,freemind.view,freemind.modes.common.plugins" SmellDensity="2.87"/>
                <ComponentMetric LOC="339" Name="freemind.controller.filter.util" OutgoingDependencies="" SmellDensity="2.95"/>
                <ComponentMetric LOC="169" Name="freemind.controller.printpreview" OutgoingDependencies="freemind.view.mindmapview,freemind.main" SmellDensity="17.75"/>
                <ComponentMetric LOC="1119" Name="freemind.extensions" OutgoingDependencies="freemind.view.mindmapview,freemind.modes,freemind.main,freemind.modes.mindmapmode.actions.xml" SmellDensity="2.68"/>
                <ComponentMetric LOC="4499" Name="freemind.main" OutgoingDependencies="freemind.controller,freemind.view.mindmapview,freemind.modes,freemind.view,freemind.modes.mindmapmode,freemind.common" SmellDensity="1.33"/>
                <ComponentMetric LOC="5849" Name="freemind.modes" OutgoingDependencies="freemind.main,freemind.view.mindmapview,freemind.controller,freemind.extensions,freemind.view.mindmapview.attributeview,freemind.controller.filter,freemind.controller.filter.condition,freemind.controller.filter.util,freemind.modes.attributes,freemind.preferences,freemind.modes.mindmapmode,freemind.common" SmellDensity="0.68"/>
                <ComponentMetric LOC="941" Name="freemind.modes.attributes" OutgoingDependencies="freemind.modes.mindmapmode,freemind.modes,freemind.controller.filter.util,freemind.modes.mindmapmode.attributeactors,freemind.main" SmellDensity="5.31"/>
                <ComponentMetric LOC="735" Name="freemind.modes.browsemode" OutgoingDependencies="freemind.modes,freemind.main,freemind.view.mindmapview,freemind.extensions,freemind.modes.viewmodes,freemind.controller,freemind.modes.common.plugins,freemind.modes.common.dialogs" SmellDensity="6.80"/>
                <ComponentMetric LOC="317" Name="freemind.modes.common.actions" OutgoingDependencies="freemind.modes,freemind.main" SmellDensity="9.46"/>
                <ComponentMetric LOC="184" Name="freemind.modes.common" OutgoingDependencies="freemind.modes,freemind.main" SmellDensity="16.30"/>
                <ComponentMetric LOC="534" Name="freemind.modes.common.dialogs" OutgoingDependencies="freemind.common,freemind.main,freemind.modes" SmellDensity="5.62"/>
                <ComponentMetric LOC="254" Name="freemind.modes.common.listeners" OutgoingDependencies="freemind.modes,freemind.view.mindmapview,freemind.main,freemind.controller" SmellDensity="0.00"/>
                <ComponentMetric LOC="273" Name="freemind.modes.common.plugins" OutgoingDependencies="freemind.modes,freemind.main,freemind.extensions" SmellDensity="10.99"/>
                <ComponentMetric LOC="300" Name="freemind.modes.filemode" OutgoingDependencies="freemind.modes,freemind.controller,freemind.view.mindmapview,freemind.main" SmellDensity="3.33"/>
                <ComponentMetric LOC="4165" Name="freemind.modes.mindmapmode.actions" OutgoingDependencies="freemind.modes.mindmapmode,freemind.modes,freemind.main,freemind.modes.mindmapmode.actions.xml,freemind.controller,freemind.common,freemind.view.mindmapview,freemind.extensions,freemind.controller.filter.condition,freemind.modes.attributes,freemind.modes.common" SmellDensity="0.96"/>
                <ComponentMetric LOC="335" Name="freemind.modes.mindmapmode.actions.xml" OutgoingDependencies="freemind.modes.mindmapmode,freemind.modes,freemind.controller,freemind.main,freemind.modes.mindmapmode.actions" SmellDensity="11.94"/>
                <ComponentMetric LOC="2092" Name="freemind.modes.mindmapmode.attributeactors" OutgoingDependencies="freemind.view.mindmapview,freemind.modes,freemind.modes.attributes,freemind.view,freemind.main,freemind.controller,freemind.controller.filter.util,freemind.modes.mindmapmode,freemind.modes.mindmapmode.actions.xml" SmellDensity="2.87"/>
                <ComponentMetric LOC="465" Name="freemind.modes.mindmapmode.dialogs" OutgoingDependencies="freemind.main,freemind.common,freemind.modes.mindmapmode,freemind.modes.mindmapmode.actions,freemind.modes" SmellDensity="4.30"/>
                <ComponentMetric LOC="3263" Name="freemind.modes.mindmapmode" OutgoingDependencies="freemind.main,freemind.modes,freemind.view.mindmapview,freemind.modes.mindmapmode.actions.xml,freemind.extensions,freemind.modes.mindmapmode.actions,freemind.modes.mindmapmode.attributeactors,freemind.modes.common,freemind.modes.common.actions,freemind.modes.mindmapmode.hooks,freemind.view,freemind.controller,freemind.modes.attributes,freemind.common" SmellDensity="1.84"/>
                <ComponentMetric LOC="310" Name="freemind.modes.mindmapmode.hooks" OutgoingDependencies="freemind.main,freemind.extensions,freemind.common,freemind.modes" SmellDensity="9.68"/>
                <ComponentMetric LOC="363" Name="freemind.modes.mindmapmode.listeners" OutgoingDependencies="freemind.modes,freemind.modes.mindmapmode,freemind.view.mindmapview,freemind.controller,freemind.main" SmellDensity="0.00"/>
                <ComponentMetric LOC="292" Name="freemind.modes.schememode" OutgoingDependencies="freemind.modes,freemind.controller,freemind.main" SmellDensity="3.42"/>
                <ComponentMetric LOC="97" Name="freemind.modes.viewmodes" OutgoingDependencies="freemind.view.mindmapview,freemind.modes.common,freemind.modes.common.actions,freemind.modes" SmellDensity="30.93"/>
                <ComponentMetric LOC="13" Name="freemind.preferences" OutgoingDependencies="freemind.common" SmellDensity="307.69"/>
                <ComponentMetric LOC="892" Name="freemind.preferences.layout" OutgoingDependencies="freemind.main,freemind.common,freemind.modes,freemind.modes.mindmapmode,freemind.preferences,freemind.controller" SmellDensity="3.36"/>
                <ComponentMetric LOC="63" Name="freemind.view" OutgoingDependencies="freemind.modes,freemind.view.mindmapview" SmellDensity="47.62"/>
                <ComponentMetric LOC="6097" Name="freemind.view.mindmapview" OutgoingDependencies="freemind.modes,freemind.main,tests.freemind,freemind.controller,freemind.modes.mindmapmode,freemind.preferences,freemind.view.mindmapview.attributeview" SmellDensity="0.66"/>
                <ComponentMetric LOC="718" Name="freemind.view.mindmapview.attributeview" OutgoingDependencies="freemind.modes.attributes,freemind.main,freemind.modes,freemind.view.mindmapview" SmellDensity="5.57"/>
                <ComponentMetric LOC="879" Name="plugins.collaboration.database" OutgoingDependencies="freemind.modes.mindmapmode,freemind.controller,freemind.modes,freemind.common,freemind.view,freemind.main,freemind.view.mindmapview,freemind.modes.mindmapmode.actions.xml,freemind.extensions,freemind.modes.mindmapmode.actions" SmellDensity="0.00"/>
                <ComponentMetric LOC="12" Name="plugins.collaboration.jabber" OutgoingDependencies="plugins.collaboration.jabber.mindmap" SmellDensity="0.00"/>
                <ComponentMetric LOC="471" Name="plugins.collaboration.jabber.mindmap" OutgoingDependencies="freemind.modes.mindmapmode,freemind.main,freemind.modes.mindmapmode.actions.xml,plugins.collaboration.jabber.view" SmellDensity="2.12"/>
                <ComponentMetric LOC="449" Name="plugins.collaboration.jabber.view" OutgoingDependencies="" SmellDensity="0.00"/>
                <ComponentMetric LOC="1468" Name="plugins.collaboration.socket" OutgoingDependencies="freemind.modes.mindmapmode,freemind.modes,freemind.extensions,freemind.main,freemind.common,freemind.view.mindmapview,freemind.controller,freemind.view,freemind.modes.mindmapmode.actions.xml,freemind.modes.mindmapmode.actions" SmellDensity="0.00"/>
                <ComponentMetric LOC="26" Name="plugins.help" OutgoingDependencies="freemind.main" SmellDensity="0.00"/>
                <ComponentMetric LOC="151" Name="plugins.latex" OutgoingDependencies="freemind.view.mindmapview,freemind.modes,freemind.main" SmellDensity="0.00"/>
                <ComponentMetric LOC="2045" Name="plugins.map" OutgoingDependencies="freemind.modes,freemind.modes.mindmapmode,freemind.view.mindmapview,freemind.controller,freemind.modes.common.plugins,freemind.main,freemind.common,freemind.extensions,accessories.plugins.time,freemind.view,freemind.modes.mindmapmode.actions.xml,freemind.preferences.layout" SmellDensity="0.49"/>
                <ComponentMetric LOC="1324" Name="plugins.script" OutgoingDependencies="freemind.modes.attributes,freemind.modes,freemind.modes.mindmapmode,freemind.main,freemind.controller,freemind.common,freemind.preferences.layout,freemind.modes.common.dialogs" SmellDensity="2.27"/>
                <ComponentMetric LOC="473" Name="plugins.svg" OutgoingDependencies="freemind.modes,freemind.controller,freemind.view.mindmapview,freemind.main" SmellDensity="0.00"/>
                <ComponentMetric LOC="1808" Name="tests.freemind" OutgoingDependencies="freemind.main,freemind.common,freemind.view.mindmapview,freemind.modes.mindmapmode,freemind.controller,freemind.modes,de.foltin,freemind.controller.filter,plugins.script,accessories.plugins" SmellDensity="3.32"/>
                <ComponentMetric LOC="442" Name="tests.freemind.findreplace" OutgoingDependencies="accessories.plugins.time,freemind.main,freemind.modes,freemind.view.mindmapview,freemind.extensions,freemind.modes.attributes" SmellDensity="0.00"/>
            </ComponentMetrics>
            <ClassMetrics>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="25" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ApplyFormatPlugin" WMC="4"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="7" LCOM="0.22" LOC="263" NC="0" NOF="21" NOM="9" NOP="0" NOPF="0" NOPM="5" Name="AutomaticLayout" WMC="13"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="4" FANOUT="8" LCOM="0.00" LOC="31" NC="0" NOF="3" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="Registration" WMC="4"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="MyFreemindPropertyListener" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="2" FANOUT="1" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="StylePropertyTranslator" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="6" LCOM="0.00" LOC="60" NC="0" NOF="6" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="StylePatternProperty" WMC="10"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="6" LCOM="0.00" LOC="84" NC="0" NOF="8" NOM="10" NOP="0" NOPF="0" NOPM="9" Name="StylePatternListProperty" WMC="16"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="2" FANOUT="2" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AutomaticLayoutPropertyContributor" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="1" LCOM="0.67" LOC="64" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="BlinkingNodeHook" WMC="4"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="36" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="TimerColorChanger" WMC="15"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="102" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="ChangeNodeLevelAction" WMC="18"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="3" LCOM="0.00" LOC="84" NC="0" NOF="4" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ChangeRootNode" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="8" LCOM="0.33" LOC="62" NC="0" NOF="3" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="Registration" WMC="12"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="9" LCOM="0.40" LOC="527" NC="0" NOF="13" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="ClonePasteAction" WMC="9"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="3" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ClonePropertiesObserver" WMC="1"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="3" FANOUT="1" LCOM="0.00" LOC="29" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="CloneProperties" WMC="8"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="13" LCOM="0.31" LOC="444" NC="0" NOF="11" NOM="29" NOP="0" NOPF="0" NOPM="21" Name="Registration" WMC="92"/>
                <ClassMetric Component="accessories.plugins" DIT="1" FANIN="3" FANOUT="7" LCOM="0.16" LOC="252" NC="0" NOF="11" NOM="25" NOP="0" NOPF="6" NOPM="16" Name="ClonePlugin" WMC="54"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="1" LCOM="0.30" LOC="62" NC="0" NOF="1" NOM="10" NOP="0" NOPF="0" NOPM="7" Name="CreationModificationPlugin" WMC="13"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="8" LCOM="0.38" LOC="159" NC="0" NOF="4" NOM="8" NOP="0" NOPF="0" NOPM="3" Name="EncryptNode" WMC="19"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="3" LCOM="0.00" LOC="38" NC="0" NOF="4" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="Registration" WMC="7"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="56" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="ExportToImage" WMC="6"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="105" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="4" Name="ExportToOoWriter" WMC="13"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="8" LCOM="0.18" LOC="231" NC="0" NOF="2" NOM="17" NOP="0" NOPF="0" NOPM="6" Name="ExportWithXSLT" WMC="42"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="1" LCOM="0.33" LOC="47" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="3" Name="FitToPage" WMC="8"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="5" LCOM="0.38" LOC="61" NC="0" NOF="4" NOM="8" NOP="0" NOPF="0" NOPM="7" Name="FormatNewNodes" WMC="13"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="2" LCOM="0.50" LOC="33" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="FormatPaste" WMC="6"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="4" LCOM="0.00" LOC="286" NC="0" NOF="10" NOM="7" NOP="0" NOPF="0" NOPM="6" Name="FormularEditor" WMC="17"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="1" LCOM="0.18" LOC="70" NC="3" NOF="4" NOM="11" NOP="0" NOPF="0" NOPM="10" Name="FormularEntity" WMC="13"/>
                <ClassMetric Component="accessories.plugins" DIT="1" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="39" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="StringEntity" WMC="5"/>
                <ClassMetric Component="accessories.plugins" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="29" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="CheckBoxEntity" WMC="5"/>
                <ClassMetric Component="accessories.plugins" DIT="1" FANIN="0" FANOUT="2" LCOM="0.00" LOC="72" NC="0" NOF="3" NOM="4" NOP="0" NOPF="2" NOPM="4" Name="ChoiceEntity" WMC="11"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="15" NC="0" NOF="2" NOM="2" NOP="0" NOPF="2" NOPM="2" Name="ChoiceElement" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="3" LCOM="0.23" LOC="129" NC="0" NOF="1" NOM="13" NOP="0" NOPF="0" NOPM="7" Name="HierarchicalIcons" WMC="30"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="8" LCOM="1.00" LOC="33" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="IconSelectionPlugin" WMC="3"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="69" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="ImportMindmanagerFiles" WMC="9"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="6" LCOM="1.00" LOC="122" NC="0" NOF="5" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="JumpLastEditLocation" WMC="3"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="6" LCOM="0.33" LOC="99" NC="0" NOF="5" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="JumpLastEditLocationRegistration" WMC="22"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="12" LCOM="0.36" LOC="253" NC="0" NOF="15" NOM="14" NOP="0" NOPF="0" NOPM="12" Name="LogFileViewer" WMC="21"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="4" LCOM="0.60" LOC="27" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="Registration" WMC="6"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CloseAction" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="PrintOperationAction" WMC="3"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="18" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="SetLogLevelAction" WMC="4"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="1" LCOM="0.40" LOC="64" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="UpdateTextAreaThread" WMC="14"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="27" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ManagePatterns" WMC="3"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="77" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="NewParentNode" WMC="14"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="9" LCOM="0.50" LOC="191" NC="0" NOF="8" NOM="4" NOP="0" NOPF="2" NOPM="3" Name="NodeHistory" WMC="19"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="5" LCOM="0.00" LOC="50" NC="0" NOF="2" NOM="5" NOP="0" NOPF="2" NOPM="3" Name="NodeHolder" WMC="11"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="6" LCOM="0.67" LOC="51" NC="0" NOF="3" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="Registration" WMC="15"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="2" FANOUT="2" LCOM="0.50" LOC="54" NC="0" NOF="4" NOM="4" NOP="0" NOPF="4" NOPM="1" Name="NodeNote" WMC="8"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="2" FANOUT="14" LCOM="0.11" LOC="293" NC="0" NOF="14" NOM="18" NOP="0" NOPF="0" NOPM="13" Name="NodeNoteRegistration" WMC="32"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="17" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SimplyHtmlResources" WMC="4"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="0" LCOM="1.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="SouthPanel" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="26" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="NoteDocumentListener" WMC="7"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="3" LCOM="0.44" LOC="70" NC="0" NOF="1" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="NotesManager" WMC="15"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="11" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="JumpToMapAction" WMC="2"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="6" LCOM="0.67" LOC="53" NC="0" NOF="3" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="RemoveNote" WMC="7"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="4" LCOM="0.75" LOC="26" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="Registration" WMC="7"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="2" LCOM="0.83" LOC="36" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="RevisionPlugin" WMC="8"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="32" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="SaveAll" WMC="5"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="32" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="ShowCloneNodes" WMC="6"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="36" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SortNodes" WMC="3"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="NodeTextComparator" WMC="3"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="113" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="3" Name="SplitNode" WMC="20"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="1" FANOUT="4" LCOM="0.15" LOC="167" NC="0" NOF="4" NOM="13" NOP="0" NOPF="0" NOPM="7" Name="UnfoldAll" WMC="36"/>
                <ClassMetric Component="accessories.plugins" DIT="0" FANIN="0" FANOUT="5" LCOM="0.00" LOC="35" NC="0" NOF="4" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="Registration" WMC="6"/>
                <ClassMetric Component="accessories.plugins.dialogs" DIT="0" FANIN="1" FANOUT="1" LCOM="0.29" LOC="140" NC="0" NOF="7" NOM="7" NOP="0" NOPF="0" NOPM="4" Name="ArrayListTransferHandler" WMC="27"/>
                <ClassMetric Component="accessories.plugins.dialogs" DIT="0" FANIN="0" FANOUT="0" LCOM="0.50" LOC="21" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="ArrayListTransferable" WMC="6"/>
                <ClassMetric Component="accessories.plugins.dialogs" DIT="0" FANIN="5" FANOUT="4" LCOM="0.15" LOC="149" NC="0" NOF="9" NOM="20" NOP="0" NOPF="2" NOPM="12" Name="ChooseFormatPopupDialog" WMC="25"/>
                <ClassMetric Component="accessories.plugins.dialogs" DIT="0" FANIN="0" FANOUT="1" LCOM="0.12" LOC="215" NC="0" NOF="15" NOM="17" NOP="0" NOPF="2" NOPM="7" Name="EnterPasswordDialog" WMC="29"/>
                <ClassMetric Component="accessories.plugins.dialogs" DIT="0" FANIN="1" FANOUT="10" LCOM="0.08" LOC="474" NC="0" NOF="23" NOM="38" NOP="0" NOPF="2" NOPM="22" Name="ManagePatternsPopupDialog" WMC="65"/>
                <ClassMetric Component="accessories.plugins.dialogs" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="PatternListSelectionListener" WMC="3"/>
                <ClassMetric Component="accessories.plugins.dialogs" DIT="0" FANIN="2" FANOUT="0" LCOM="0.00" LOC="66" NC="0" NOF="1" NOM="11" NOP="0" NOPF="0" NOPM="10" Name="PatternListModel" WMC="17"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="2" FANOUT="2" LCOM="0.00" LOC="78" NC="0" NOF="6" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="FlatNodeTableFilterModel" WMC="13"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="TableModelHandler" WMC="1"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="3" LCOM="0.16" LOC="468" NC="0" NOF="12" NOM="45" NOP="0" NOPF="1" NOPM="44" Name="JCalendar" WMC="59"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="6" FANOUT="4" LCOM="0.12" LOC="821" NC="0" NOF="32" NOM="57" NOP="0" NOPF="1" NOPM="51" Name="JDayChooser" WMC="131"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="1.00" LOC="31" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="DecoratorButton" WMC="7"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="4" FANOUT="2" LCOM="0.15" LOC="271" NC="0" NOF="14" NOM="20" NOP="0" NOPF="1" NOPM="19" Name="JMonthChooser" WMC="40"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="0.18" LOC="237" NC="1" NOF="9" NOM="22" NOP="0" NOPF="0" NOPM="21" Name="JSpinField" WMC="35"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="7" LCOM="0.00" LOC="138" NC="0" NOF="8" NOM="13" NOP="0" NOPF="0" NOPM="12" Name="JTripleCalendar" WMC="16"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="3" LCOM="0.50" LOC="50" NC="0" NOF="3" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="JInfoPanel" WMC="6"/>
                <ClassMetric Component="accessories.plugins.time" DIT="1" FANIN="5" FANOUT="1" LCOM="0.70" LOC="97" NC="0" NOF="6" NOM="10" NOP="0" NOPF="1" NOPM="10" Name="JYearChooser" WMC="11"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="1" Name="ReminderHook" WMC="4"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="RemoveReminderHook" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="2" FANOUT="4" LCOM="0.10" LOC="327" NC="0" NOF="21" NOM="29" NOP="0" NOPF="5" NOPM="21" Name="TableSorter" WMC="48"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="33" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="Row" WMC="7"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="23" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="TableModelHandler" WMC="4"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="17" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="MouseHandler" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="39" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="Arrow" WMC="5"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="16" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SortableHeaderRenderer" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="2" FANOUT="0" LCOM="0.00" LOC="8" NC="0" NOF="2" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="Directive" WMC="1"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="2" FANOUT="25" LCOM="0.21" LOC="0" NC="0" NOF="42" NOM="38" NOP="0" NOPF="1" NOPM="22" Name="TimeList" WMC="70"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="0" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="MindmapTableModel" WMC="7"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="ToggleViewFoldedNodesAction" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="5" NC="2" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="0" Name="IReplaceInputInformation" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ReplaceAllInfo" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ReplaceSelectedInfo" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="42" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="FilterTextDocumentListener" WMC="5"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="2" LCOM="0.00" LOC="22" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="DelayedTextEntry" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FlatNodeTableMouseAdapter" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="FlatNodeTableKeyListener" WMC="5"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="25" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="FlatNodeTable" WMC="10"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="1.00" LOC="12" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="DateRenderer" WMC="3"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NodeRenderer" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NotesRenderer" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="6" FANOUT="2" LCOM="0.00" LOC="30" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="NodeHolder" WMC="5"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="2" FANOUT="2" LCOM="0.00" LOC="28" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="NotesHolder" WMC="6"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="2" FANOUT="2" LCOM="0.00" LOC="30" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="IconsHolder" WMC="6"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="4" LCOM="1.00" LOC="23" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="IconsRenderer" WMC="5"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="14" LCOM="0.38" LOC="303" NC="0" NOF="10" NOM="16" NOP="0" NOPF="1" NOPM="11" Name="TimeManagement" WMC="26"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="2" FANOUT="1" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="NodeFactory" WMC="1"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="2" LCOM="0.67" LOC="22" NC="3" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="AppendDateAbstractAction" WMC="4"/>
                <ClassMetric Component="accessories.plugins.time" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AppendDateAction" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AppendDateToChildAction" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AppendDateToSiblingAction" WMC="4"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="RemindAction" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="RemoveReminders" WMC="4"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="TodayAction" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CloseAction" WMC="2"/>
                <ClassMetric Component="accessories.plugins.time" DIT="0" FANIN="4" FANOUT="4" LCOM="0.60" LOC="45" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="TimeManagementOrganizer" WMC="11"/>
                <ClassMetric Component="accessories.plugins.util.html" DIT="0" FANIN="1" FANOUT="6" LCOM="0.00" LOC="70" NC="0" NOF="11" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="ClickableImageCreator" WMC="9"/>
                <ClassMetric Component="accessories.plugins.util.html" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="7" NC="0" NOF="5" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="AreaHolder" WMC="0"/>
                <ClassMetric Component="accessories.plugins.util.window" DIT="0" FANIN="0" FANOUT="0" LCOM="0.67" LOC="22" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="WindowClosingAdapter" WMC="4"/>
                <ClassMetric Component="accessories.plugins.util.xslt" DIT="0" FANIN="2" FANOUT="2" LCOM="0.00" LOC="176" NC="0" NOF="17" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="ExportDialog" WMC="3"/>
                <ClassMetric Component="accessories.plugins.util.xslt" DIT="0" FANIN="0" FANOUT="3" LCOM="0.00" LOC="28" NC="0" NOF="4" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ExportListener" WMC="4"/>
                <ClassMetric Component="accessories.plugins.util.xslt" DIT="0" FANIN="0" FANOUT="2" LCOM="0.67" LOC="65" NC="0" NOF="7" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="FileChooseListener" WMC="12"/>
                <ClassMetric Component="accessories.plugins.util.xslt" DIT="0" FANIN="2" FANOUT="1" LCOM="-1.00" LOC="25" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="XmlExporter" WMC="2"/>
                <ClassMetric Component="de.foltin" DIT="0" FANIN="0" FANOUT="2" LCOM="0.20" LOC="0" NC="0" NOF="58" NOM="10" NOP="0" NOPF="13" NOPM="7" Name="CompileXsdStart" WMC="19"/>
                <ClassMetric Component="de.foltin" DIT="0" FANIN="2" FANOUT="0" LCOM="0.00" LOC="9" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ElementTypes" WMC="2"/>
                <ClassMetric Component="de.foltin" DIT="0" FANIN="11" FANOUT="9" LCOM="0.20" LOC="0" NC="10" NOF="3" NOM="10" NOP="0" NOPF="0" NOPM="4" Name="XsdHandler" WMC="25"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="22" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ExtensionHandler" WMC="4"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SchemaHandler" WMC="1"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="2" FANOUT="1" LCOM="0.60" LOC="27" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="ChoiceHandler" WMC="7"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="0" FANOUT="2" LCOM="0.00" LOC="27" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ChoiceElementHandler" WMC="4"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="GroupHandler" WMC="2"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="SequenceHandler" WMC="2"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="45" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SequenceElementHandler" WMC="7"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="2" FANOUT="1" LCOM="0.50" LOC="58" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="ComplexTypeHandler" WMC="10"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ComplexContentHandler" WMC="1"/>
                <ClassMetric Component="de.foltin" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="25" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="AttributeHandler" WMC="4"/>
                <ClassMetric Component="de.foltin" DIT="0" FANIN="1" FANOUT="0" LCOM="0.75" LOC="80" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="StringEncoder" WMC="18"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="2" FANOUT="1" LCOM="0.25" LOC="44" NC="1" NOF="7" NOM="8" NOP="0" NOPF="2" NOPM="8" Name="BooleanProperty" WMC="9"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="1" FANOUT="3" LCOM="0.00" LOC="85" NC="0" NOF="7" NOM="13" NOP="0" NOPF="0" NOPM="11" Name="ColorProperty" WMC="19"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="1" FANOUT="1" LCOM="0.15" LOC="87" NC="0" NOF="4" NOM="13" NOP="0" NOPF="0" NOPM="11" Name="ComboProperty" WMC="17"/>
                <ClassMetric Component="freemind.common" DIT="2" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="DontShowNotificationProperty" WMC="1"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="1" FANOUT="1" LCOM="0.25" LOC="54" NC="0" NOF="6" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="FontProperty" WMC="11"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="1" FANOUT="4" LCOM="0.00" LOC="106" NC="0" NOF="5" NOM="11" NOP="0" NOPF="0" NOPM="10" Name="FreeMindProgressMonitor" WMC="14"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="0" FANOUT="3" LCOM="0.00" LOC="135" NC="0" NOF="12" NOM="12" NOP="0" NOPF="2" NOPM="11" Name="FreeMindTask" WMC="20"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="16" NC="0" NOF="2" NOM="1" NOP="0" NOPF="2" NOPM="1" Name="ProgressDescription" WMC="1"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="1" FANOUT="4" LCOM="0.00" LOC="68" NC="0" NOF="6" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="IconProperty" WMC="13"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="2" FANOUT="0" LCOM="0.33" LOC="33" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="NamedObject" WMC="7"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="16" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="NextLineProperty" WMC="5"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="6" FANOUT="2" LCOM="0.22" LOC="59" NC="0" NOF="6" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="NumberProperty" WMC="10"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="11" FANOUT="5" LCOM="0.00" LOC="142" NC="0" NOF="15" NOM="7" NOP="0" NOPF="2" NOPM="6" Name="OptionalDontShowMeAgainDialog" WMC="15"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="7" NC="1" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="0" Name="DontShowPropertyHandler" WMC="2"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="0" FANOUT="1" LCOM="0.00" LOC="17" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="StandardPropertyHandler" WMC="3"/>
                <ClassMetric Component="freemind.common" DIT="2" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="23" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="PasswordProperty" WMC="4"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="4" FANOUT="0" LCOM="0.33" LOC="22" NC="9" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="PropertyBean" WMC="7"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="4" FANOUT="1" LCOM="-1.00" LOC="6" NC="11" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="0" Name="PropertyControl" WMC="4"/>
                <ClassMetric Component="freemind.common" DIT="2" FANIN="0" FANOUT="1" LCOM="0.00" LOC="22" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="RemindValueProperty" WMC="2"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="2" FANOUT="5" LCOM="0.00" LOC="68" NC="0" NOF="7" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="ScriptEditorProperty" WMC="14"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ScriptEditorStarter" WMC="1"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="0" FANOUT="1" LCOM="0.60" LOC="18" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="SeparatorProperty" WMC="5"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="5" FANOUT="1" LCOM="0.22" LOC="45" NC="1" NOF="3" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="StringProperty" WMC="9"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="29" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="TextTranslator" WMC="1"/>
                <ClassMetric Component="freemind.common" DIT="1" FANIN="1" FANOUT="1" LCOM="0.00" LOC="90" NC="1" NOF="16" NOM="11" NOP="0" NOPF="3" NOPM="8" Name="ThreeCheckBoxProperty" WMC="18"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="76" NC="0" NOF="4" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="UnicodeReader" WMC="15"/>
                <ClassMetric Component="freemind.common" DIT="0" FANIN="11" FANOUT="2" LCOM="0.27" LOC="113" NC="0" NOF="2" NOM="11" NOP="0" NOPF="0" NOPM="9" Name="XmlBindingTools" WMC="15"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="0" LCOM="0.50" LOC="17" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="BlindIcon" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="0" LCOM="0.33" LOC="23" NC="1" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="ColorSwatch" WMC="6"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="95" FANOUT="59" LCOM="0.11" LOC="1479" NC="0" NOF="89" NOM="93" NOP="0" NOPF="35" NOPM="81" Name="Controller" WMC="175"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="13" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ColorTracker" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="Closer" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="DisposeOnClose" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="QuitAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="CloseAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="29" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="PrintAction" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="16" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="PrintPreviewAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="3" LCOM="1.00" LOC="71" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="PageAction" WMC="6"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="6" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="LocalLinkConverter" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="DefaultLocalLinkConverter" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="4" LCOM="0.00" LOC="36" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="DocumentationAction" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="26" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="KeyDocumentationAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="AboutAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="LicenseAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="NavigationPreviousMapAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="19" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="ShowAttributeDialogAction" WMC="5"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ShowFilterToolbarAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="NavigationNextMapAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="NavigationMoveMapLeftAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="NavigationMoveMapRightAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="MoveToRootAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="ToggleMenubarAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="ToggleToolbarAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="ToggleLeftToolbarAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="16" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ZoomInAction" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ZoomOutAction" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ShowSelectionAsRectangleAction" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ShowAllAttributesAction" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="HideAllAttributesAction" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="ShowSelectedAttributesAction" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="3" LCOM="0.60" LOC="54" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="PropertyAction" WMC="9"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="BackgroundSwatch" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="34" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="OptionAntialiasAction" WMC="10"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="OptionHTMLExportFoldingAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="24" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="OptionSelectionMechanismAction" WMC="6"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="20" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="OpenURLAction" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="40" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="3" Name="FreeMindPopupMenu" WMC="10"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="1" LCOM="0.80" LOC="42" NC="1" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="FreeMindToolBar" WMC="6"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="3" FANOUT="4" LCOM="0.25" LOC="80" NC="0" NOF="4" NOM="8" NOP="0" NOPF="0" NOPM="5" Name="LastOpenedList" WMC="17"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="4" FANOUT="2" LCOM="0.20" LOC="116" NC="0" NOF="3" NOM="10" NOP="0" NOPF="1" NOPM="9" Name="LastStateStorageManagement" WMC="27"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="1" LCOM="1.00" LOC="18" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="MainToolBar" WMC="4"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="6" FANOUT="8" LCOM="0.00" LOC="309" NC="0" NOF="6" NOM="23" NOP="0" NOPF="0" NOPM="16" Name="MapModuleManager" WMC="51"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="2" FANOUT="2" LCOM="-1.00" LOC="14" NC="2" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="0" Name="MapModuleChangeObserver" WMC="5"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="1" FANOUT="3" LCOM="0.00" LOC="44" NC="0" NOF="1" NOM="7" NOP="0" NOPF="0" NOPM="7" Name="MapModuleChangeObserverCompound" WMC="13"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MapTitleChangeListener" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MapTitleContributor" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="0.36" LOC="65" NC="0" NOF="2" NOM="11" NOP="0" NOPF="0" NOPM="10" Name="MapMouseMotionListener" WMC="18"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="MapMouseMotionReceiver" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="0.50" LOC="19" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="MapMouseWheelListener" WMC="5"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="8" FANOUT="9" LCOM="0.21" LOC="297" NC="0" NOF="24" NOM="14" NOP="0" NOPF="13" NOPM="4" Name="MenuBar" WMC="29"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MapsMenuActionListener" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="16" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="LastOpenedActionListener" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ModesMenuActionListener" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="2" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MenuItemEnabledListener" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="2" FANOUT="0" LCOM="-1.00" LOC="3" NC="4" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MenuItemSelectedListener" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="9" FANOUT="0" LCOM="0.33" LOC="108" NC="0" NOF="14" NOM="6" NOP="0" NOPF="6" NOPM="6" Name="MindMapNodesSelection" WMC="22"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="4" LCOM="0.63" LOC="0" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="NodeDragListener" WMC="14"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="0.25" LOC="28" NC="0" NOF="2" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="NodeDropListener" WMC="13"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="0.33" LOC="25" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="NodeKeyListener" WMC="9"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="0.20" LOC="39" NC="0" NOF="2" NOM="10" NOP="0" NOPF="0" NOPM="10" Name="NodeMotionListener" WMC="17"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="2" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="NodeMotionAdapter" WMC="0"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="2" LCOM="0.18" LOC="43" NC="0" NOF="2" NOM="11" NOP="0" NOPF="0" NOPM="11" Name="NodeMouseMotionListener" WMC="19"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="NodeMouseMotionObserver" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="20" FANOUT="9" LCOM="0.43" LOC="405" NC="1" NOF="22" NOM="28" NOP="0" NOPF="2" NOPM="21" Name="StructuredMenuHolder" WMC="57"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="PrintMenuAdder" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="10" NC="0" NOF="3" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MapTokenPair" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="4" FANOUT="1" LCOM="-1.00" LOC="5" NC="2" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="0" Name="MenuAdder" WMC="3"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="0" FANOUT="5" LCOM="0.50" LOC="44" NC="0" NOF="6" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="MenuItemAdder" WMC="7"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="3" NC="2" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MenuAdderCreator" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="DefaultMenuAdderCreator" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="4" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SeparatorHolder" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="PrintMenuAdderCreator" WMC="1"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="4" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="0" Name="MenuEventSupplier" WMC="2"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="2" FANOUT="3" LCOM="0.80" LOC="46" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="StructuredMenuListener" WMC="9"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="5" FANOUT="2" LCOM="0.33" LOC="40" NC="0" NOF="4" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="StructuredMenuItemHolder" WMC="11"/>
                <ClassMetric Component="freemind.controller" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ZoomListener" WMC="1"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="3" FANIN="1" FANOUT="6" LCOM="0.00" LOC="46" NC="0" NOF="7" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="AttributeCompareCondition" WMC="7"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="2" FANIN="1" FANOUT="7" LCOM="0.00" LOC="35" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="AttributeExistsCondition" WMC="7"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="2" FANIN="1" FANOUT="7" LCOM="0.00" LOC="35" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="AttributeNotExistsCondition" WMC="7"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="2" FANIN="0" FANOUT="4" LCOM="0.00" LOC="0" NC="2" NOF="4" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="CompareConditionAdapter" WMC="7"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="0" FANIN="22" FANOUT="3" LCOM="-1.00" LOC="5" NC="8" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="Condition" WMC="3"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="0" FANIN="9" FANOUT="16" LCOM="0.50" LOC="117" NC="0" NOF="13" NOM="10" NOP="0" NOPF="0" NOPM="8" Name="ConditionFactory" WMC="56"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="1" FANOUT="8" LCOM="0.40" LOC="37" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="ConditionNotSatisfiedDecorator" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="29" NC="0" NOF="1" NOM="1" NOP="0" NOPF="1" NOPM="1" Name="ConditionRenderer" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="1" FANOUT="8" LCOM="0.40" LOC="58" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="ConjunctConditions" WMC="10"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="1" FANOUT="8" LCOM="0.40" LOC="58" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="DisjunctConditions" WMC="10"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="2" FANOUT="7" LCOM="0.00" LOC="55" NC="0" NOF="3" NOM="9" NOP="0" NOPF="0" NOPM="6" Name="IconContainedCondition" WMC="15"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="1" FANOUT="7" LCOM="0.00" LOC="55" NC="0" NOF="3" NOM="9" NOP="0" NOPF="0" NOPM="6" Name="IconNotContainedCondition" WMC="15"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="2" FANIN="1" FANOUT="6" LCOM="0.00" LOC="27" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="2" Name="IgnoreCaseNodeContainsCondition" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="0" FANIN="6" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="JCondition" WMC="1"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="3" FANIN="1" FANOUT="7" LCOM="0.00" LOC="36" NC="0" NOF="6" NOM="5" NOP="0" NOPF="0" NOPM="2" Name="NodeCompareCondition" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="0" FANOUT="2" LCOM="0.60" LOC="24" NC="5" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="NodeCondition" WMC="7"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="2" FANIN="1" FANOUT="6" LCOM="0.00" LOC="27" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="2" Name="NodeContainsCondition" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="3" FANOUT="5" LCOM="0.83" LOC="31" NC="0" NOF="3" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="NoFilteringCondition" WMC="9"/>
                <ClassMetric Component="freemind.controller.filter.condition" DIT="1" FANIN="1" FANOUT="7" LCOM="0.83" LOC="32" NC="0" NOF="3" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="SelectedViewCondition" WMC="9"/>
                <ClassMetric Component="freemind.controller.filter" DIT="1" FANIN="3" FANOUT="6" LCOM="0.27" LOC="120" NC="0" NOF="2" NOM="15" NOP="0" NOPF="0" NOPM="11" Name="DefaultFilter" WMC="30"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="7" FANOUT="2" LCOM="-1.00" LOC="19" NC="1" NOF="6" NOM="8" NOP="0" NOPF="1" NOPM="0" Name="Filter" WMC="8"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="5" FANOUT="17" LCOM="0.00" LOC="533" NC="0" NOF="32" NOM="9" NOP="0" NOPF="0" NOPM="3" Name="FilterComposerDialog" WMC="21"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="42" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="AddConditionAction" WMC="7"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="19" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="DeleteConditionAction" WMC="4"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="19" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="CreateNotSatisfiedConditionAction" WMC="4"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="CreateConjunctConditionAction" WMC="3"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="CreateDisjunctConditionAction" WMC="3"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="31" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="ConditionListSelectionListener" WMC="6"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ConditionListMouseListener" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="CloseAction" WMC="3"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="3" LCOM="1.00" LOC="19" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MindMapFilterFileFilter" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="24" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="SaveAction" WMC="4"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="19" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="LoadAction" WMC="3"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SimpleConditionChangeListener" WMC="2"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="52" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SelectedAttributeChangeListener" WMC="10"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="8" FANOUT="16" LCOM="0.30" LOC="126" NC="0" NOF="8" NOM="20" NOP="0" NOPF="0" NOPM="14" Name="FilterController" WMC="30"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="1" LCOM="0.22" LOC="42" NC="0" NOF="1" NOM="9" NOP="0" NOPF="0" NOPM="7" Name="FilterInfo" WMC="10"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="3" FANOUT="13" LCOM="0.23" LOC="197" NC="0" NOF="12" NOM="13" NOP="0" NOPF="0" NOPM="2" Name="FilterToolbar" WMC="19"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="29" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="FilterChangeListener" WMC="8"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="20" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="EditFilterAction" WMC="5"/>
                <ClassMetric Component="freemind.controller.filter" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="26" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="1" Name="UnfoldAncestorsAction" WMC="8"/>
                <ClassMetric Component="freemind.controller.filter.util" DIT="0" FANIN="1" FANOUT="2" LCOM="0.40" LOC="101" NC="0" NOF="2" NOM="15" NOP="0" NOPF="0" NOPM="12" Name="ExtendedComboBoxModel" WMC="24"/>
                <ClassMetric Component="freemind.controller.filter.util" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ExtensionDataListener" WMC="3"/>
                <ClassMetric Component="freemind.controller.filter.util" DIT="2" FANIN="4" FANOUT="0" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SortedComboBoxModel" WMC="2"/>
                <ClassMetric Component="freemind.controller.filter.util" DIT="0" FANIN="5" FANOUT="0" LCOM="-1.00" LOC="19" NC="2" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="0" Name="SortedListModel" WMC="6"/>
                <ClassMetric Component="freemind.controller.filter.util" DIT="1" FANIN="1" FANOUT="0" LCOM="0.00" LOC="65" NC="1" NOF="1" NOM="13" NOP="0" NOPF="0" NOPM="13" Name="SortedMapListModel" WMC="20"/>
                <ClassMetric Component="freemind.controller.filter.util" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="109" NC="0" NOF="5" NOM="14" NOP="0" NOPF="0" NOPM="12" Name="SortedMapVector" WMC="29"/>
                <ClassMetric Component="freemind.controller.filter.util" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="18" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="1" Name="MapElement" WMC="4"/>
                <ClassMetric Component="freemind.controller.printpreview" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="31" NC="0" NOF="4" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="BrowseAction" WMC="5"/>
                <ClassMetric Component="freemind.controller.printpreview" DIT="0" FANIN="3" FANOUT="1" LCOM="0.18" LOC="71" NC="0" NOF="7" NOM="11" NOP="0" NOPF="0" NOPM="7" Name="Preview" WMC="16"/>
                <ClassMetric Component="freemind.controller.printpreview" DIT="0" FANIN="1" FANOUT="4" LCOM="0.40" LOC="54" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="2" Name="PreviewDialog" WMC="9"/>
                <ClassMetric Component="freemind.controller.printpreview" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="13" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ZoomAction" WMC="2"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="DontSaveMarker" WMC="0"/>
                <ClassMetric Component="freemind.extensions" DIT="3" FANIN="2" FANOUT="6" LCOM="0.83" LOC="120" NC="0" NOF="3" NOM="6" NOP="0" NOPF="0" NOPM="2" Name="ExportHook" WMC="15"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="18" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ImageFilter" WMC="4"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="0" FANOUT="3" LCOM="0.29" LOC="76" NC="2" NOF="5" NOM="14" NOP="0" NOPF="0" NOPM="11" Name="HookAdapter" WMC="17"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="0" FANOUT="3" LCOM="0.00" LOC="109" NC="2" NOF="6" NOM="9" NOP="0" NOPF="1" NOPM="4" Name="HookDescriptorBase" WMC="20"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="82" NC="0" NOF="4" NOM="12" NOP="0" NOPF="1" NOPM="12" Name="HookDescriptorPluginAction" WMC="20"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="1" FANOUT="1" LCOM="0.00" LOC="19" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="HookDescriptorRegistration" WMC="4"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="4" FANOUT="7" LCOM="-1.00" LOC="48" NC="1" NOF="3" NOM="11" NOP="0" NOPF="3" NOPM="11" Name="HookFactory" WMC="11"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="3" FANOUT="0" LCOM="0.00" LOC="7" NC="0" NOF="3" NOM="1" NOP="0" NOPF="3" NOPM="1" Name="RegistrationContainer" WMC="1"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="0" FANOUT="4" LCOM="0.75" LOC="37" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="HookFactoryAdapter" WMC="7"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="3" FANOUT="4" LCOM="0.38" LOC="112" NC="0" NOF="9" NOM="8" NOP="0" NOPF="5" NOPM="7" Name="HookInstanciationMethod" WMC="10"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="4" NC="3" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="0" Name="DestinationNodesGetter" WMC="2"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="DefaultDestinationNodesGetter" WMC="2"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="RootDestinationNodesGetter" WMC="2"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="17" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="AllDestinationNodesGetter" WMC="4"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="3" FANOUT="0" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="0" Name="HookRegistration" WMC="2"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="135" NC="0" NOF="4" NOM="5" NOP="0" NOPF="2" NOPM="4" Name="ImportWizard" WMC="22"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="39" NC="3" NOF="0" NOM="9" NOP="0" NOPF="0" NOPM="0" Name="MindMapHook" WMC="9"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="3" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="PluginBaseClassSearcher" WMC="1"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="3" FANOUT="0" LCOM="-1.00" LOC="5" NC="1" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="ModeControllerHook" WMC="0"/>
                <ClassMetric Component="freemind.extensions" DIT="2" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="10" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ModeControllerHookAdapter" WMC="1"/>
                <ClassMetric Component="freemind.extensions" DIT="1" FANIN="7" FANOUT="2" LCOM="-1.00" LOC="8" NC="2" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="0" Name="NodeHook" WMC="3"/>
                <ClassMetric Component="freemind.extensions" DIT="2" FANIN="0" FANOUT="2" LCOM="0.38" LOC="44" NC="1" NOF="3" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="NodeHookAdapter" WMC="8"/>
                <ClassMetric Component="freemind.extensions" DIT="2" FANIN="23" FANOUT="3" LCOM="-1.00" LOC="59" NC="1" NOF="0" NOM="15" NOP="0" NOPF="0" NOPM="0" Name="PermanentNodeHook" WMC="15"/>
                <ClassMetric Component="freemind.extensions" DIT="3" FANIN="1" FANOUT="4" LCOM="0.92" LOC="103" NC="1" NOF="1" NOM="25" NOP="0" NOPF="1" NOPM="20" Name="PermanentNodeHookAdapter" WMC="29"/>
                <ClassMetric Component="freemind.extensions" DIT="4" FANIN="0" FANOUT="1" LCOM="0.50" LOC="25" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="PermanentNodeHookSubstituteUnknown" WMC="5"/>
                <ClassMetric Component="freemind.extensions" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="UndoEventReceiver" WMC="0"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="2" FANOUT="0" LCOM="1.00" LOC="118" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="Base64Coding" WMC="22"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="119" NC="0" NOF="7" NOM="7" NOP="0" NOPF="0" NOPM="3" Name="EditServer" WMC="16"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="2" FANOUT="0" LCOM="0.17" LOC="131" NC="0" NOF="6" NOM="12" NOP="0" NOPF="0" NOPM="12" Name="ExampleFileFilter" WMC="26"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="3" FANOUT="0" LCOM="-1.00" LOC="6" NC="1" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="0" Name="FeedBack" WMC="4"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="0" LCOM="0.75" LOC="69" NC="1" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="FixedHTMLWriter" WMC="13"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="43" FANOUT="19" LCOM="0.19" LOC="915" NC="0" NOF="86" NOM="69" NOP="0" NOPF="58" NOPM="49" Name="FreeMind" WMC="146"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="MyEventQueue" WMC="1"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="0" FANOUT="9" LCOM="0.41" LOC="287" NC="0" NOF="12" NOM="46" NOP="0" NOPF="4" NOPM="44" Name="FreeMindApplet" WMC="64"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="21" FANOUT="4" LCOM="0.17" LOC="227" NC="0" NOF="21" NOM="12" NOP="0" NOPF="15" NOPM="11" Name="FreeMindCommon" WMC="26"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="1" LCOM="0.33" LOC="81" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="1" Name="FreeMindResourceBundle" WMC="13"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="52" FANOUT="3" LCOM="-1.00" LOC="0" NC="2" NOF="10" NOM="42" NOP="0" NOPF="10" NOPM="41" Name="FreeMindMain" WMC="42"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="4" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="StartupDoneListener" WMC="1"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="5" FANOUT="0" LCOM="0.00" LOC="0" NC="0" NOF="5" NOM="3" NOP="0" NOPF="5" NOPM="3" Name="VersionInformation" WMC="12"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="0.06" LOC="150" NC="0" NOF="1" NOM="34" NOP="0" NOPF="0" NOPM="34" Name="FreeMindSecurityManager" WMC="68"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="1" FANOUT="4" LCOM="0.40" LOC="128" NC="0" NOF="14" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="FreeMindSplashModern" WMC="10"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="1" FANOUT="0" LCOM="0.33" LOC="45" NC="0" NOF="5" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="FeedBackImpl" WMC="8"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="0" NC="0" NOF="3" NOM="8" NOP="0" NOPF="0" NOPM="2" Name="FreeMindStarter" WMC="14"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="10" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ProxyAuthenticator" WMC="2"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="32" FANOUT="3" LCOM="0.46" LOC="0" NC="0" NOF="14" NOM="26" NOP="0" NOPF="8" NOPM="24" Name="HtmlTools" WMC="88"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="38" NC="0" NOF="6" NOM="2" NOP="0" NOPF="6" NOPM="2" Name="IndexPair" WMC="2"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="2" FANOUT="1" LCOM="-1.00" LOC="6" NC="1" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="IFreeMindSplash" WMC="4"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="2" FANOUT="1" LCOM="0.57" LOC="35" NC="0" NOF="1" NOM="7" NOP="0" NOPF="0" NOPM="7" Name="LogFileLogHandler" WMC="9"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="LogReceiver" WMC="1"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="35" NC="0" NOF="3" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="LoggingOutputStream" WMC="3"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="194" FANOUT="3" LCOM="0.14" LOC="101" NC="0" NOF="4" NOM="21" NOP="0" NOPF="0" NOPM="20" Name="Resources" WMC="26"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="33" NC="0" NOF="3" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="StdFormatter" WMC="2"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="StdOutErrLevel" WMC="1"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="188" FANOUT="12" LCOM="0.64" LOC="1413" NC="0" NOF="29" NOM="111" NOP="0" NOPF="6" NOPM="108" Name="Tools" WMC="225"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="0.40" LOC="17" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="IntHolder" WMC="5"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="2" FANOUT="0" LCOM="0.50" LOC="14" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="BooleanHolder" WMC="4"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="0" LCOM="0.67" LOC="11" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ObjectHolder" WMC="3"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="14" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="Pair" WMC="3"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="91" NC="2" NOF="8" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="DesEncrypter" WMC="9"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="2" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SingleDesEncrypter" WMC="1"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="TripleDesEncrypter" WMC="1"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="24" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="TransformerRunnable" WMC="3"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="6" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="EscapeAction" WMC="1"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="14" NC="2" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="0" Name="NameMnemonicHolder" WMC="4"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="0" FANOUT="0" LCOM="0.00" LOC="19" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="ButtonHolder" WMC="5"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="0" FANOUT="0" LCOM="0.40" LOC="20" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="ActionHolder" WMC="6"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="14" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="MindMapNodePair" WMC="3"/>
                <ClassMetric Component="freemind.main" DIT="1" FANIN="1" FANOUT="1" LCOM="0.43" LOC="155" NC="0" NOF="5" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="XHTMLWriter" WMC="8"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="0" FANOUT="0" LCOM="0.50" LOC="85" NC="0" NOF="4" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="XHTMLFilterWriter" WMC="17"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="49" FANOUT="1" LCOM="0.04" LOC="0" NC="0" NOF="18" NOM="90" NOP="0" NOPF="4" NOPM="67" Name="XMLElement" WMC="223"/>
                <ClassMetric Component="freemind.main" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="41" NC="0" NOF="2" NOM="3" NOP="0" NOPF="1" NOPM="3" Name="XMLParseException" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="3" FANIN="2" FANOUT="6" LCOM="0.13" LOC="122" NC="1" NOF="5" NOM="15" NOP="0" NOPF="0" NOPM="14" Name="ArrowLinkAdapter" WMC="30"/>
                <ClassMetric Component="freemind.modes" DIT="4" FANIN="2" FANOUT="6" LCOM="0.67" LOC="37" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="ArrowLinkTarget" WMC="7"/>
                <ClassMetric Component="freemind.modes" DIT="2" FANIN="2" FANOUT="8" LCOM="0.62" LOC="97" NC="0" NOF="6" NOM="13" NOP="0" NOPF="1" NOPM="6" Name="CloudAdapter" WMC="22"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="CloudAdapterListener" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="11" FANOUT="24" LCOM="0.16" LOC="1115" NC="0" NOF="13" NOM="107" NOP="0" NOPF="0" NOPM="92" Name="ControllerAdapter" WMC="200"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="nodesDepthComparator" WMC="5"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ControllerPopupMenuListener" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="11" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="OpenAction" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="2" LCOM="0.00" LOC="19" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SaveAction" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="11" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SaveAsAction" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="16" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="EditAttributesAction" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="59" NC="0" NOF="0" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="FileOpener" WMC="16"/>
                <ClassMetric Component="freemind.modes" DIT="2" FANIN="11" FANOUT="7" LCOM="0.41" LOC="130" NC="0" NOF="14" NOM="17" NOP="0" NOPF="11" NOPM="10" Name="EdgeAdapter" WMC="33"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="EdgeAdapterListener" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="1" FANOUT="3" LCOM="0.35" LOC="0" NC="0" NOF="6" NOM="17" NOP="0" NOPF="0" NOPM="15" Name="FreeMindAwtFileDialog" WMC="25"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NullFilter" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="DirFilter" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="FileOnlyFilter" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="FileAndDirFilter" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="0" LCOM="0.33" LOC="34" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="FreeMindFilenameFilter" WMC="6"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="14" FANOUT="1" LCOM="-1.00" LOC="45" NC="2" NOF="0" NOM="13" NOP="0" NOPF="0" NOPM="13" Name="FreeMindFileDialog" WMC="13"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="3" FANOUT="0" LCOM="-1.00" LOC="3" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="DirectoryResultListener" WMC="1"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="1" FANOUT="2" LCOM="0.40" LOC="35" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="FreeMindJFileDialog" WMC="6"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="3" FANOUT="0" LCOM="0.00" LOC="32" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="HistoryInformation" WMC="6"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="2" FANOUT="0" LCOM="-1.00" LOC="6" NC="1" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="0" Name="IconInformation" WMC="4"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="0" FANOUT="3" LCOM="0.10" LOC="104" NC="3" NOF="7" NOM="20" NOP="0" NOPF="1" NOPM="13" Name="LineAdapter" WMC="27"/>
                <ClassMetric Component="freemind.modes" DIT="2" FANIN="1" FANOUT="5" LCOM="0.40" LOC="78" NC="1" NOF="8" NOM="15" NOP="0" NOPF="1" NOPM="9" Name="LinkAdapter" WMC="16"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="LinkAdapterListener" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="10" FANOUT="10" LCOM="0.29" LOC="331" NC="0" NOF="12" NOM="42" NOP="0" NOPF="0" NOPM="26" Name="MapAdapter" WMC="67"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="30" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FileChangeInspectorTimerTask" WMC="5"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="5" FANOUT="7" LCOM="0.00" LOC="67" NC="0" NOF="4" NOM="10" NOP="0" NOPF="0" NOPM="9" Name="MapRegistry" WMC="15"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="28" FANOUT="2" LCOM="0.11" LOC="158" NC="0" NOF="12" NOM="19" NOP="0" NOPF="2" NOPM="15" Name="MindIcon" WMC="32"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="80" FANOUT="6" LCOM="-1.00" LOC="90" NC="1" NOF="0" NOM="27" NOP="0" NOPF="0" NOPM="2" Name="MindMap" WMC="27"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="4" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MapSourceChangedObserver" WMC="1"/>
                <ClassMetric Component="freemind.modes" DIT="2" FANIN="6" FANOUT="1" LCOM="-1.00" LOC="21" NC="1" NOF="0" NOM="10" NOP="0" NOPF="0" NOPM="10" Name="MindMapArrowLink" WMC="10"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="6" FANOUT="0" LCOM="-1.00" LOC="15" NC="1" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="MindMapCloud" WMC="4"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="4" FANOUT="0" LCOM="-1.00" LOC="5" NC="1" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="MindMapEdge" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="12" NC="4" NOF="0" NOM="7" NOP="0" NOPF="0" NOPM="7" Name="MindMapLine" WMC="7"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="9" FANOUT="1" LCOM="-1.00" LOC="10" NC="2" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="0" Name="MindMapLink" WMC="5"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="12" FANOUT="5" LCOM="0.00" LOC="263" NC="0" NOF="7" NOM="21" NOP="0" NOPF="0" NOPM="20" Name="MindMapLinkRegistry" WMC="42"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="31" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SynchronousVector" WMC="6"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="235" FANOUT="12" LCOM="-1.00" LOC="241" NC="1" NOF="5" NOM="97" NOP="0" NOPF="5" NOPM="7" Name="MindMapNode" WMC="97"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="20" FANOUT="2" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="Mode" WMC="8"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="80" FANOUT="12" LCOM="-1.00" LOC="223" NC="1" NOF="1" NOM="72" NOP="0" NOPF="1" NOPM="10" Name="ModeController" WMC="72"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="3" FANOUT="2" LCOM="-1.00" LOC="26" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="0" Name="NodeSelectionListener" WMC="5"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="3" FANOUT="1" LCOM="-1.00" LOC="16" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="0" Name="NodeLifetimeListener" WMC="3"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="62" NC="0" NOF="4" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ModesCreator" WMC="8"/>
                <ClassMetric Component="freemind.modes" DIT="1" FANIN="24" FANOUT="26" LCOM="0.09" LOC="1028" NC="0" NOF="44" NOM="140" NOP="0" NOPF="5" NOPM="127" Name="NodeAdapter" WMC="275"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NodeDownAction" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="NodeViewEvent" WMC="1"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NodeViewEventListener" WMC="2"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="0" FANOUT="5" LCOM="0.10" LOC="352" NC="0" NOF="15" NOM="42" NOP="0" NOPF="0" NOPM="41" Name="StylePattern" WMC="68"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="8" FANOUT="6" LCOM="0.58" LOC="228" NC="0" NOF="4" NOM="12" NOP="0" NOPF="2" NOPM="9" Name="StylePatternFactory" WMC="43"/>
                <ClassMetric Component="freemind.modes" DIT="0" FANIN="5" FANOUT="19" LCOM="0.13" LOC="527" NC="0" NOF="31" NOM="23" NOP="0" NOPF="15" NOPM="9" Name="XMLElementAdapter" WMC="139"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="17" FANOUT="0" LCOM="0.00" LOC="39" NC="0" NOF="2" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="Attribute" WMC="8"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="3" FANOUT="3" LCOM="-1.00" LOC="16" NC="0" NOF="0" NOM="14" NOP="0" NOPF="0" NOPM="0" Name="AttributeController" WMC="14"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="20" FANOUT="12" LCOM="0.04" LOC="314" NC="0" NOF="16" NOM="47" NOP="0" NOPF="1" NOPM="42" Name="AttributeRegistry" WMC="74"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="1" FANOUT="1" LCOM="0.33" LOC="56" NC="0" NOF="2" NOM="12" NOP="0" NOPF="0" NOPM="12" Name="AttributeRegistryComboBoxColumnModel" WMC="16"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="6" FANOUT="4" LCOM="0.00" LOC="125" NC="0" NOF="7" NOM="17" NOP="0" NOPF="0" NOPM="13" Name="AttributeRegistryElement" WMC="22"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="26" NC="0" NOF="0" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="RegisteredAttributeValues" WMC="8"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="1" FANOUT="2" LCOM="0.53" LOC="113" NC="0" NOF="6" NOM="15" NOP="0" NOPF="0" NOPM="14" Name="AttributeRegistryTableModel" WMC="38"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="10" FANOUT="2" LCOM="0.25" LOC="53" NC="0" NOF="8" NOM="8" NOP="0" NOPF="4" NOPM="5" Name="AttributeTableLayoutModel" WMC="13"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="5" FANOUT="0" LCOM="-1.00" LOC="12" NC="1" NOF="0" NOM="7" NOP="0" NOPF="0" NOPM="0" Name="AttributeTableModel" WMC="7"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="3" FANOUT="0" LCOM="0.00" LOC="15" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ColumnWidthChangeEvent" WMC="2"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ColumnWidthChangeListener" WMC="1"/>
                <ClassMetric Component="freemind.modes.attributes" DIT="1" FANIN="21" FANOUT="7" LCOM="0.13" LOC="164" NC="0" NOF="7" NOM="30" NOP="0" NOPF="0" NOPM="26" Name="NodeAttributeTableModel" WMC="45"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="19" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="BrowseArrowLinkModel" WMC="5"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="BrowseCloudModel" WMC="2"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="2" FANOUT="19" LCOM="0.55" LOC="194" NC="0" NOF="10" NOM="20" NOP="0" NOPF="1" NOPM="15" Name="BrowseController" WMC="31"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="4" LCOM="0.00" LOC="39" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="FollowMapLink" WMC="5"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="FollowLinkAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="BrowseEdgeModel" WMC="4"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="47" NC="0" NOF="0" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="BrowseHookFactory" WMC="11"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="0" FANOUT="4" LCOM="0.67" LOC="94" NC="0" NOF="2" NOM="15" NOP="0" NOPF="0" NOPM="13" Name="BrowseMapModel" WMC="18"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="2" FANOUT="3" LCOM="0.50" LOC="45" NC="0" NOF="4" NOM="8" NOP="0" NOPF="1" NOPM="8" Name="BrowseMode" WMC="9"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="21" NC="1" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="BrowseNodeModel" WMC="4"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="1" LCOM="0.60" LOC="26" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="BrowsePopupMenu" WMC="5"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="17" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="BrowseReminderHook" WMC="3"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="30" NC="0" NOF="3" NOM="3" NOP="0" NOPF="1" NOPM="2" Name="BrowseToolBar" WMC="5"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="0" FANOUT="3" LCOM="0.56" LOC="43" NC="0" NOF="2" NOM="9" NOP="0" NOPF="0" NOPM="1" Name="BrowseXMLElement" WMC="10"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="1" FANIN="0" FANOUT="9" LCOM="0.40" LOC="81" NC="0" NOF="6" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="EncryptedBrowseNode" WMC="13"/>
                <ClassMetric Component="freemind.modes.browsemode" DIT="0" FANIN="0" FANOUT="3" LCOM="0.38" LOC="49" NC="0" NOF="4" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="NodeNoteViewer" WMC="11"/>
                <ClassMetric Component="freemind.modes.common.actions" DIT="0" FANIN="3" FANOUT="6" LCOM="0.00" LOC="284" NC="0" NOF="14" NOM="18" NOP="0" NOPF="0" NOPM="12" Name="FindAction" WMC="49"/>
                <ClassMetric Component="freemind.modes.common.actions" DIT="0" FANIN="2" FANOUT="2" LCOM="0.00" LOC="23" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="FindNextAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.common.actions" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NewMapAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.common" DIT="0" FANIN="0" FANOUT="3" LCOM="0.50" LOC="100" NC="0" NOF="13" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="CommonNodeKeyListener" WMC="30"/>
                <ClassMetric Component="freemind.modes.common" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="EditHandler" WMC="1"/>
                <ClassMetric Component="freemind.modes.common" DIT="0" FANIN="2" FANOUT="3" LCOM="0.00" LOC="61" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="CommonToggleFoldedAction" WMC="13"/>
                <ClassMetric Component="freemind.modes.common" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="20" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="GotoLinkNodeAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.common.dialogs" DIT="0" FANIN="3" FANOUT="2" LCOM="0.11" LOC="221" NC="0" NOF="14" NOM="18" NOP="0" NOPF="2" NOPM="8" Name="EnterPasswordDialog" WMC="30"/>
                <ClassMetric Component="freemind.modes.common.dialogs" DIT="0" FANIN="2" FANOUT="3" LCOM="0.24" LOC="227" NC="0" NOF="14" NOM="29" NOP="0" NOPF="0" NOPM="12" Name="IconSelectionPopupDialog" WMC="56"/>
                <ClassMetric Component="freemind.modes.common.dialogs" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="22" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="Position" WMC="4"/>
                <ClassMetric Component="freemind.modes.common.dialogs" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="64" NC="0" NOF="4" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="PersistentEditableComboBox" WMC="15"/>
                <ClassMetric Component="freemind.modes.common.listeners" DIT="0" FANIN="0" FANOUT="2" LCOM="0.00" LOC="36" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="CommonMouseMotionManager" WMC="7"/>
                <ClassMetric Component="freemind.modes.common.listeners" DIT="0" FANIN="0" FANOUT="4" LCOM="0.00" LOC="137" NC="0" NOF="9" NOM="13" NOP="0" NOPF="0" NOPM="10" Name="CommonNodeMouseMotionListener" WMC="26"/>
                <ClassMetric Component="freemind.modes.common.listeners" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="21" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="timeDelayedSelection" WMC="5"/>
                <ClassMetric Component="freemind.modes.common.listeners" DIT="0" FANIN="0" FANOUT="5" LCOM="0.00" LOC="60" NC="0" NOF="4" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="MindMapMouseWheelEventHandler" WMC="13"/>
                <ClassMetric Component="freemind.modes.common.plugins" DIT="0" FANIN="6" FANOUT="5" LCOM="0.23" LOC="95" NC="0" NOF="23" NOM="13" NOP="0" NOPF="11" NOPM="10" Name="MapNodePositionHolderBase" WMC="18"/>
                <ClassMetric Component="freemind.modes.common.plugins" DIT="0" FANIN="3" FANOUT="0" LCOM="-1.00" LOC="9" NC="0" NOF="1" NOM="0" NOP="0" NOPF="1" NOPM="0" Name="NodeNoteBase" WMC="0"/>
                <ClassMetric Component="freemind.modes.common.plugins" DIT="0" FANIN="5" FANOUT="3" LCOM="0.13" LOC="149" NC="0" NOF="14" NOM="16" NOP="0" NOPF="2" NOPM="10" Name="ReminderHookBase" WMC="30"/>
                <ClassMetric Component="freemind.modes.common.plugins" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="20" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="TimerBlinkTask" WMC="3"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="3" FANOUT="7" LCOM="0.89" LOC="71" NC="0" NOF="4" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="FileController" WMC="12"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="CenterAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="OpenPathAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FileEdgeModel" WMC="1"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="2" FANOUT="4" LCOM="0.92" LOC="41" NC="0" NOF="1" NOM="12" NOP="0" NOPF="0" NOPM="12" Name="FileMapModel" WMC="12"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="0" FANOUT="3" LCOM="0.56" LOC="43" NC="0" NOF="5" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="FileMode" WMC="10"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="0" FANOUT="5" LCOM="0.25" LOC="89" NC="0" NOF="2" NOM="12" NOP="0" NOPF="0" NOPM="11" Name="FileNodeModel" WMC="20"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="14" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="FilePopupMenu" WMC="2"/>
                <ClassMetric Component="freemind.modes.filemode" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="11" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FileToolBar" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="5" LCOM="0.22" LOC="88" NC="0" NOF="2" NOM="9" NOP="0" NOPF="0" NOPM="7" Name="AddArrowLinkAction" WMC="18"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="25" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AddLocalLinkAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="2" FANOUT="10" LCOM="0.33" LOC="139" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="ApplyPatternAction" WMC="37"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ExternalPatternAction" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="42" NC="0" NOF="0" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="BoldAction" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="3" LCOM="0.38" LOC="46" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="5" Name="ChangeArrowLinkEndPoints" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="3" LCOM="0.22" LOC="53" NC="0" NOF="4" NOM="9" NOP="0" NOPF="0" NOPM="5" Name="ChangeArrowsInArrowLinkAction" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="5" LCOM="-1.00" LOC="62" NC="0" NOF="0" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="CloudAction" WMC="14"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="5" LCOM="0.00" LOC="59" NC="0" NOF="1" NOM="7" NOP="0" NOPF="0" NOPM="7" Name="CloudColorAction" WMC="14"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="5" LCOM="0.25" LOC="46" NC="0" NOF="2" NOM="8" NOP="0" NOPF="0" NOPM="5" Name="ColorArrowLinkAction" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="2" LCOM="0.50" LOC="27" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="CompoundActionHandler" WMC="6"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="16" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CopyAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="16" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CopySingleAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="6" LCOM="0.00" LOC="62" NC="0" NOF="3" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="CutAction" WMC="12"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="8" LCOM="0.00" LOC="88" NC="0" NOF="2" NOM="8" NOP="0" NOPF="0" NOPM="7" Name="DeleteChildAction" WMC="17"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="5" LCOM="0.00" LOC="44" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="EdgeColorAction" WMC="11"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="5" LCOM="0.33" LOC="55" NC="0" NOF="1" NOM="9" NOP="0" NOPF="0" NOPM="7" Name="EdgeStyleAction" WMC="13"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="0.27" LOC="67" NC="0" NOF="1" NOM="11" NOP="0" NOPF="0" NOPM="8" Name="EdgeWidthAction" WMC="16"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="14" LCOM="0.09" LOC="179" NC="0" NOF="3" NOM="23" NOP="0" NOPF="0" NOPM="20" Name="EditAction" WMC="39"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="8" LCOM="0.00" LOC="59" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ExportBranchAction" WMC="8"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="0.38" LOC="56" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="FontFamilyAction" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="0.38" LOC="63" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="FontSizeAction" WMC="11"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="2" LCOM="0.50" LOC="29" NC="14" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="FreemindAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="6" NC="2" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="HookAction" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="4" FANOUT="8" LCOM="0.00" LOC="143" NC="0" NOF="3" NOM="22" NOP="0" NOPF="1" NOPM="11" Name="IconAction" WMC="34"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="5" LCOM="0.00" LOC="68" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="ImportExplorerFavoritesAction" WMC="14"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="6" LCOM="0.00" LOC="61" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="ImportFolderStructureAction" WMC="13"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="0.25" LOC="42" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="ItalicAction" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="4" LCOM="0.00" LOC="60" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="JoinNodesAction" WMC="13"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="10" LCOM="-1.00" LOC="171" NC="0" NOF="4" NOM="65" NOP="0" NOPF="4" NOPM="46" Name="MindMapActions" WMC="65"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="2" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="MouseWheelEventHandler" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="1" LCOM="0.00" LOC="15" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="MindMapControllerHookAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="2" LCOM="0.75" LOC="17" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="ModeControllerActionHandler" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="0.29" LOC="44" NC="0" NOF="1" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="MoveNodeAction" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="5" LCOM="0.00" LOC="100" NC="0" NOF="2" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="NewChildAction" WMC="20"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NewPreviousSiblingAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NewSiblingAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="10" NC="12" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="NodeActorXml" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="5" LCOM="0.33" LOC="57" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="NodeBackgroundColorAction" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="3" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="RemoveNodeBackgroundColorAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="5" LCOM="0.00" LOC="47" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="NodeColorAction" WMC="11"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NodeColorBlendAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="0" FANOUT="7" LCOM="0.18" LOC="84" NC="18" NOF="4" NOM="11" NOP="0" NOPF="0" NOPM="6" Name="NodeGeneralAction" WMC="20"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="3" FANOUT="11" LCOM="0.00" LOC="229" NC="0" NOF="3" NOM="17" NOP="0" NOPF="0" NOPM="12" Name="NodeHookAction" WMC="48"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="0.38" LOC="52" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="NodeStyleAction" WMC="12"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="3" LCOM="0.27" LOC="138" NC="0" NOF="2" NOM="11" NOP="0" NOPF="0" NOPM="9" Name="NodeUpAction" WMC="28"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="15" LCOM="0.00" LOC="536" NC="0" NOF="8" NOM="17" NOP="0" NOPF="3" NOPM="8" Name="PasteAction" WMC="59"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="4" FANOUT="1" LCOM="0.00" LOC="33" NC="0" NOF="3" NOM="3" NOP="0" NOPF="3" NOPM="3" Name="NodeCoordinate" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="4" NC="6" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="0" Name="DataFlavorHandler" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="FileListFlavorHandler" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="0" FANOUT="7" LCOM="-1.00" LOC="37" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MindMapNodesFlavorHandler" WMC="8"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="28" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="DirectHtmlFlavorHandler" WMC="6"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="57" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="HtmlFlavorHandler" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="StringFlavorHandler" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ImageFlavorHandler" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="4" LCOM="0.00" LOC="38" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="PasteAsPlainTextAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="2" FANOUT="2" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="RedoAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="6" LCOM="0.60" LOC="54" NC="0" NOF="1" NOM="10" NOP="0" NOPF="0" NOPM="10" Name="RemoveAllIconsAction" WMC="13"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="2" FANOUT="5" LCOM="0.18" LOC="78" NC="0" NOF="2" NOM="11" NOP="0" NOPF="0" NOPM="9" Name="RemoveArrowLinkAction" WMC="15"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="2" FANOUT="6" LCOM="0.64" LOC="60" NC="0" NOF="1" NOM="11" NOP="0" NOPF="0" NOPM="11" Name="RemoveIconAction" WMC="13"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="3" LCOM="0.38" LOC="87" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="RevertAction" WMC="13"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SelectAllAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SelectBranchAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="3" LCOM="0.29" LOC="40" NC="0" NOF="1" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="SetLinkByTextFieldAction" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="3" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SingleNodeOperation" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="14" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ToggleChildrenFoldedAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="6" LCOM="0.00" LOC="79" NC="0" NOF="2" NOM="9" NOP="0" NOPF="0" NOPM="7" Name="ToggleFoldedAction" WMC="17"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="0.25" LOC="42" NC="0" NOF="1" NOM="8" NOP="0" NOPF="0" NOPM="6" Name="UnderlinedAction" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="2" FANOUT="4" LCOM="0.00" LOC="118" NC="1" NOF="7" NOM="12" NOP="0" NOPF="0" NOPM="7" Name="UndoAction" WMC="21"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="0" FANIN="1" FANOUT="4" LCOM="0.67" LOC="33" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="UndoPasteHandler" WMC="6"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="UsePlainTextAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions" DIT="1" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="UseRichFormattingAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="1" FANIN="0" FANOUT="2" LCOM="0.33" LOC="22" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="0" Name="AbstractActorXml" WMC="6"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="0" FANIN="0" FANOUT="2" LCOM="0.43" LOC="36" NC="0" NOF="2" NOM="7" NOP="0" NOPF="0" NOPM="4" Name="AbstractXmlAction" WMC="8"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="0" FANIN="3" FANOUT="7" LCOM="0.00" LOC="149" NC="0" NOF="6" NOM="14" NOP="0" NOPF="0" NOPM="11" Name="ActionFactory" WMC="29"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="19" NC="2" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ActionFilter" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="FinalActionFilter" WMC="0"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="FirstActionFilter" WMC="0"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="12" NC="1" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="0" Name="ActionHandler" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="0" FANIN="37" FANOUT="0" LCOM="0.00" LOC="32" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="ActionPair" WMC="6"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="0" FANIN="5" FANOUT="0" LCOM="-1.00" LOC="9" NC="1" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ActorXml" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="1" FANIN="1" FANOUT="1" LCOM="0.75" LOC="22" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="PrintActionHandler" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.actions.xml" DIT="0" FANIN="1" FANOUT="4" LCOM="0.75" LOC="24" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="UndoActionHandler" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="1" FANOUT="8" LCOM="0.46" LOC="399" NC="0" NOF="21" NOM="13" NOP="0" NOPF="0" NOPM="11" Name="AssignAttributeDialog" WMC="16"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="0.38" LOC="36" NC="0" NOF="3" NOM="8" NOP="0" NOPF="0" NOPM="7" Name="ClonedComboBoxModel" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="38" NC="4" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="1" Name="IteratingAction" WMC="11"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="26" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="AddAction" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="0" FANOUT="2" LCOM="0.00" LOC="24" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="DeleteAttributeAction" WMC="6"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="0" FANOUT="3" LCOM="0.00" LOC="27" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="DeleteValueAction" WMC="6"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="0" FANOUT="3" LCOM="0.00" LOC="41" NC="0" NOF="4" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ReplaceValueAction" WMC="8"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="3" FANOUT="10" LCOM="0.50" LOC="159" NC="0" NOF="12" NOM="10" NOP="0" NOPF="0" NOPM="8" Name="AttributeManagerDialog" WMC="11"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ApplyAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="OKAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="CancelAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ImportAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="3" LCOM="0.60" LOC="23" NC="0" NOF="4" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="EditListAction" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ClosingListener" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="5" LCOM="0.40" LOC="126" NC="0" NOF="8" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="AttributeRegistryTable" WMC="16"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="22" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="ButtonEditor" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="14" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ButtonRenderer" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ToggleAllAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="AttributesListener" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="2" FANOUT="12" LCOM="0.18" LOC="0" NC="0" NOF="17" NOM="11" NOP="0" NOPF="0" NOPM="5" Name="ImportAttributesDialog" WMC="37"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="2" FANOUT="0" LCOM="0.00" LOC="23" NC="1" NOF="5" NOM="5" NOP="0" NOPF="0" NOPM="2" Name="TreeNodeInfo" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="1" FANOUT="0" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="AttributeTreeNodeInfo" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="1" LCOM="1.00" LOC="24" NC="0" NOF="3" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MyRenderer" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="5" LCOM="-1.00" LOC="34" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="InsertAttributeActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="2" FANOUT="4" LCOM="0.38" LOC="197" NC="0" NOF="7" NOM="8" NOP="0" NOPF="0" NOPM="3" Name="ListDialog" WMC="19"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="TextChangeListener" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ListSelectionChangeListener" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="AddAction" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="RenameAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="DeleteAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="CloseAction" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="28" LCOM="0.00" LOC="286" NC="0" NOF="23" NOM="16" NOP="0" NOPF="0" NOPM="15" Name="MindMapModeAttributeController" WMC="37"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="2" FANOUT="1" LCOM="-1.00" LOC="3" NC="4" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="Visitor" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="17" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AttributeRenamer" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="19" NC="0" NOF="3" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AttributeChanger" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="15" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AttributeRemover" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="1" FANIN="1" FANOUT="2" LCOM="0.00" LOC="17" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AttributeValueRemover" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="16" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="0" Name="Iterator" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="29" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="RegistryAttributeActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="28" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="RegistryAttributeValueActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="33" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="RemoveAttributeActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="28" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="ReplaceAttributeValueActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="29" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="SetAttributeColumnWidthActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="27" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="SetAttributeFontSizeActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="32" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="SetAttributeNameActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="39" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="SetAttributeRestrictedActor" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="32" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="SetAttributeValueActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="29" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="SetAttributeVisibleActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="39" NC="0" NOF="0" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="UnregistryAttributeActor" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.attributeactors" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="27" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="5" Name="UnregistryAttributeValueActor" WMC="7"/>
                <ClassMetric Component="freemind.modes.mindmapmode.dialogs" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="42" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="IntegerComboProperty" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode.dialogs" DIT="0" FANIN="2" FANOUT="22" LCOM="0.00" LOC="399" NC="0" NOF="73" NOM="19" NOP="0" NOPF="2" NOPM="10" Name="StylePatternFrame" WMC="41"/>
                <ClassMetric Component="freemind.modes.mindmapmode.dialogs" DIT="0" FANIN="3" FANOUT="0" LCOM="0.00" LOC="6" NC="0" NOF="2" NOM="1" NOP="0" NOPF="2" NOPM="0" Name="StylePatternFrameType" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.dialogs" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="3" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ValueTransformator" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.dialogs" DIT="1" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="IdentityTransformer" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.dialogs" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="EdgeWidthTransformer" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode.dialogs" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="EdgeWidthBackTransformer" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="1" FANIN="2" FANOUT="12" LCOM="0.07" LOC="294" NC="0" NOF="8" NOM="30" NOP="0" NOPF="0" NOPM="22" Name="EncryptedMindMapNode" WMC="58"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="39" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="JAutoScrollBarPane" WMC="8"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="6" FANOUT="4" LCOM="-1.00" LOC="52" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="4" Name="MindMapArrowLinkModel" WMC="12"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="MindMapCloudModel" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="148" FANOUT="102" LCOM="0.17" LOC="1555" NC="0" NOF="113" NOM="129" NOP="0" NOPF="88" NOPM="113" Name="MindMapController" WMC="222"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="3" LCOM="0.67" LOC="26" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="MapSourceChangeDialog" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AssignAttributesAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="3" FANOUT="0" LCOM="-1.00" LOC="2" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="MindMapControllerPlugin" WMC="0"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="3" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="NewNodeCreator" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="1" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="DefaultMindMapNodeCreator" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="2" LCOM="0.00" LOC="21" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ExportToHTMLAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="2" LCOM="1.00" LOC="21" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ExportBranchToHTMLAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="23" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ImportBranchAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="3" LCOM="-1.00" LOC="30" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ImportLinkedBranchAction" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="35" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ImportLinkedBranchWithoutRootAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MindMapFilter" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SetLinkByFileChooserAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SetImageByFileChooserAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="12" NC="2" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="LinkActionBase" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="FollowLinkAction" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="20" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="OpenLinkDirectoryAction" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="EditLongAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="MindMapEdgeModel" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="5" LCOM="0.00" LOC="0" NC="0" NOF="5" NOM="16" NOP="0" NOPF="0" NOPM="0" Name="MindMapHTMLWriter" WMC="71"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="17" FANOUT="16" LCOM="0.41" LOC="560" NC="0" NOF="20" NOM="27" NOP="0" NOPF="4" NOPM="22" Name="MindMapMapModel" WMC="59"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="1" FANIN="0" FANOUT="0" LCOM="0.00" LOC="12" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="StringReaderCreator" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="1" FANIN="0" FANOUT="0" LCOM="0.00" LOC="12" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="FileReaderCreator" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="2" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ReaderCreator" WMC="1"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="91" NC="1" NOF="5" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="LockManager" WMC="15"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="DummyLockManager" WMC="5"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="0" FANOUT="3" LCOM="0.00" LOC="62" NC="0" NOF="6" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="DoAutomaticSave" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="2" FANOUT="2" LCOM="0.38" LOC="45" NC="0" NOF="5" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="MindMapMode" WMC="10"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="31" FANOUT="3" LCOM="-1.00" LOC="0" NC="1" NOF="0" NOM="10" NOP="0" NOPF="0" NOPM="7" Name="MindMapNodeModel" WMC="34"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="20" NC="0" NOF="3" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MindMapPopupMenu" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="6" LCOM="0.00" LOC="153" NC="0" NOF="13" NOM="15" NOP="0" NOPF="0" NOPM="10" Name="MindMapToolBar" WMC="31"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="FreeMindComboBox" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode" DIT="0" FANIN="1" FANOUT="5" LCOM="0.70" LOC="62" NC="0" NOF="1" NOM="10" NOP="0" NOPF="0" NOPM="1" Name="MindMapXMLElement" WMC="12"/>
                <ClassMetric Component="freemind.modes.mindmapmode.hooks" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="22" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="MindMapHookAdapter" WMC="4"/>
                <ClassMetric Component="freemind.modes.mindmapmode.hooks" DIT="0" FANIN="1" FANOUT="9" LCOM="0.11" LOC="254" NC="0" NOF="7" NOM="18" NOP="0" NOPF="0" NOPM="12" Name="MindMapHookFactory" WMC="40"/>
                <ClassMetric Component="freemind.modes.mindmapmode.hooks" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MindMapNodeHookAdapter" WMC="2"/>
                <ClassMetric Component="freemind.modes.mindmapmode.hooks" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="22" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="PermanentMindMapNodeHookAdapter" WMC="3"/>
                <ClassMetric Component="freemind.modes.mindmapmode.listeners" DIT="0" FANIN="0" FANOUT="3" LCOM="0.00" LOC="60" NC="0" NOF="6" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="MindMapMouseMotionManager" WMC="9"/>
                <ClassMetric Component="freemind.modes.mindmapmode.listeners" DIT="0" FANIN="0" FANOUT="8" LCOM="0.67" LOC="132" NC="0" NOF="1" NOM="9" NOP="0" NOPF="0" NOPM="7" Name="MindMapNodeDropListener" WMC="28"/>
                <ClassMetric Component="freemind.modes.mindmapmode.listeners" DIT="0" FANIN="0" FANOUT="8" LCOM="0.13" LOC="171" NC="0" NOF="6" NOM="16" NOP="0" NOPF="0" NOPM="8" Name="MindMapNodeMotionListener" WMC="32"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="3" FANOUT="6" LCOM="0.86" LOC="54" NC="0" NOF="6" NOM="7" NOP="0" NOPF="0" NOPM="7" Name="SchemeController" WMC="8"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="EvaluateAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SchemeEdgeModel" WMC="1"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="83" NC="0" NOF="0" NOM="8" NOP="0" NOPF="0" NOPM="8" Name="SchemeMapModel" WMC="15"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="0" FANOUT="3" LCOM="0.56" LOC="43" NC="0" NOF="5" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="SchemeMode" WMC="10"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="75" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="SchemeNodeModel" WMC="19"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="7" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SchemePopupMenu" WMC="1"/>
                <ClassMetric Component="freemind.modes.schememode" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SchemeToolBar" WMC="1"/>
                <ClassMetric Component="freemind.modes.viewmodes" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="18" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CommonToggleChildrenFoldedAction" WMC="2"/>
                <ClassMetric Component="freemind.modes.viewmodes" DIT="0" FANIN="3" FANOUT="7" LCOM="0.90" LOC="79" NC="0" NOF="4" NOM="10" NOP="0" NOPF="4" NOPM="9" Name="ViewControllerAdapter" WMC="15"/>
                <ClassMetric Component="freemind.preferences" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FreemindPropertyContributor" WMC="1"/>
                <ClassMetric Component="freemind.preferences" DIT="0" FANIN="6" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="FreemindPropertyListener" WMC="1"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="4" FANOUT="5" LCOM="0.47" LOC="0" NC="0" NOF="17" NOM="17" NOP="0" NOPF="5" NOPM="10" Name="GrabKeyDialog" WMC="36"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="Buffer" WMC="2"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="2" FANOUT="0" LCOM="0.00" LOC="19" NC="0" NOF="4" NOM="2" NOP="0" NOPF="4" NOPM="2" Name="KeyBinding" WMC="2"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="41" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="InputPane" WMC="13"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="51" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ActionHandler" WMC="15"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="2" FANOUT="3" LCOM="0.00" LOC="0" NC="0" NOF="8" NOM="7" NOP="0" NOPF="3" NOPM="7" Name="KeyEventTranslator" WMC="55"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="25" NC="0" NOF="3" NOM="4" NOP="0" NOPF="3" NOPM="4" Name="Key" WMC="6"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="2" FANOUT="0" LCOM="0.00" LOC="0" NC="0" NOF="8" NOM="2" NOP="0" NOPF="2" NOPM="2" Name="KeyEventWorkaround" WMC="80"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="4" FANOUT="19" LCOM="0.00" LOC="592" NC="0" NOF="27" NOM="16" NOP="0" NOPF="1" NOPM="10" Name="OptionPanel" WMC="34"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="OptionPanelFeedback" WMC="1"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="21" NC="0" NOF="3" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ChangeTabAction" WMC="3"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="1" LCOM="0.50" LOC="22" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="NewTabProperty" WMC="6"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="2" LCOM="0.00" LOC="71" NC="0" NOF="7" NOM="11" NOP="0" NOPF="0" NOPM="11" Name="KeyProperty" WMC="16"/>
                <ClassMetric Component="freemind.preferences.layout" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="36" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="VariableSizeCardLayout" WMC="7"/>
                <ClassMetric Component="freemind.view" DIT="0" FANIN="23" FANOUT="4" LCOM="0.18" LOC="63" NC="0" NOF="7" NOM="11" NOP="0" NOPF="0" NOPM="11" Name="MapModule" WMC="13"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="3" LCOM="0.12" LOC="0" NC="0" NOF="7" NOM="17" NOP="0" NOPF="0" NOPM="9" Name="ArrowLinkView" WMC="44"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="1" LCOM="0.50" LOC="39" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="BezierEdgeView" WMC="6"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="3" FANOUT="4" LCOM="0.77" LOC="77" NC="0" NOF="2" NOM="13" NOP="0" NOPF="0" NOPM="6" Name="BubbleMainView" WMC="17"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="4" LCOM="0.00" LOC="141" NC="0" NOF="4" NOM="14" NOP="0" NOPF="0" NOPM="7" Name="CloudView" WMC="22"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="93" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="ConvexHull" WMC="14"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="36" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="thetaComparator" WMC="11"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="2" FANOUT="4" LCOM="0.21" LOC="76" NC="4" NOF="7" NOM="14" NOP="0" NOPF="0" NOPM="4" Name="EdgeView" WMC="16"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="3" FANOUT="8" LCOM="0.31" LOC="217" NC="4" NOF="18" NOM="16" NOP="0" NOPF="0" NOPM="7" Name="EditNodeBase" WMC="23"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="2" LCOM="0.22" LOC="77" NC="2" NOF="5" NOM="9" NOP="0" NOPF="0" NOPM="0" Name="EditDialog" WMC="14"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="7" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="DialogWindowListener" WMC="2"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="6" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SubmitAction" WMC="1"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="6" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SplitAction" WMC="1"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="6" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="CancelAction" WMC="1"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="6" FANOUT="0" LCOM="-1.00" LOC="5" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="0" Name="EditControl" WMC="3"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="14" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="EditCopyAction" WMC="3"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="2" FANOUT="1" LCOM="0.00" LOC="11" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="EditPopupMenu" WMC="2"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="0" LCOM="0.67" LOC="19" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="KeyEventQueue" WMC="4"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="6" LCOM="1.00" LOC="199" NC="0" NOF="4" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="EditNodeDialog" WMC="2"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="2" LCOM="0.38" LOC="178" NC="0" NOF="2" NOM="21" NOP="0" NOPF="0" NOPM="15" Name="LongNodeDialog" WMC="38"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="5" LCOM="0.50" LOC="51" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="EditNodeExternalApplication" WMC="8"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="2" FANOUT="10" LCOM="0.00" LOC="239" NC="0" NOF="18" NOM="9" NOP="0" NOPF="0" NOPM="6" Name="EditNodeTextField" WMC="23"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="2" LCOM="0.53" LOC="86" NC="0" NOF="1" NOM="15" NOP="0" NOPF="0" NOPM="14" Name="TextFieldListener" WMC="25"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="8" LCOM="0.00" LOC="185" NC="0" NOF="4" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="EditNodeWYSIWYG" WMC="9"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="4" LCOM="0.15" LOC="103" NC="0" NOF="2" NOM="13" NOP="0" NOPF="0" NOPM="6" Name="HTMLDialog" WMC="17"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="0" FANOUT="5" LCOM="-1.00" LOC="80" NC="0" NOF="0" NOM="10" NOP="0" NOPF="0" NOPM="2" Name="ForkMainView" WMC="18"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="11" LCOM="-1.00" LOC="96" NC="0" NOF="0" NOM="9" NOP="0" NOPF="0" NOPM="5" Name="IndependantMapViewCreator" WMC="10"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="2" FANIN="1" FANOUT="4" LCOM="1.00" LOC="46" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="LeftNodeViewLayout" WMC="7"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="42" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="LinearEdgeView" WMC="7"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="13" FANOUT="7" LCOM="0.28" LOC="231" NC="3" NOF="7" NOM="39" NOP="0" NOPF="1" NOPM="21" Name="MainView" WMC="58"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="52" FANOUT="15" LCOM="0.13" LOC="1149" NC="0" NOF="35" NOM="79" NOP="0" NOPF="1" NOPM="53" Name="MapView" WMC="226"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ResizeListener" WMC="2"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="1" Name="ScrollPane" WMC="5"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="1" LCOM="0.18" LOC="75" NC="0" NOF="1" NOM="11" NOP="0" NOPF="0" NOPM="8" Name="Selected" WMC="20"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="10" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CheckLaterForCenterNodeTask" WMC="2"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="3" LCOM="0.56" LOC="70" NC="0" NOF="3" NOM="9" NOP="0" NOPF="1" NOPM="6" Name="MindMapLayout" WMC="14"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="3" FANOUT="0" LCOM="0.00" LOC="60" NC="0" NOF="3" NOM="7" NOP="0" NOPF="0" NOPM="7" Name="MultipleImage" WMC="14"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="4" FANOUT="5" LCOM="0.33" LOC="234" NC="0" NOF="11" NOM="15" NOP="0" NOPF="0" NOPM="11" Name="NodeFoldingComponent" WMC="26"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="3" LCOM="0.22" LOC="126" NC="0" NOF="2" NOM="9" NOP="0" NOPF="0" NOPM="5" Name="RoundImageButtonUI" WMC="22"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="7" FANOUT="5" LCOM="0.00" LOC="58" NC="0" NOF="3" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="NodeMotionListenerView" WMC="9"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="73" FANOUT="21" LCOM="0.07" LOC="1158" NC="0" NOF="25" NOM="107" NOP="0" NOPF="4" NOPM="55" Name="NodeView" WMC="266"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="2" FANOUT="14" LCOM="0.45" LOC="0" NC="0" NOF="6" NOM="11" NOP="0" NOPF="0" NOPM="0" Name="NodeViewFactory" WMC="25"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="6" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ContentPane" WMC="1"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="41" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="ContentPaneLayout" WMC="10"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="9" NC="1" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="0" Name="NodeViewLayout" WMC="4"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="0" FANOUT="6" LCOM="0.27" LOC="290" NC="3" NOF="10" NOM="22" NOP="0" NOPF="0" NOPM="7" Name="NodeViewLayoutAdapter" WMC="55"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="3" FANOUT="1" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="NodeViewVisitor" WMC="1"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="111" NC="0" NOF="0" NOM="6" NOP="0" NOPF="0" NOPM="1" Name="PathBBox" WMC="19"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="2" FANIN="1" FANOUT="4" LCOM="1.00" LOC="47" NC="0" NOF="1" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="RightNodeViewLayout" WMC="7"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="4" LCOM="-1.00" LOC="84" NC="0" NOF="0" NOM="15" NOP="0" NOPF="0" NOPM="9" Name="RootMainView" WMC="19"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="2" LCOM="0.40" LOC="80" NC="0" NOF="8" NOM="5" NOP="0" NOPF="0" NOPM="2" Name="SharpBezierEdgeView" WMC="9"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="1" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="20" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="SharpLinearEdgeView" WMC="3"/>
                <ClassMetric Component="freemind.view.mindmapview" DIT="2" FANIN="2" FANOUT="4" LCOM="1.00" LOC="72" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="VerticalRootNodeViewLayout" WMC="10"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="1" FANOUT="4" LCOM="0.18" LOC="190" NC="0" NOF="10" NOM="22" NOP="0" NOPF="0" NOPM="12" Name="AttributePopupMenu" WMC="44"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="5" FANOUT="12" LCOM="0.23" LOC="0" NC="0" NOF="13" NOM="31" NOP="0" NOPF="0" NOPM="19" Name="AttributeTable" WMC="67"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="44" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="MyFocusListener" WMC="14"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="20" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="HeaderMouseListener" WMC="4"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="43" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="AttributeTableCellRenderer" WMC="10"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="2" FANOUT="4" LCOM="0.38" LOC="52" NC="2" NOF="2" NOM="13" NOP="0" NOPF="0" NOPM="11" Name="AttributeTableModelDecoratorAdapter" WMC="13"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="7" FANOUT="10" LCOM="0.07" LOC="197" NC="0" NOF="9" NOM="27" NOP="0" NOPF="0" NOPM="16" Name="AttributeView" WMC="47"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="19" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="AttributeViewScrollPane" WMC="4"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="1" FANIN="2" FANOUT="2" LCOM="0.42" LOC="80" NC="0" NOF="2" NOM="12" NOP="0" NOPF="0" NOPM="12" Name="ExtendedAttributeTableModelDecorator" WMC="20"/>
                <ClassMetric Component="freemind.view.mindmapview.attributeview" DIT="1" FANIN="1" FANOUT="2" LCOM="0.21" LOC="73" NC="0" NOF="2" NOM="14" NOP="0" NOPF="0" NOPM="10" Name="ReducedAttributeTableModelDecorator" WMC="21"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="0" FANIN="1" FANOUT="9" LCOM="0.50" LOC="191" NC="3" NOF="28" NOM="12" NOP="0" NOPF="2" NOPM="9" Name="DatabaseBasics" WMC="17"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="3" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ResultHandler" WMC="1"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="0" FANIN="2" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FormDialogValidator" WMC="1"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="0" FANIN="2" FANOUT="5" LCOM="0.15" LOC="88" NC="0" NOF="4" NOM="13" NOP="0" NOPF="0" NOPM="11" Name="FormDialog" WMC="14"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="1" FANIN="2" FANOUT="4" LCOM="-1.00" LOC="66" NC="0" NOF="0" NOM="23" NOP="0" NOPF="0" NOPM="22" Name="DatabaseConnectionHook" WMC="24"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="1" FANIN="1" FANOUT="8" LCOM="0.67" LOC="65" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="DatabaseConnector" WMC="7"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="0" FANIN="0" FANOUT="6" LCOM="0.00" LOC="59" NC="0" NOF="3" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="DatabaseRegistration" WMC="15"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="1" FANIN="0" FANOUT="10" LCOM="0.92" LOC="117" NC="0" NOF="1" NOM="24" NOP="0" NOPF="0" NOPM="23" Name="DatabaseStarter" WMC="27"/>
                <ClassMetric Component="plugins.collaboration.database" DIT="1" FANIN="2" FANOUT="10" LCOM="0.11" LOC="284" NC="0" NOF="14" NOM="27" NOP="0" NOPF="0" NOPM="17" Name="UpdateThread" WMC="44"/>
                <ClassMetric Component="plugins.collaboration.jabber" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="JabberStarter" WMC="1"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="2" FANOUT="4" LCOM="0.00" LOC="128" NC="0" NOF="5" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="JabberListener" WMC="4"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="0" FANOUT="5" LCOM="0.00" LOC="83" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="FreeMindJabberMessageListener" WMC="14"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="4" FANOUT="4" LCOM="0.00" LOC="154" NC="0" NOF="10" NOM="10" NOP="0" NOPF="4" NOPM="7" Name="JabberSender" WMC="14"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="4" FANOUT="4" LCOM="0.18" LOC="0" NC="0" NOF="17" NOM="11" NOP="0" NOPF="0" NOPM="8" Name="MapSharingController" WMC="19"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="CloseButtonClickListener" WMC="5"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="33" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="NextButtonClickListener" WMC="9"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="20" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="BackButtonClickListener" WMC="7"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="22" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="AcceptButtonClickListener" WMC="6"/>
                <ClassMetric Component="plugins.collaboration.jabber.mindmap" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="DeclineButtonClickListener" WMC="6"/>
                <ClassMetric Component="plugins.collaboration.jabber.view" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="325" NC="0" NOF="36" NOM="29" NOP="0" NOPF="0" NOPM="20" Name="MapSharingWizardView" WMC="29"/>
                <ClassMetric Component="plugins.collaboration.jabber.view" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="124" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="SpringUtilities" WMC="15"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="2" FANIN="2" FANOUT="9" LCOM="0.18" LOC="206" NC="0" NOF="6" NOM="11" NOP="0" NOPF="0" NOPM="8" Name="ClientCommunication" WMC="33"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="1" FANIN="0" FANOUT="3" LCOM="0.14" LOC="181" NC="2" NOF="19" NOM="14" NOP="0" NOPF="0" NOPM="9" Name="CommunicationBase" WMC="27"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="1" FANIN="1" FANOUT="10" LCOM="0.89" LOC="84" NC="0" NOF="1" NOM="9" NOP="0" NOPF="0" NOPM="5" Name="MindMapClient" WMC="13"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="1" FANIN="3" FANOUT="12" LCOM="0.64" LOC="269" NC="0" NOF="14" NOM="33" NOP="0" NOPF="1" NOPM="28" Name="MindMapMaster" WMC="43"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="1" FANIN="1" FANOUT="2" LCOM="1.00" LOC="50" NC="0" NOF="3" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MasterThread" WMC="5"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="2" FANIN="2" FANOUT="4" LCOM="0.00" LOC="105" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ServerCommunication" WMC="13"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="0" FANIN="1" FANOUT="13" LCOM="0.41" LOC="273" NC="3" NOF="28" NOM="22" NOP="0" NOPF="3" NOPM="12" Name="SocketBasics" WMC="32"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="0" FANIN="2" FANOUT="0" LCOM="-1.00" LOC="6" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FormDialogValidator" WMC="1"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="0" FANIN="2" FANOUT="5" LCOM="0.15" LOC="88" NC="0" NOF="4" NOM="13" NOP="0" NOPF="0" NOPM="11" Name="FormDialog" WMC="14"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="0" FANIN="5" FANOUT="0" LCOM="-1.00" LOC="2" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="UnableToGetLockException" WMC="0"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="1" FANIN="3" FANOUT="5" LCOM="0.73" LOC="80" NC="0" NOF="1" NOM="26" NOP="0" NOPF="0" NOPM="23" Name="SocketConnectionHook" WMC="27"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="0" FANIN="0" FANOUT="6" LCOM="0.00" LOC="59" NC="0" NOF="3" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="SocketRegistration" WMC="15"/>
                <ClassMetric Component="plugins.collaboration.socket" DIT="0" FANIN="0" FANOUT="1" LCOM="0.00" LOC="65" NC="2" NOF="4" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="TerminateableThread" WMC="9"/>
                <ClassMetric Component="plugins.help" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="26" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="FreemindHelpStarter" WMC="1"/>
                <ClassMetric Component="plugins.latex" DIT="0" FANIN="1" FANOUT="1" LCOM="0.29" LOC="71" NC="0" NOF="3" NOM="7" NOP="0" NOPF="0" NOPM="5" Name="JZoomedHotEqn" WMC="11"/>
                <ClassMetric Component="plugins.latex" DIT="0" FANIN="1" FANOUT="4" LCOM="0.00" LOC="80" NC="0" NOF="2" NOM="11" NOP="0" NOPF="0" NOPM="9" Name="LatexNodeHook" WMC="17"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="20" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="AddLinkToMapAction" WMC="4"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="18" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="AddMapImageToNodeAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="8" FANOUT="39" LCOM="0.06" LOC="0" NC="0" NOF="69" NOM="77" NOP="0" NOPF="0" NOPM="60" Name="FreeMindMapController" WMC="176"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="7" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="CursorPositionListener" WMC="1"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="9" NC="0" NOF="2" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="TileSourceStore" WMC="1"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="1.00" LOC="19" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="TransportMap" WMC="4"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="1.00" LOC="19" NC="0" NOF="3" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="MapQuestOpenMap" WMC="4"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="4" LCOM="0.40" LOC="32" NC="0" NOF="4" NOM="5" NOP="0" NOPF="0" NOPM="3" Name="MapEditTextFieldControl" WMC="6"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="3" LCOM="0.67" LOC="13" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="0" Name="MapEditNoteTextField" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="2" LCOM="0.00" LOC="20" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ChangeTileSource" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="PlaceNodeAction" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ShowNodeAction" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="81" NC="4" NOF="0" NOM="7" NOP="0" NOPF="0" NOPM="4" Name="MoveAction" WMC="13"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MoveLeftAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MoveRightAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MoveUpAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MoveDownAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="19" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="MoveForwardAction" WMC="5"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="19" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="MoveBackwardAction" WMC="5"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="4" FANOUT="0" LCOM="0.00" LOC="38" NC="0" NOF="3" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="PositionHolder" WMC="11"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="37" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="MoveHomeAction" WMC="7"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SetHomeAction" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SetDisplayToFitMapMarkers" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ShowMapMarker" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="TileGridVisible" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ZoomControlsVisible" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="HideFoldedNodes" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="SearchControlVisible" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="LimitSearchToRegionAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="GotoSearch" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AddMapPictureToNode" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NewNodeAction" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="NewNodeReverseLookupAction" WMC="4"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="22" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="EditNodeInContextMenu" WMC="5"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="1.00" LOC="14" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MaxmimalZoomToCursorAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="18" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ZoomAction" WMC="4"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="18" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CopyLinkToClipboardAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="22" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="CopyCoordinatesToClipboardAction" WMC="4"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ShowNodeMapInContextMenu" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="10" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SelectNodeInContextMenu" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SelectNodeAndCloseInContextMenu" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="11" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="RemoveNodeLocationInContextMenu" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="2" LCOM="-1.00" LOC="27" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ExportMapAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="ControllerPopupMenuListener" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="1" LCOM="0.67" LOC="23" NC="0" NOF="1" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="AddSearchResultsToMapTask" WMC="4"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="3" FANOUT="3" LCOM="0.25" LOC="123" NC="0" NOF="11" NOM="16" NOP="0" NOPF="0" NOPM="14" Name="JCursorMapViewer" WMC="22"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="8" FANOUT="17" LCOM="0.13" LOC="0" NC="0" NOF="39" NOM="54" NOP="0" NOPF="4" NOPM="46" Name="MapDialog" WMC="100"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="CloseAction" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="1" FANOUT="2" LCOM="0.27" LOC="0" NC="0" NOF="5" NOM="11" NOP="0" NOPF="0" NOPM="11" Name="ResultTableModel" WMC="18"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="3" LCOM="0.25" LOC="92" NC="2" NOF="10" NOM="8" NOP="0" NOPF="1" NOPM="7" Name="MapMarkerBase" WMC="11"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="3" FANOUT="3" LCOM="0.00" LOC="33" NC="0" NOF="1" NOM="6" NOP="0" NOPF="0" NOPM="6" Name="MapMarkerLocation" WMC="6"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="11" FANOUT="8" LCOM="0.09" LOC="272" NC="0" NOF="6" NOM="33" NOP="0" NOPF="0" NOPM="26" Name="MapNodePositionHolder" WMC="47"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="4" NC="1" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="0" Name="MapNodePositionListener" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="1" FANIN="3" FANOUT="1" LCOM="0.29" LOC="52" NC="0" NOF="3" NOM="7" NOP="0" NOPF="1" NOPM="6" Name="MapSearchMarkerLocation" WMC="8"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="4" FANOUT="23" LCOM="0.21" LOC="346" NC="0" NOF="19" NOM="24" NOP="0" NOPF="0" NOPM="21" Name="Registration" WMC="42"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="0" FANOUT="2" LCOM="0.00" LOC="75" NC="0" NOF="3" NOM="3" NOP="0" NOPF="0" NOPM="2" Name="CachePurger" WMC="8"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="13" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AgeFilter" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="3" LCOM="1.00" LOC="14" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="MapDialogPropertyContributor" WMC="2"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="1" LCOM="-1.00" LOC="3" NC="1" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="NodeVisibilityListener" WMC="1"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="19" NC="0" NOF="1" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="RemoveMapToNodeAction" WMC="3"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="6" LCOM="0.00" LOC="59" NC="0" NOF="2" NOM="3" NOP="0" NOPF="0" NOPM="3" Name="SearchInMapForNodeTextAction" WMC="11"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="1" FANOUT="3" LCOM="0.00" LOC="30" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ShowMapToNodeAction" WMC="5"/>
                <ClassMetric Component="plugins.map" DIT="0" FANIN="2" FANOUT="2" LCOM="0.15" LOC="149" NC="0" NOF="7" NOM="13" NOP="0" NOPF="0" NOPM="12" Name="TileImage" WMC="29"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="0" FANOUT="6" LCOM="0.00" LOC="112" NC="0" NOF="6" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ScriptEditor" WMC="3"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="1" LCOM="0.00" LOC="9" NC="0" NOF="2" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="AttributeHolder" WMC="1"/>
                <ClassMetric Component="plugins.script" DIT="1" FANIN="1" FANOUT="9" LCOM="0.30" LOC="84" NC="0" NOF="4" NOM="10" NOP="0" NOPF="0" NOPM="9" Name="NodeScriptModel" WMC="19"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="7" FANOUT="11" LCOM="0.15" LOC="294" NC="0" NOF="17" NOM="13" NOP="0" NOPF="0" NOPM="6" Name="ScriptEditorPanel" WMC="29"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ResultFieldStream" WMC="2"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="RunAction" WMC="3"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="16" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="SignAction" WMC="3"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="8" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="CancelAction" WMC="2"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="9" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="ExitAction" WMC="2"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="12" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="NewScriptAction" WMC="2"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="6" FANOUT="0" LCOM="0.00" LOC="27" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="5" Name="ScriptHolder" WMC="5"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="3" LCOM="-1.00" LOC="18" NC="2" NOF="0" NOM="9" NOP="0" NOPF="0" NOPM="0" Name="ScriptModel" WMC="9"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="5" FANOUT="14" LCOM="0.50" LOC="210" NC="0" NOF="3" NOM="8" NOP="0" NOPF="1" NOPM="5" Name="ScriptingEngine" WMC="31"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="6" FANOUT="0" LCOM="-1.00" LOC="3" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="0" Name="ErrorHandler" WMC="1"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="2" FANOUT="14" LCOM="0.22" LOC="128" NC="0" NOF="8" NOM="9" NOP="0" NOPF="0" NOPM="8" Name="ScriptingRegistration" WMC="12"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="3" LCOM="1.00" LOC="17" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ScriptingPluginPropertyContributor" WMC="2"/>
                <ClassMetric Component="plugins.script" DIT="1" FANIN="1" FANOUT="5" LCOM="0.45" LOC="40" NC="0" NOF="2" NOM="11" NOP="0" NOPF="0" NOPM="11" Name="PatternScriptModel" WMC="12"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="1" FANOUT="1" LCOM="0.45" LOC="133" NC="0" NOF="17" NOM="33" NOP="0" NOPF="0" NOPM="32" Name="ScriptingSecurityManager" WMC="49"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="3" FANOUT="7" LCOM="0.50" LOC="146" NC="0" NOF="8" NOM="4" NOP="0" NOPF="4" NOPM="3" Name="SignedScriptHandler" WMC="12"/>
                <ClassMetric Component="plugins.script" DIT="0" FANIN="2" FANOUT="0" LCOM="0.00" LOC="38" NC="0" NOF="4" NOM="3" NOP="0" NOPF="3" NOPM="3" Name="ScriptContents" WMC="7"/>
                <ClassMetric Component="plugins.svg" DIT="1" FANIN="0" FANOUT="7" LCOM="0.00" LOC="125" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="ExportPdf" WMC="18"/>
                <ClassMetric Component="plugins.svg" DIT="0" FANIN="1" FANOUT="2" LCOM="0.18" LOC="171" NC="0" NOF="13" NOM="11" NOP="0" NOPF="0" NOPM="7" Name="ExportPdfDialog" WMC="17"/>
                <ClassMetric Component="plugins.svg" DIT="0" FANIN="1" FANOUT="0" LCOM="0.00" LOC="67" NC="0" NOF="2" NOM="5" NOP="0" NOPF="0" NOPM="1" Name="ExportPdfPapers" WMC="7"/>
                <ClassMetric Component="plugins.svg" DIT="1" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="30" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="ExportSvg" WMC="3"/>
                <ClassMetric Component="plugins.svg" DIT="0" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="80" NC="2" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="2" Name="ExportVectorGraphic" WMC="7"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="0" FANOUT="0" LCOM="-1.00" LOC="25" NC="0" NOF="0" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="AllTests" WMC="3"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="14" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="Base64Tests" WMC="1"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="69" NC="0" NOF="0" NOM="13" NOP="0" NOPF="0" NOPM="13" Name="DontShowAgainDialogTests" WMC="13"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="3" LCOM="0.75" LOC="45" NC="0" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="ExportTests" WMC="4"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="5" FANOUT="4" LCOM="0.93" LOC="131" NC="0" NOF="1" NOM="43" NOP="0" NOPF="0" NOPM="43" Name="FreeMindMainMock" WMC="43"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="2" LCOM="0.75" LOC="62" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="FreeMindTaskTests" WMC="5"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="1" FANOUT="0" LCOM="1.00" LOC="19" NC="0" NOF="2" NOM="2" NOP="0" NOPF="0" NOPM="1" Name="TestTask" WMC="2"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="0" FANOUT="1" LCOM="0.75" LOC="22" NC="13" NOF="1" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="FreeMindTestBase" WMC="4"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="4" LCOM="-1.00" LOC="112" NC="0" NOF="0" NOM="16" NOP="0" NOPF="0" NOPM="13" Name="HtmlConversionTests" WMC="16"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="15" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="LastOpenedTests" WMC="1"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="2" LCOM="0.00" LOC="67" NC="0" NOF="2" NOM="6" NOP="0" NOPF="0" NOPM="4" Name="LastStorageManagementTests" WMC="10"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="11" LCOM="0.40" LOC="176" NC="0" NOF="6" NOM="15" NOP="0" NOPF="0" NOPM="8" Name="LayoutTests" WMC="16"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="2" LCOM="-1.00" LOC="44" NC="0" NOF="0" NOM="4" NOP="0" NOPF="0" NOPM="4" Name="MarshallerTests" WMC="4"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="1" FANOUT="10" LCOM="0.97" LOC="203" NC="0" NOF="2" NOM="77" NOP="0" NOPF="0" NOPM="77" Name="MindMapControllerMock" WMC="77"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="1" FANOUT="3" LCOM="0.98" LOC="113" NC="0" NOF="1" NOM="40" NOP="0" NOPF="0" NOPM="40" Name="MindMapMock" WMC="40"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="0" FANOUT="0" LCOM="0.00" LOC="277" NC="0" NOF="1" NOM="88" NOP="0" NOPF="0" NOPM="87" Name="PrintGraphics" WMC="88"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="2" LCOM="1.00" LOC="61" NC="0" NOF="1" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="ScriptEditorPanelTest" WMC="2"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="0" FANOUT="3" LCOM="0.78" LOC="48" NC="0" NOF="1" NOM="9" NOP="0" NOPF="0" NOPM="9" Name="TestScriptModel" WMC="9"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="0" FANOUT="2" LCOM="0.00" LOC="25" NC="0" NOF="5" NOM="2" NOP="0" NOPF="0" NOPM="2" Name="SignedScriptTests" WMC="2"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="1" LCOM="-1.00" LOC="13" NC="0" NOF="0" NOM="1" NOP="0" NOPF="0" NOPM="1" Name="SplashTests" WMC="2"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="5" LCOM="0.52" LOC="177" NC="0" NOF="3" NOM="23" NOP="0" NOPF="0" NOPM="18" Name="ToolsTests" WMC="26"/>
                <ClassMetric Component="tests.freemind" DIT="0" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="2" NC="1" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="A" WMC="0"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="1" FANOUT="0" LCOM="-1.00" LOC="2" NC="0" NOF="0" NOM="0" NOP="0" NOPF="0" NOPM="0" Name="B" WMC="0"/>
                <ClassMetric Component="tests.freemind" DIT="1" FANIN="0" FANOUT="5" LCOM="0.22" LOC="86" NC="0" NOF="3" NOM="9" NOP="0" NOPF="0" NOPM="6" Name="TransformTest" WMC="14"/>
                <ClassMetric Component="tests.freemind.findreplace" DIT="0" FANIN="0" FANOUT="5" LCOM="0.92" LOC="113" NC="0" NOF="2" NOM="12" NOP="0" NOPF="0" NOPM="11" Name="FindTextTests" WMC="14"/>
                <ClassMetric Component="tests.freemind.findreplace" DIT="0" FANIN="1" FANOUT="2" LCOM="0.50" LOC="20" NC="0" NOF="2" NOM="4" NOP="0" NOPF="0" NOPM="3" Name="TestReplaceInputInfo" WMC="4"/>
                <ClassMetric Component="tests.freemind.findreplace" DIT="0" FANIN="2" FANOUT="11" LCOM="0.97" LOC="309" NC="0" NOF="1" NOM="113" NOP="0" NOPF="0" NOPM="113" Name="TestMindMapNode" WMC="115"/>
            </ClassMetrics>
            <MethodMetrics>
                <MethodMetric CC="1" Class="ApplyFormatPlugin" Component="accessories.plugins" LOC="3" Name="ApplyFormatPlugin" PC="0"/>
                <MethodMetric CC="3" Class="ApplyFormatPlugin" Component="accessories.plugins" LOC="15" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="AutomaticLayout" Component="accessories.plugins" LOC="3" Name="AutomaticLayout" PC="0"/>
                <MethodMetric CC="2" Class="AutomaticLayout" Component="accessories.plugins" LOC="10" Name="setStyle" PC="1"/>
                <MethodMetric CC="2" Class="AutomaticLayout" Component="accessories.plugins" LOC="4" Name="depth" PC="1"/>
                <MethodMetric CC="1" Class="AutomaticLayout" Component="accessories.plugins" LOC="5" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="AutomaticLayout" Component="accessories.plugins" LOC="4" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="AutomaticLayout" Component="accessories.plugins" LOC="4" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="AutomaticLayout" Component="accessories.plugins" LOC="4" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="AutomaticLayout" Component="accessories.plugins" LOC="6" Name="reloadPatterns" PC="0"/>
                <MethodMetric CC="2" Class="AutomaticLayout" Component="accessories.plugins" LOC="8" Name="setStyleRecursive" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="Registration" PC="2"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="8" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="4" Name="deRegister" PC="0"/>
                <MethodMetric CC="2" Class="MyFreemindPropertyListener" Component="accessories.plugins" LOC="5" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="1" Class="StylePropertyTranslator" Component="accessories.plugins" LOC="4" Name="StylePropertyTranslator" PC="1"/>
                <MethodMetric CC="1" Class="StylePropertyTranslator" Component="accessories.plugins" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="10" Name="StylePatternProperty" PC="4"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="7" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="2" Class="StylePatternProperty" Component="accessories.plugins" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="3" Name="getPatternFromString" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternProperty" Component="accessories.plugins" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternListProperty" Component="accessories.plugins" LOC="13" Name="StylePatternListProperty" PC="4"/>
                <MethodMetric CC="1" Class="StylePatternListProperty" Component="accessories.plugins" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternListProperty" Component="accessories.plugins" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="2" Class="StylePatternListProperty" Component="accessories.plugins" LOC="12" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternListProperty" Component="accessories.plugins" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternListProperty" Component="accessories.plugins" LOC="7" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="StylePatternListProperty" Component="accessories.plugins" LOC="3" Name="getPatternsFromString" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternListProperty" Component="accessories.plugins" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="4" Class="StylePatternListProperty" Component="accessories.plugins" LOC="27" Name="valueChanged" PC="1"/>
                <MethodMetric CC="3" Class="StylePatternListProperty" Component="accessories.plugins" LOC="17" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="AutomaticLayoutPropertyContributor" Component="accessories.plugins" LOC="3" Name="AutomaticLayoutPropertyContributor" PC="1"/>
                <MethodMetric CC="1" Class="AutomaticLayoutPropertyContributor" Component="accessories.plugins" LOC="7" Name="getControls" PC="1"/>
                <MethodMetric CC="1" Class="BlinkingNodeHook" Component="accessories.plugins" LOC="3" Name="BlinkingNodeHook" PC="0"/>
                <MethodMetric CC="2" Class="BlinkingNodeHook" Component="accessories.plugins" LOC="8" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="BlinkingNodeHook" Component="accessories.plugins" LOC="6" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="TimerColorChanger" Component="accessories.plugins" LOC="7" Name="TimerColorChanger" PC="0"/>
                <MethodMetric CC="5" Class="TimerColorChanger" Component="accessories.plugins" LOC="24" Name="run" PC="0"/>
                <MethodMetric CC="5" Class="TimerColorChanger" Component="accessories.plugins" LOC="19" Name="run" PC="0"/>
                <MethodMetric CC="4" Class="TimerColorChanger" Component="accessories.plugins" LOC="13" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="ChangeNodeLevelAction" Component="accessories.plugins" LOC="3" Name="ChangeNodeLevelAction" PC="0"/>
                <MethodMetric CC="15" Class="ChangeNodeLevelAction" Component="accessories.plugins" LOC="83" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="ChangeNodeLevelAction" Component="accessories.plugins" LOC="9" Name="select" PC="2"/>
                <MethodMetric CC="1" Class="ChangeRootNode" Component="accessories.plugins" LOC="5" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="ChangeRootNode" Component="accessories.plugins" LOC="5" Name="getAction" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="5" Name="Registration" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="deRegister" PC="0"/>
                <MethodMetric CC="7" Class="Registration" Component="accessories.plugins" LOC="40" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="ClonePasteAction" Component="accessories.plugins" LOC="2" Name="ClonePasteAction" PC="0"/>
                <MethodMetric CC="3" Class="ClonePasteAction" Component="accessories.plugins" LOC="18" Name="invoke" PC="1"/>
                <MethodMetric CC="3" Class="ClonePasteAction" Component="accessories.plugins" LOC="16" Name="addNewClone" PC="3"/>
                <MethodMetric CC="1" Class="ClonePasteAction" Component="accessories.plugins" LOC="3" Name="getMindMapNodes" PC="0"/>
                <MethodMetric CC="1" Class="ClonePasteAction" Component="accessories.plugins" LOC="3" Name="getRegistration" PC="0"/>
                <MethodMetric CC="1" Class="ClonePropertiesObserver" Component="accessories.plugins" LOC="0" Name="propertiesChanged" PC="1"/>
                <MethodMetric CC="1" Class="CloneProperties" Component="accessories.plugins" LOC="3" Name="isCloneItself" PC="0"/>
                <MethodMetric CC="3" Class="CloneProperties" Component="accessories.plugins" LOC="10" Name="setCloneItself" PC="1"/>
                <MethodMetric CC="1" Class="CloneProperties" Component="accessories.plugins" LOC="3" Name="registerObserver" PC="1"/>
                <MethodMetric CC="1" Class="CloneProperties" Component="accessories.plugins" LOC="3" Name="deregisterObserver" PC="1"/>
                <MethodMetric CC="2" Class="CloneProperties" Component="accessories.plugins" LOC="6" Name="firePropertiesChanged" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="5" Name="Registration" PC="2"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="9" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="4" Name="deRegister" PC="0"/>
                <MethodMetric CC="5" Class="Registration" Component="accessories.plugins" LOC="16" Name="isEnabled" PC="2"/>
                <MethodMetric CC="3" Class="Registration" Component="accessories.plugins" LOC="17" Name="getMindMapNodes" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="generateNewCloneId" PC="1"/>
                <MethodMetric CC="4" Class="Registration" Component="accessories.plugins" LOC="23" Name="registerClone" PC="2"/>
                <MethodMetric CC="4" Class="Registration" Component="accessories.plugins" LOC="20" Name="deregisterClone" PC="2"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="6" Name="getCloneProperties" PC="1"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="11" Name="getHashSetToCloneId" PC="1"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="9" Name="filterAction" PC="1"/>
                <MethodMetric CC="4" Class="Registration" Component="accessories.plugins" LOC="22" Name="cloneAction" PC="1"/>
                <MethodMetric CC="3" Class="Registration" Component="accessories.plugins" LOC="13" Name="cloneAction" PC="2"/>
                <MethodMetric CC="7" Class="Registration" Component="accessories.plugins" LOC="29" Name="getNewCompoundAction" PC="3"/>
                <MethodMetric CC="4" Class="Registration" Component="accessories.plugins" LOC="13" Name="changeNodeListMember" PC="3"/>
                <MethodMetric CC="13" Class="Registration" Component="accessories.plugins" LOC="52" Name="getCorrespondingNodes" PC="2"/>
                <MethodMetric CC="11" Class="Registration" Component="accessories.plugins" LOC="53" Name="getCorrespondingNodes" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="addNodePosition" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="8" Name="printNodeId" PC="1"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="8" Name="printNodeIds" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="6" Class="Registration" Component="accessories.plugins" LOC="22" Name="markShadowNode" PC="2"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="15" Name="markShadowNode" PC="2"/>
                <MethodMetric CC="5" Class="Registration" Component="accessories.plugins" LOC="15" Name="selectShadowNode" PC="3"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="4" Name="setIcon" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="onSelectionChange" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="onUpdateNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="onSaveNode" PC="1"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="2" Name="ClonePlugin" PC="0"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="4" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="4" Name="addClone" PC="1"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="3" Name="clearCloneCache" PC="0"/>
                <MethodMetric CC="2" Class="ClonePlugin" Component="accessories.plugins" LOC="12" Name="disablePlugin" PC="0"/>
                <MethodMetric CC="2" Class="ClonePlugin" Component="accessories.plugins" LOC="5" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="4" Name="toggleHook" PC="0"/>
                <MethodMetric CC="2" Class="ClonePlugin" Component="accessories.plugins" LOC="18" Name="save" PC="1"/>
                <MethodMetric CC="2" Class="ClonePlugin" Component="accessories.plugins" LOC="9" Name="getCloneIdsAsString" PC="0"/>
                <MethodMetric CC="4" Class="ClonePlugin" Component="accessories.plugins" LOC="21" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="5" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="6" Class="ClonePlugin" Component="accessories.plugins" LOC="25" Name="registerPlugin" PC="0"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="3" Name="getRegistration" PC="0"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="7" Name="deregisterPlugin" PC="0"/>
                <MethodMetric CC="4" Class="ClonePlugin" Component="accessories.plugins" LOC="12" Name="onCreateNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="2" Name="onPreDeleteNode" PC="1"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="2" Name="onPostDeleteNode" PC="2"/>
                <MethodMetric CC="6" Class="ClonePlugin" Component="accessories.plugins" LOC="26" Name="getCloneNodes" PC="0"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="8" Name="printNodeId" PC="1"/>
                <MethodMetric CC="2" Class="ClonePlugin" Component="accessories.plugins" LOC="8" Name="printNodeIds" PC="1"/>
                <MethodMetric CC="2" Class="ClonePlugin" Component="accessories.plugins" LOC="5" Name="checkForChainError" PC="3"/>
                <MethodMetric CC="2" Class="ClonePlugin" Component="accessories.plugins" LOC="7" Name="removeClone" PC="1"/>
                <MethodMetric CC="4" Class="ClonePlugin" Component="accessories.plugins" LOC="13" Name="getHook" PC="1"/>
                <MethodMetric CC="4" Class="ClonePlugin" Component="accessories.plugins" LOC="16" Name="processUnfinishedLinks" PC="0"/>
                <MethodMetric CC="1" Class="ClonePlugin" Component="accessories.plugins" LOC="3" Name="propertiesChanged" PC="1"/>
                <MethodMetric CC="1" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="3" Name="CreationModificationPlugin" PC="0"/>
                <MethodMetric CC="2" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="10" Name="setStyle" PC="1"/>
                <MethodMetric CC="1" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="4" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="2" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="7" Name="removeToolTipRecursively" PC="1"/>
                <MethodMetric CC="1" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="4" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="4" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="4" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="8" Name="setStyleRecursive" PC="1"/>
                <MethodMetric CC="1" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="3" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="CreationModificationPlugin" Component="accessories.plugins" LOC="3" Name="onNewChild" PC="1"/>
                <MethodMetric CC="1" Class="EncryptNode" Component="accessories.plugins" LOC="3" Name="EncryptNode" PC="0"/>
                <MethodMetric CC="4" Class="EncryptNode" Component="accessories.plugins" LOC="21" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="EncryptNode" Component="accessories.plugins" LOC="13" Name="newEncryptedMap" PC="0"/>
                <MethodMetric CC="2" Class="EncryptNode" Component="accessories.plugins" LOC="21" Name="encrypt" PC="1"/>
                <MethodMetric CC="1" Class="EncryptNode" Component="accessories.plugins" LOC="5" Name="createNode" PC="2"/>
                <MethodMetric CC="2" Class="EncryptNode" Component="accessories.plugins" LOC="10" Name="getUsersPassword" PC="0"/>
                <MethodMetric CC="3" Class="EncryptNode" Component="accessories.plugins" LOC="20" Name="toggleCryptState" PC="1"/>
                <MethodMetric CC="4" Class="EncryptNode" Component="accessories.plugins" LOC="16" Name="doPasswordCheckAndDecryptNode" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="5" Name="Registration" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="deRegister" PC="0"/>
                <MethodMetric CC="4" Class="Registration" Component="accessories.plugins" LOC="17" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="ExportToImage" Component="accessories.plugins" LOC="3" Name="ExportToImage" PC="0"/>
                <MethodMetric CC="2" Class="ExportToImage" Component="accessories.plugins" LOC="8" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="2" Class="ExportToImage" Component="accessories.plugins" LOC="17" Name="exportToImage" PC="3"/>
                <MethodMetric CC="1" Class="ExportToImage" Component="accessories.plugins" LOC="16" Name="transForm" PC="4"/>
                <MethodMetric CC="2" Class="ExportToOoWriter" Component="accessories.plugins" LOC="6" Name="ExportToOoWriter" PC="0"/>
                <MethodMetric CC="2" Class="ExportToOoWriter" Component="accessories.plugins" LOC="15" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="ExportToOoWriter" Component="accessories.plugins" LOC="6" Name="exportToOoWriter" PC="1"/>
                <MethodMetric CC="2" Class="ExportToOoWriter" Component="accessories.plugins" LOC="21" Name="applyXsltFile" PC="3"/>
                <MethodMetric CC="4" Class="ExportToOoWriter" Component="accessories.plugins" LOC="25" Name="exportToOoWriter" PC="3"/>
                <MethodMetric CC="2" Class="ExportToOoWriter" Component="accessories.plugins" LOC="18" Name="copyFromResource" PC="2"/>
                <MethodMetric CC="2" Class="ExportWithXSLT" Component="accessories.plugins" LOC="7" Name="chooseFile" PC="0"/>
                <MethodMetric CC="1" Class="ExportWithXSLT" Component="accessories.plugins" LOC="3" Name="ExportWithXSLT" PC="0"/>
                <MethodMetric CC="8" Class="ExportWithXSLT" Component="accessories.plugins" LOC="39" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="8" Class="ExportWithXSLT" Component="accessories.plugins" LOC="31" Name="transform" PC="1"/>
                <MethodMetric CC="1" Class="ExportWithXSLT" Component="accessories.plugins" LOC="6" Name="copyMap" PC="1"/>
                <MethodMetric CC="2" Class="ExportWithXSLT" Component="accessories.plugins" LOC="9" Name="copyIcons" PC="1"/>
                <MethodMetric CC="2" Class="ExportWithXSLT" Component="accessories.plugins" LOC="12" Name="createImageFromMap" PC="1"/>
                <MethodMetric CC="5" Class="ExportWithXSLT" Component="accessories.plugins" LOC="24" Name="copyIconsToDirectory" PC="1"/>
                <MethodMetric CC="1" Class="ExportWithXSLT" Component="accessories.plugins" LOC="3" Name="accept" PC="2"/>
                <MethodMetric CC="2" Class="ExportWithXSLT" Component="accessories.plugins" LOC="7" Name="copyFilesFromResourcesToDirectory" PC="3"/>
                <MethodMetric CC="2" Class="ExportWithXSLT" Component="accessories.plugins" LOC="7" Name="createDirectory" PC="1"/>
                <MethodMetric CC="2" Class="ExportWithXSLT" Component="accessories.plugins" LOC="11" Name="transformMapWithXslt" PC="3"/>
                <MethodMetric CC="1" Class="ExportWithXSLT" Component="accessories.plugins" LOC="5" Name="getMapXml" PC="0"/>
                <MethodMetric CC="2" Class="ExportWithXSLT" Component="accessories.plugins" LOC="9" Name="getAreaCode" PC="1"/>
                <MethodMetric CC="1" Class="ExportWithXSLT" Component="accessories.plugins" LOC="4" Name="export" PC="1"/>
                <MethodMetric CC="1" Class="ExportWithXSLT" Component="accessories.plugins" LOC="18" Name="transform" PC="4"/>
                <MethodMetric CC="1" Class="ExportWithXSLT" Component="accessories.plugins" LOC="3" Name="isTransformResultWithoutError" PC="0"/>
                <MethodMetric CC="1" Class="FitToPage" Component="accessories.plugins" LOC="3" Name="FitToPage" PC="0"/>
                <MethodMetric CC="2" Class="FitToPage" Component="accessories.plugins" LOC="12" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="FitToPage" Component="accessories.plugins" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FitToPage" Component="accessories.plugins" LOC="3" Name="shift" PC="4"/>
                <MethodMetric CC="1" Class="FitToPage" Component="accessories.plugins" LOC="5" Name="scroll" PC="0"/>
                <MethodMetric CC="2" Class="FitToPage" Component="accessories.plugins" LOC="15" Name="zoom" PC="0"/>
                <MethodMetric CC="1" Class="FormatNewNodes" Component="accessories.plugins" LOC="6" Name="FormatNewNodes" PC="2"/>
                <MethodMetric CC="1" Class="FormatNewNodes" Component="accessories.plugins" LOC="4" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="FormatNewNodes" Component="accessories.plugins" LOC="4" Name="deRegister" PC="0"/>
                <MethodMetric CC="1" Class="FormatNewNodes" Component="accessories.plugins" LOC="3" Name="executeAction" PC="1"/>
                <MethodMetric CC="4" Class="FormatNewNodes" Component="accessories.plugins" LOC="12" Name="detectFormatChanges" PC="1"/>
                <MethodMetric CC="1" Class="FormatNewNodes" Component="accessories.plugins" LOC="2" Name="startTransaction" PC="1"/>
                <MethodMetric CC="1" Class="FormatNewNodes" Component="accessories.plugins" LOC="2" Name="endTransaction" PC="1"/>
                <MethodMetric CC="3" Class="FormatNewNodes" Component="accessories.plugins" LOC="16" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="FormatPaste" Component="accessories.plugins" LOC="3" Name="FormatPaste" PC="0"/>
                <MethodMetric CC="2" Class="FormatPaste" Component="accessories.plugins" LOC="10" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="FormatPaste" Component="accessories.plugins" LOC="7" Name="pasteFormat" PC="1"/>
                <MethodMetric CC="1" Class="FormatPaste" Component="accessories.plugins" LOC="3" Name="copyFormat" PC="1"/>
                <MethodMetric CC="1" Class="FormularEditor" Component="accessories.plugins" LOC="4" Name="FormularEditor" PC="0"/>
                <MethodMetric CC="7" Class="FormularEditor" Component="accessories.plugins" LOC="20" Name="loadFrom" PC="1"/>
                <MethodMetric CC="2" Class="FormularEditor" Component="accessories.plugins" LOC="10" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="FormularEditor" Component="accessories.plugins" LOC="4" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="2" Class="FormularEditor" Component="accessories.plugins" LOC="8" Name="shutDownDisplay" PC="0"/>
                <MethodMetric CC="3" Class="FormularEditor" Component="accessories.plugins" LOC="16" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="FormularEditor" Component="accessories.plugins" LOC="4" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="setLabel" PC="1"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="6" Name="FormularEntity" PC="4"/>
                <MethodMetric CC="2" Class="FormularEntity" Component="accessories.plugins" LOC="13" Name="addToPanel" PC="3"/>
                <MethodMetric CC="2" Class="FormularEntity" Component="accessories.plugins" LOC="6" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="getDisplayLabel" PC="0"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="FormularEntity" PC="1"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="getType" PC="0"/>
                <MethodMetric CC="1" Class="FormularEntity" Component="accessories.plugins" LOC="3" Name="setDisplayLabel" PC="1"/>
                <MethodMetric CC="1" Class="StringEntity" Component="accessories.plugins" LOC="31" Name="addToPanel" PC="3"/>
                <MethodMetric CC="1" Class="StringEntity" Component="accessories.plugins" LOC="3" Name="insertUpdate" PC="1"/>
                <MethodMetric CC="1" Class="StringEntity" Component="accessories.plugins" LOC="3" Name="removeUpdate" PC="1"/>
                <MethodMetric CC="1" Class="StringEntity" Component="accessories.plugins" LOC="10" Name="changedUpdate" PC="1"/>
                <MethodMetric CC="1" Class="StringEntity" Component="accessories.plugins" LOC="3" Name="StringEntity" PC="1"/>
                <MethodMetric CC="1" Class="CheckBoxEntity" Component="accessories.plugins" LOC="3" Name="CheckBoxEntity" PC="1"/>
                <MethodMetric CC="2" Class="CheckBoxEntity" Component="accessories.plugins" LOC="24" Name="addToPanel" PC="3"/>
                <MethodMetric CC="2" Class="CheckBoxEntity" Component="accessories.plugins" LOC="8" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="5" Class="ChoiceEntity" Component="accessories.plugins" LOC="32" Name="addToPanel" PC="3"/>
                <MethodMetric CC="1" Class="ChoiceEntity" Component="accessories.plugins" LOC="4" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="3" Class="ChoiceEntity" Component="accessories.plugins" LOC="10" Name="ChoiceEntity" PC="1"/>
                <MethodMetric CC="2" Class="ChoiceEntity" Component="accessories.plugins" LOC="9" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="ChoiceElement" Component="accessories.plugins" LOC="4" Name="ChoiceElement" PC="1"/>
                <MethodMetric CC="1" Class="ChoiceElement" Component="accessories.plugins" LOC="4" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="HierarchicalIcons" Component="accessories.plugins" LOC="5" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="2" Class="HierarchicalIcons" Component="accessories.plugins" LOC="8" Name="removeIcons" PC="1"/>
                <MethodMetric CC="1" Class="HierarchicalIcons" Component="accessories.plugins" LOC="3" Name="HierarchicalIcons" PC="0"/>
                <MethodMetric CC="8" Class="HierarchicalIcons" Component="accessories.plugins" LOC="34" Name="setStyle" PC="1"/>
                <MethodMetric CC="4" Class="HierarchicalIcons" Component="accessories.plugins" LOC="11" Name="addAccumulatedIconsToTreeSet" PC="3"/>
                <MethodMetric CC="1" Class="HierarchicalIcons" Component="accessories.plugins" LOC="5" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="HierarchicalIcons" Component="accessories.plugins" LOC="5" Name="onRemoveChildren" PC="2"/>
                <MethodMetric CC="1" Class="HierarchicalIcons" Component="accessories.plugins" LOC="4" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="HierarchicalIcons" Component="accessories.plugins" LOC="4" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="HierarchicalIcons" Component="accessories.plugins" LOC="5" Name="invoke" PC="1"/>
                <MethodMetric CC="3" Class="HierarchicalIcons" Component="accessories.plugins" LOC="10" Name="gatherLeavesAndSetStyle" PC="1"/>
                <MethodMetric CC="4" Class="HierarchicalIcons" Component="accessories.plugins" LOC="12" Name="gatherLeavesAndSetParentsStyle" PC="1"/>
                <MethodMetric CC="2" Class="HierarchicalIcons" Component="accessories.plugins" LOC="6" Name="setStyleRecursive" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPlugin" Component="accessories.plugins" LOC="3" Name="IconSelectionPlugin" PC="0"/>
                <MethodMetric CC="2" Class="IconSelectionPlugin" Component="accessories.plugins" LOC="22" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="ImportMindmanagerFiles" Component="accessories.plugins" LOC="3" Name="ImportMindmanagerFiles" PC="0"/>
                <MethodMetric CC="2" Class="ImportMindmanagerFiles" Component="accessories.plugins" LOC="13" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="5" Class="ImportMindmanagerFiles" Component="accessories.plugins" LOC="33" Name="importMindmanagerFile" PC="1"/>
                <MethodMetric CC="1" Class="ImportMindmanagerFiles" Component="accessories.plugins" LOC="15" Name="transForm" PC="2"/>
                <MethodMetric CC="1" Class="JumpLastEditLocation" Component="accessories.plugins" LOC="2" Name="JumpLastEditLocation" PC="0"/>
                <MethodMetric CC="2" Class="JumpLastEditLocation" Component="accessories.plugins" LOC="15" Name="invoke" PC="1"/>
                <MethodMetric CC="5" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="29" Name="getLastEditLocation" PC="1"/>
                <MethodMetric CC="1" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="5" Name="JumpLastEditLocationRegistration" PC="2"/>
                <MethodMetric CC="1" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="3" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="3" Name="deRegister" PC="0"/>
                <MethodMetric CC="1" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="3" Name="executeAction" PC="1"/>
                <MethodMetric CC="9" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="36" Name="detectFormatChanges" PC="1"/>
                <MethodMetric CC="1" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="2" Name="startTransaction" PC="1"/>
                <MethodMetric CC="1" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="2" Name="endTransaction" PC="1"/>
                <MethodMetric CC="2" Class="JumpLastEditLocationRegistration" Component="accessories.plugins" LOC="7" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="getRegistration" PC="0"/>
                <MethodMetric CC="5" Class="LogFileViewer" Component="accessories.plugins" LOC="54" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="getBaseLogger" PC="0"/>
                <MethodMetric CC="3" Class="LogFileViewer" Component="accessories.plugins" LOC="10" Name="getBaseHandler" PC="0"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="2" Class="LogFileViewer" Component="accessories.plugins" LOC="13" Name="disposeDialog" PC="0"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="2" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="3" Name="getCloseAction" PC="0"/>
                <MethodMetric CC="1" Class="LogFileViewer" Component="accessories.plugins" LOC="4" Name="receiveLog" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="Registration" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="deRegister" PC="0"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="10" Name="togglePrintAction" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="isPrintActionActive" PC="0"/>
                <MethodMetric CC="1" Class="CloseAction" Component="accessories.plugins" LOC="3" Name="CloseAction" PC="0"/>
                <MethodMetric CC="1" Class="CloseAction" Component="accessories.plugins" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PrintOperationAction" Component="accessories.plugins" LOC="3" Name="PrintOperationAction" PC="0"/>
                <MethodMetric CC="1" Class="PrintOperationAction" Component="accessories.plugins" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PrintOperationAction" Component="accessories.plugins" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="SetLogLevelAction" Component="accessories.plugins" LOC="4" Name="SetLogLevelAction" PC="1"/>
                <MethodMetric CC="2" Class="SetLogLevelAction" Component="accessories.plugins" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SetLogLevelAction" Component="accessories.plugins" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="6" Class="UpdateTextAreaThread" Component="accessories.plugins" LOC="36" Name="run" PC="0"/>
                <MethodMetric CC="3" Class="UpdateTextAreaThread" Component="accessories.plugins" LOC="18" Name="run" PC="0"/>
                <MethodMetric CC="3" Class="UpdateTextAreaThread" Component="accessories.plugins" LOC="8" Name="commitSuicide" PC="0"/>
                <MethodMetric CC="1" Class="UpdateTextAreaThread" Component="accessories.plugins" LOC="8" Name="sleepALittle" PC="0"/>
                <MethodMetric CC="1" Class="UpdateTextAreaThread" Component="accessories.plugins" LOC="5" Name="addToInbox" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatterns" Component="accessories.plugins" LOC="3" Name="ManagePatterns" PC="0"/>
                <MethodMetric CC="2" Class="ManagePatterns" Component="accessories.plugins" LOC="18" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="NewParentNode" Component="accessories.plugins" LOC="3" Name="NewParentNode" PC="0"/>
                <MethodMetric CC="7" Class="NewParentNode" Component="accessories.plugins" LOC="40" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="NewParentNode" Component="accessories.plugins" LOC="6" Name="moveToNewParent" PC="3"/>
                <MethodMetric CC="5" Class="NewParentNode" Component="accessories.plugins" LOC="21" Name="moveToOtherNode" PC="4"/>
                <MethodMetric CC="1" Class="NodeHistory" Component="accessories.plugins" LOC="3" Name="NodeHistory" PC="0"/>
                <MethodMetric CC="11" Class="NodeHistory" Component="accessories.plugins" LOC="63" Name="invoke" PC="1"/>
                <MethodMetric CC="5" Class="NodeHistory" Component="accessories.plugins" LOC="20" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="NodeHistory" Component="accessories.plugins" LOC="11" Name="printVector" PC="0"/>
                <MethodMetric CC="2" Class="NodeHolder" Component="accessories.plugins" LOC="8" Name="NodeHolder" PC="2"/>
                <MethodMetric CC="2" Class="NodeHolder" Component="accessories.plugins" LOC="7" Name="getNode" PC="1"/>
                <MethodMetric CC="2" Class="NodeHolder" Component="accessories.plugins" LOC="8" Name="getModeController" PC="1"/>
                <MethodMetric CC="3" Class="NodeHolder" Component="accessories.plugins" LOC="12" Name="getMapModule" PC="1"/>
                <MethodMetric CC="2" Class="NodeHolder" Component="accessories.plugins" LOC="8" Name="isIdentical" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="5" Name="Registration" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="deRegister" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="6" Class="Registration" Component="accessories.plugins" LOC="18" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="onSaveNode" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="onUpdateNodeHook" PC="1"/>
                <MethodMetric CC="2" Class="Registration" Component="accessories.plugins" LOC="9" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="onSelectionChange" PC="2"/>
                <MethodMetric CC="3" Class="NodeNote" Component="accessories.plugins" LOC="23" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="NodeNote" Component="accessories.plugins" LOC="3" Name="requestFocusForNotePanel" PC="0"/>
                <MethodMetric CC="2" Class="NodeNote" Component="accessories.plugins" LOC="10" Name="getSplitPaneToScreen" PC="1"/>
                <MethodMetric CC="2" Class="NodeNote" Component="accessories.plugins" LOC="9" Name="openSplitPane" PC="2"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="4" Name="NodeNoteRegistration" PC="2"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="3" Name="shouldUseSplitPane" PC="0"/>
                <MethodMetric CC="2" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="16" Name="register" PC="0"/>
                <MethodMetric CC="2" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="11" Name="deRegister" PC="0"/>
                <MethodMetric CC="4" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="34" Name="showNotesPanel" PC="0"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="5" Name="hideNotesPanel" PC="0"/>
                <MethodMetric CC="4" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="13" Name="setStateIcon" PC="2"/>
                <MethodMetric CC="4" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="16" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="3" Name="changeNoteText" PC="2"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="3" Name="getNoteViewerComponent" PC="0"/>
                <MethodMetric CC="3" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="12" Name="getHtmlEditorPanel" PC="0"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="3" Name="getSplitPane" PC="0"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="5" Name="getDocumentText" PC="0"/>
                <MethodMetric CC="2" Class="NodeNoteRegistration" Component="accessories.plugins" LOC="4" Name="normalizeString" PC="1"/>
                <MethodMetric CC="4" Class="SimplyHtmlResources" Component="accessories.plugins" LOC="15" Name="getString" PC="1"/>
                <MethodMetric CC="1" Class="SouthPanel" Component="accessories.plugins" LOC="4" Name="SouthPanel" PC="0"/>
                <MethodMetric CC="1" Class="SouthPanel" Component="accessories.plugins" LOC="3" Name="processKeyBinding" PC="4"/>
                <MethodMetric CC="1" Class="NoteDocumentListener" Component="accessories.plugins" LOC="3" Name="changedUpdate" PC="1"/>
                <MethodMetric CC="3" Class="NoteDocumentListener" Component="accessories.plugins" LOC="11" Name="docEvent" PC="0"/>
                <MethodMetric CC="1" Class="NoteDocumentListener" Component="accessories.plugins" LOC="3" Name="insertUpdate" PC="1"/>
                <MethodMetric CC="1" Class="NoteDocumentListener" Component="accessories.plugins" LOC="3" Name="removeUpdate" PC="1"/>
                <MethodMetric CC="1" Class="NoteDocumentListener" Component="accessories.plugins" LOC="3" Name="setNode" PC="1"/>
                <MethodMetric CC="1" Class="NotesManager" Component="accessories.plugins" LOC="2" Name="NotesManager" PC="0"/>
                <MethodMetric CC="1" Class="NotesManager" Component="accessories.plugins" LOC="5" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="3" Class="NotesManager" Component="accessories.plugins" LOC="21" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="NotesManager" Component="accessories.plugins" LOC="2" Name="onUpdateNodeHook" PC="1"/>
                <MethodMetric CC="4" Class="NotesManager" Component="accessories.plugins" LOC="26" Name="onSaveNode" PC="1"/>
                <MethodMetric CC="2" Class="NotesManager" Component="accessories.plugins" LOC="5" Name="onCreateNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="NotesManager" Component="accessories.plugins" LOC="2" Name="onPreDeleteNode" PC="1"/>
                <MethodMetric CC="1" Class="NotesManager" Component="accessories.plugins" LOC="2" Name="onPostDeleteNode" PC="2"/>
                <MethodMetric CC="1" Class="NotesManager" Component="accessories.plugins" LOC="2" Name="onSelectionChange" PC="2"/>
                <MethodMetric CC="2" Class="JumpToMapAction" Component="accessories.plugins" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="RemoveNote" Component="accessories.plugins" LOC="3" Name="RemoveNote" PC="0"/>
                <MethodMetric CC="4" Class="RemoveNote" Component="accessories.plugins" LOC="13" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="RemoveNote" Component="accessories.plugins" LOC="6" Name="removeNote" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="5" Name="Registration" PC="2"/>
                <MethodMetric CC="4" Class="Registration" Component="accessories.plugins" LOC="12" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="deRegister" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="2" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="RevisionPlugin" Component="accessories.plugins" LOC="3" Name="RevisionPlugin" PC="0"/>
                <MethodMetric CC="2" Class="RevisionPlugin" Component="accessories.plugins" LOC="8" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="RevisionPlugin" Component="accessories.plugins" LOC="4" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="2" Class="RevisionPlugin" Component="accessories.plugins" LOC="8" Name="executeAction" PC="1"/>
                <MethodMetric CC="1" Class="RevisionPlugin" Component="accessories.plugins" LOC="2" Name="startTransaction" PC="1"/>
                <MethodMetric CC="1" Class="RevisionPlugin" Component="accessories.plugins" LOC="2" Name="endTransaction" PC="1"/>
                <MethodMetric CC="1" Class="SaveAll" Component="accessories.plugins" LOC="3" Name="SaveAll" PC="0"/>
                <MethodMetric CC="3" Class="SaveAll" Component="accessories.plugins" LOC="17" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="SaveAll" Component="accessories.plugins" LOC="3" Name="getMapModules" PC="0"/>
                <MethodMetric CC="3" Class="ShowCloneNodes" Component="accessories.plugins" LOC="19" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="ShowCloneNodes" Component="accessories.plugins" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="ShowCloneNodes" Component="accessories.plugins" LOC="7" Name="addClonesToList" PC="2"/>
                <MethodMetric CC="1" Class="SortNodes" Component="accessories.plugins" LOC="3" Name="SortNodes" PC="0"/>
                <MethodMetric CC="2" Class="SortNodes" Component="accessories.plugins" LOC="12" Name="invoke" PC="1"/>
                <MethodMetric CC="3" Class="NodeTextComparator" Component="accessories.plugins" LOC="12" Name="compare" PC="2"/>
                <MethodMetric CC="1" Class="SplitNode" Component="accessories.plugins" LOC="3" Name="SplitNode" PC="0"/>
                <MethodMetric CC="2" Class="SplitNode" Component="accessories.plugins" LOC="9" Name="invoke" PC="1"/>
                <MethodMetric CC="6" Class="SplitNode" Component="accessories.plugins" LOC="35" Name="splitNode" PC="1"/>
                <MethodMetric CC="1" Class="SplitNode" Component="accessories.plugins" LOC="4" Name="run" PC="0"/>
                <MethodMetric CC="7" Class="SplitNode" Component="accessories.plugins" LOC="47" Name="splitNode" PC="1"/>
                <MethodMetric CC="3" Class="SplitNode" Component="accessories.plugins" LOC="12" Name="getParentElement" PC="1"/>
                <MethodMetric CC="1" Class="UnfoldAll" Component="accessories.plugins" LOC="3" Name="UnfoldAll" PC="0"/>
                <MethodMetric CC="5" Class="UnfoldAll" Component="accessories.plugins" LOC="25" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="UnfoldAll" Component="accessories.plugins" LOC="5" Name="unfoldOneStage" PC="1"/>
                <MethodMetric CC="1" Class="UnfoldAll" Component="accessories.plugins" LOC="3" Name="foldOneStage" PC="1"/>
                <MethodMetric CC="2" Class="UnfoldAll" Component="accessories.plugins" LOC="6" Name="foldAll" PC="1"/>
                <MethodMetric CC="2" Class="UnfoldAll" Component="accessories.plugins" LOC="6" Name="unfoldAll" PC="1"/>
                <MethodMetric CC="4" Class="UnfoldAll" Component="accessories.plugins" LOC="13" Name="foldLastBranches" PC="1"/>
                <MethodMetric CC="2" Class="UnfoldAll" Component="accessories.plugins" LOC="5" Name="setFolded" PC="2"/>
                <MethodMetric CC="3" Class="UnfoldAll" Component="accessories.plugins" LOC="12" Name="unfoldStageN" PC="2"/>
                <MethodMetric CC="3" Class="UnfoldAll" Component="accessories.plugins" LOC="12" Name="foldStageN" PC="2"/>
                <MethodMetric CC="5" Class="UnfoldAll" Component="accessories.plugins" LOC="10" Name="getMinDepth" PC="1"/>
                <MethodMetric CC="4" Class="UnfoldAll" Component="accessories.plugins" LOC="9" Name="getMaxDepth" PC="1"/>
                <MethodMetric CC="2" Class="UnfoldAll" Component="accessories.plugins" LOC="4" Name="depth" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="8" Name="Registration" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="accessories.plugins" LOC="3" Name="deRegister" PC="0"/>
                <MethodMetric CC="3" Class="Registration" Component="accessories.plugins" LOC="15" Name="handleMouseWheelEvent" PC="1"/>
                <MethodMetric CC="1" Class="ArrayListTransferHandler" Component="accessories.plugins.dialogs" LOC="8" Name="ArrayListTransferHandler" PC="0"/>
                <MethodMetric CC="8" Class="ArrayListTransferHandler" Component="accessories.plugins.dialogs" LOC="48" Name="importData" PC="2"/>
                <MethodMetric CC="6" Class="ArrayListTransferHandler" Component="accessories.plugins.dialogs" LOC="16" Name="exportDone" PC="3"/>
                <MethodMetric CC="4" Class="ArrayListTransferHandler" Component="accessories.plugins.dialogs" LOC="11" Name="hasLocalArrayListFlavor" PC="1"/>
                <MethodMetric CC="2" Class="ArrayListTransferHandler" Component="accessories.plugins.dialogs" LOC="6" Name="canImport" PC="2"/>
                <MethodMetric CC="5" Class="ArrayListTransferHandler" Component="accessories.plugins.dialogs" LOC="19" Name="createTransferable" PC="1"/>
                <MethodMetric CC="1" Class="ArrayListTransferHandler" Component="accessories.plugins.dialogs" LOC="3" Name="getSourceActions" PC="1"/>
                <MethodMetric CC="1" Class="ArrayListTransferable" Component="accessories.plugins.dialogs" LOC="3" Name="ArrayListTransferable" PC="1"/>
                <MethodMetric CC="2" Class="ArrayListTransferable" Component="accessories.plugins.dialogs" LOC="6" Name="getTransferData" PC="1"/>
                <MethodMetric CC="1" Class="ArrayListTransferable" Component="accessories.plugins.dialogs" LOC="3" Name="getTransferDataFlavors" PC="0"/>
                <MethodMetric CC="2" Class="ArrayListTransferable" Component="accessories.plugins.dialogs" LOC="6" Name="isDataFlavorSupported" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="7" Name="ChooseFormatPopupDialog" PC="4"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="22" Name="initialize" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="6" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="4" Name="okPressed" PC="0"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="4" Name="cancelPressed" PC="0"/>
                <MethodMetric CC="2" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="11" Name="getJContentPane" PC="0"/>
                <MethodMetric CC="2" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="7" Name="getStylePatternFrame" PC="0"/>
                <MethodMetric CC="2" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="13" Name="getJOKButton" PC="0"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="13" Name="getJCancelButton" PC="0"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getResult" PC="0"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getPattern" PC="0"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getPattern" PC="1"/>
                <MethodMetric CC="2" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="9" Name="keyPressed" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="keyReleased" PC="1"/>
                <MethodMetric CC="1" Class="ChooseFormatPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="2" Name="EnterPasswordDialog" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="7" Name="EnterPasswordDialog" PC="3"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="12" Name="initialize" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="3" Name="close" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="10" Name="okPressed" PC="0"/>
                <MethodMetric CC="6" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="18" Name="checkEqualAndMinimumSize" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="5" Name="cancelPressed" PC="0"/>
                <MethodMetric CC="3" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="57" Name="getJContentPane" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="6" Name="getJPasswordField" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="6" Name="getJPasswordField1" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="13" Name="getJOKButton" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="13" Name="getJCancelButton" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getResult" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getPassword" PC="0"/>
                <MethodMetric CC="2" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="16" Name="ManagePatternsPopupDialog" PC="2"/>
                <MethodMetric CC="5" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="35" Name="initialize" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getDialogTitle" PC="0"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="6" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="5" Name="okPressed" PC="0"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="4" Name="cancelPressed" PC="0"/>
                <MethodMetric CC="3" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="114" Name="getJContentPane" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="mousePressed" PC="1"/>
                <MethodMetric CC="2" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="5" Name="showPopup" PC="2"/>
                <MethodMetric CC="2" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="12" Name="addPattern" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="10" Name="duplicatePattern" PC="1"/>
                <MethodMetric CC="2" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="12" Name="insertPatternFromNode" PC="1"/>
                <MethodMetric CC="3" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="11" Name="applyToNode" PC="1"/>
                <MethodMetric CC="3" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="15" Name="searchForNameForNewPattern" PC="0"/>
                <MethodMetric CC="3" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="14" Name="removePattern" PC="1"/>
                <MethodMetric CC="2" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="13" Name="getJOKButton" PC="0"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="13" Name="getJCancelButton" PC="0"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getResult" PC="0"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getPatternList" PC="0"/>
                <MethodMetric CC="9" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="29" Name="writePatternBackToModel" PC="0"/>
                <MethodMetric CC="2" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="8" Name="keyPressed" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="2" Name="keyReleased" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="2" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="3" Name="getLastSelectedPattern" PC="0"/>
                <MethodMetric CC="1" Class="ManagePatternsPopupDialog" Component="accessories.plugins.dialogs" LOC="4" Name="setLastSelectedPattern" PC="1"/>
                <MethodMetric CC="3" Class="PatternListSelectionListener" Component="accessories.plugins.dialogs" LOC="16" Name="valueChanged" PC="1"/>
                <MethodMetric CC="1" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="3" Name="PatternListModel" PC="1"/>
                <MethodMetric CC="1" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="3" Name="getSize" PC="0"/>
                <MethodMetric CC="1" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="3" Name="getElementAt" PC="1"/>
                <MethodMetric CC="1" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="3" Name="getPatternAt" PC="1"/>
                <MethodMetric CC="1" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="3" Name="getPatternList" PC="0"/>
                <MethodMetric CC="2" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="8" Name="removePattern" PC="1"/>
                <MethodMetric CC="1" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="5" Name="addPattern" PC="2"/>
                <MethodMetric CC="2" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="8" Name="printPatterns" PC="0"/>
                <MethodMetric CC="3" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="9" Name="getPatternByName" PC="1"/>
                <MethodMetric CC="3" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="9" Name="add" PC="2"/>
                <MethodMetric CC="1" Class="PatternListModel" Component="accessories.plugins.dialogs" LOC="3" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="8" Name="FlatNodeTableFilterModel" PC="3"/>
                <MethodMetric CC="1" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="3" Name="resetFilter" PC="0"/>
                <MethodMetric CC="1" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="6" Name="setFilter" PC="1"/>
                <MethodMetric CC="4" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="16" Name="updateIndexArray" PC="0"/>
                <MethodMetric CC="1" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="3" Name="getRowCount" PC="0"/>
                <MethodMetric CC="1" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="3" Name="getColumnCount" PC="0"/>
                <MethodMetric CC="1" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="3" Name="getColumnName" PC="1"/>
                <MethodMetric CC="1" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="3" Name="getColumnClass" PC="1"/>
                <MethodMetric CC="2" Class="FlatNodeTableFilterModel" Component="accessories.plugins.time" LOC="7" Name="getValueAt" PC="2"/>
                <MethodMetric CC="1" Class="TableModelHandler" Component="accessories.plugins.time" LOC="3" Name="tableChanged" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="JCalendar" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="JCalendar" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="4" Name="JCalendar" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="JCalendar" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="JCalendar" PC="2"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="JCalendar" PC="2"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="JCalendar" PC="2"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="JCalendar" PC="1"/>
                <MethodMetric CC="3" Class="JCalendar" Component="accessories.plugins.time" LOC="36" Name="JCalendar" PC="4"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="7" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getCalendar" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getDayChooser" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getLocale" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getMonthChooser" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getYearChooser" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="isWeekOfYearVisible" PC="0"/>
                <MethodMetric CC="6" Class="JCalendar" Component="accessories.plugins.time" LOC="21" Name="propertyChange" PC="1"/>
                <MethodMetric CC="2" Class="JCalendar" Component="accessories.plugins.time" LOC="6" Name="setBackground" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setCalendar" PC="1"/>
                <MethodMetric CC="3" Class="JCalendar" Component="accessories.plugins.time" LOC="13" Name="setCalendar" PC="2"/>
                <MethodMetric CC="2" Class="JCalendar" Component="accessories.plugins.time" LOC="8" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="isEnabled" PC="0"/>
                <MethodMetric CC="2" Class="JCalendar" Component="accessories.plugins.time" LOC="8" Name="setFont" PC="1"/>
                <MethodMetric CC="2" Class="JCalendar" Component="accessories.plugins.time" LOC="8" Name="setForeground" PC="1"/>
                <MethodMetric CC="2" Class="JCalendar" Component="accessories.plugins.time" LOC="12" Name="setLocale" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="4" Name="setWeekOfYearVisible" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="isDecorationBackgroundVisible" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="4" Name="setDecorationBackgroundVisible" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="isDecorationBordersVisible" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="4" Name="setDecorationBordersVisible" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getDecorationBackgroundColor" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setDecorationBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getSundayForeground" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getWeekdayForeground" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setSundayForeground" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setWeekdayForeground" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getDate" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="12" Name="setDate" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setSelectableDateRange" PC="2"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getMaxSelectableDate" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getMinSelectableDate" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setMaxSelectableDate" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setMinSelectableDate" PC="1"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="getMaxDayCharacters" PC="0"/>
                <MethodMetric CC="1" Class="JCalendar" Component="accessories.plugins.time" LOC="3" Name="setMaxDayCharacters" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="setMonthChooser" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="setYearChooser" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="JDayChooser" PC="0"/>
                <MethodMetric CC="9" Class="JDayChooser" Component="accessories.plugins.time" LOC="71" Name="JDayChooser" PC="1"/>
                <MethodMetric CC="3" Class="JDayChooser" Component="accessories.plugins.time" LOC="9" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="5" Name="addListeners" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="10" Name="init" PC="0"/>
                <MethodMetric CC="6" Class="JDayChooser" Component="accessories.plugins.time" LOC="26" Name="drawDayNames" PC="0"/>
                <MethodMetric CC="2" Class="JDayChooser" Component="accessories.plugins.time" LOC="12" Name="initDecorations" PC="0"/>
                <MethodMetric CC="4" Class="JDayChooser" Component="accessories.plugins.time" LOC="15" Name="drawWeeks" PC="0"/>
                <MethodMetric CC="8" Class="JDayChooser" Component="accessories.plugins.time" LOC="67" Name="drawDays" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getLocale" PC="0"/>
                <MethodMetric CC="2" Class="JDayChooser" Component="accessories.plugins.time" LOC="10" Name="setLocale" PC="1"/>
                <MethodMetric CC="7" Class="JDayChooser" Component="accessories.plugins.time" LOC="28" Name="setDay" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="setAlwaysFireDayProperty" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getDay" PC="0"/>
                <MethodMetric CC="2" Class="JDayChooser" Component="accessories.plugins.time" LOC="12" Name="setMonth" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getDaysInMonth" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="4" Name="setYear" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="4" Name="setCalendar" PC="1"/>
                <MethodMetric CC="5" Class="JDayChooser" Component="accessories.plugins.time" LOC="12" Name="setFont" PC="1"/>
                <MethodMetric CC="3" Class="JDayChooser" Component="accessories.plugins.time" LOC="9" Name="setForeground" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="2" Name="focusGained" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="2" Name="focusLost" PC="1"/>
                <MethodMetric CC="11" Class="JDayChooser" Component="accessories.plugins.time" LOC="43" Name="keyPressed" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="7" Name="diffMonth" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="4" Name="getTemporaryCalendar" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="2" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="2" Name="keyReleased" PC="1"/>
                <MethodMetric CC="5" Class="JDayChooser" Component="accessories.plugins.time" LOC="13" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="isWeekOfYearVisible" PC="0"/>
                <MethodMetric CC="3" Class="JDayChooser" Component="accessories.plugins.time" LOC="14" Name="setWeekOfYearVisible" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getDayPanel" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getDecorationBackgroundColor" PC="0"/>
                <MethodMetric CC="5" Class="JDayChooser" Component="accessories.plugins.time" LOC="13" Name="setDecorationBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getSundayForeground" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getWeekdayForeground" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="5" Name="setSundayForeground" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="5" Name="setWeekdayForeground" PC="1"/>
                <MethodMetric CC="2" Class="JDayChooser" Component="accessories.plugins.time" LOC="5" Name="setFocus" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="isDecorationBackgroundVisible" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="4" Name="setDecorationBackgroundVisible" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="isDecorationBordersVisible" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="isDayBordersVisible" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="4" Name="setDecorationBordersVisible" PC="1"/>
                <MethodMetric CC="4" Class="JDayChooser" Component="accessories.plugins.time" LOC="14" Name="setDayBordersVisible" PC="1"/>
                <MethodMetric CC="4" Class="JDayChooser" Component="accessories.plugins.time" LOC="19" Name="updateUI" PC="0"/>
                <MethodMetric CC="4" Class="JDayChooser" Component="accessories.plugins.time" LOC="19" Name="setSelectableDateRange" PC="2"/>
                <MethodMetric CC="2" Class="JDayChooser" Component="accessories.plugins.time" LOC="10" Name="setMaxSelectableDate" PC="1"/>
                <MethodMetric CC="2" Class="JDayChooser" Component="accessories.plugins.time" LOC="10" Name="setMinSelectableDate" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getMaxSelectableDate" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getMinSelectableDate" PC="0"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getMaxDayCharacters" PC="0"/>
                <MethodMetric CC="3" Class="JDayChooser" Component="accessories.plugins.time" LOC="14" Name="setMaxDayCharacters" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="6" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="JDayChooser" Component="accessories.plugins.time" LOC="3" Name="getSelectedDay" PC="0"/>
                <MethodMetric CC="1" Class="DecoratorButton" Component="accessories.plugins.time" LOC="5" Name="DecoratorButton" PC="0"/>
                <MethodMetric CC="1" Class="DecoratorButton" Component="accessories.plugins.time" LOC="2" Name="addMouseListener" PC="1"/>
                <MethodMetric CC="1" Class="DecoratorButton" Component="accessories.plugins.time" LOC="3" Name="isFocusable" PC="0"/>
                <MethodMetric CC="4" Class="DecoratorButton" Component="accessories.plugins.time" LOC="18" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="JMonthChooser" PC="0"/>
                <MethodMetric CC="2" Class="JMonthChooser" Component="accessories.plugins.time" LOC="31" Name="JMonthChooser" PC="1"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="4" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="3" Class="JMonthChooser" Component="accessories.plugins.time" LOC="13" Name="initNames" PC="0"/>
                <MethodMetric CC="6" Class="JMonthChooser" Component="accessories.plugins.time" LOC="30" Name="stateChanged" PC="1"/>
                <MethodMetric CC="3" Class="JMonthChooser" Component="accessories.plugins.time" LOC="8" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="4" Class="JMonthChooser" Component="accessories.plugins.time" LOC="14" Name="setMonth" PC="2"/>
                <MethodMetric CC="3" Class="JMonthChooser" Component="accessories.plugins.time" LOC="11" Name="setMonth" PC="1"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="getMonth" PC="0"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="setDayChooser" PC="1"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="setYearChooser" PC="1"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="getLocale" PC="0"/>
                <MethodMetric CC="2" Class="JMonthChooser" Component="accessories.plugins.time" LOC="9" Name="setLocale" PC="1"/>
                <MethodMetric CC="2" Class="JMonthChooser" Component="accessories.plugins.time" LOC="7" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="getComboBox" PC="0"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="getSpinner" PC="0"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="3" Name="hasSpinner" PC="0"/>
                <MethodMetric CC="2" Class="JMonthChooser" Component="accessories.plugins.time" LOC="6" Name="setFont" PC="1"/>
                <MethodMetric CC="3" Class="JMonthChooser" Component="accessories.plugins.time" LOC="11" Name="updateUI" PC="0"/>
                <MethodMetric CC="1" Class="JMonthChooser" Component="accessories.plugins.time" LOC="6" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="JSpinField" PC="0"/>
                <MethodMetric CC="4" Class="JSpinField" Component="accessories.plugins.time" LOC="31" Name="JSpinField" PC="2"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="4" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="7" Name="adjustWidthToMaximumValue" PC="0"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="5" Name="stateChanged" PC="1"/>
                <MethodMetric CC="5" Class="JSpinField" Component="accessories.plugins.time" LOC="19" Name="setValue" PC="3"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="4" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="setMinimum" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="getMinimum" PC="0"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="setMaximum" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="setHorizontalAlignment" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="getMaximum" PC="0"/>
                <MethodMetric CC="2" Class="JSpinField" Component="accessories.plugins.time" LOC="5" Name="setFont" PC="1"/>
                <MethodMetric CC="2" Class="JSpinField" Component="accessories.plugins.time" LOC="5" Name="setForeground" PC="1"/>
                <MethodMetric CC="3" Class="JSpinField" Component="accessories.plugins.time" LOC="18" Name="caretUpdate" PC="1"/>
                <MethodMetric CC="2" Class="JSpinField" Component="accessories.plugins.time" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="JSpinField" Component="accessories.plugins.time" LOC="8" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="getSpinner" PC="0"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="6" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="2" Name="focusGained" PC="1"/>
                <MethodMetric CC="1" Class="JSpinField" Component="accessories.plugins.time" LOC="3" Name="focusLost" PC="1"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="15" Name="JTripleCalendar" PC="0"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="4" Name="createInfoPanel" PC="0"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="16" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="4" Name="windowGainedFocus" PC="1"/>
                <MethodMetric CC="3" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="12" Name="propertyChange" PC="1"/>
                <MethodMetric CC="2" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="8" Name="checkForDateChange" PC="2"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="6" Name="propagateDate" PC="1"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="3" Name="getCalendar" PC="0"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="3" Name="getDate" PC="0"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="3" Name="getDayChooser" PC="0"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="3" Name="setDate" PC="1"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="3" Name="setCalendar" PC="1"/>
                <MethodMetric CC="1" Class="JTripleCalendar" Component="accessories.plugins.time" LOC="3" Name="getYearChooser" PC="0"/>
                <MethodMetric CC="1" Class="JInfoPanel" Component="accessories.plugins.time" LOC="26" Name="JInfoPanel" PC="0"/>
                <MethodMetric CC="1" Class="JInfoPanel" Component="accessories.plugins.time" LOC="4" Name="init" PC="0"/>
                <MethodMetric CC="1" Class="JInfoPanel" Component="accessories.plugins.time" LOC="4" Name="addListeners" PC="1"/>
                <MethodMetric CC="1" Class="JInfoPanel" Component="accessories.plugins.time" LOC="9" Name="setDate" PC="1"/>
                <MethodMetric CC="1" Class="JInfoPanel" Component="accessories.plugins.time" LOC="3" Name="getCalendar" PC="0"/>
                <MethodMetric CC="1" Class="JInfoPanel" Component="accessories.plugins.time" LOC="3" Name="getCalendarWidget" PC="0"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="8" Name="JYearChooser" PC="0"/>
                <MethodMetric CC="2" Class="JYearChooser" Component="accessories.plugins.time" LOC="9" Name="setYear" PC="1"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="3" Name="getYear" PC="0"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="3" Name="setDayChooser" PC="1"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="3" Name="getEndYear" PC="0"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="3" Name="setEndYear" PC="1"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="3" Name="getStartYear" PC="0"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="3" Name="setStartYear" PC="1"/>
                <MethodMetric CC="1" Class="JYearChooser" Component="accessories.plugins.time" LOC="6" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="ReminderHook" Component="accessories.plugins.time" LOC="3" Name="ReminderHook" PC="0"/>
                <MethodMetric CC="1" Class="ReminderHook" Component="accessories.plugins.time" LOC="3" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="ReminderHook" Component="accessories.plugins.time" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="ReminderHook" Component="accessories.plugins.time" LOC="3" Name="setToolTip" PC="3"/>
                <MethodMetric CC="1" Class="RemoveReminderHook" Component="accessories.plugins.time" LOC="3" Name="RemoveReminderHook" PC="0"/>
                <MethodMetric CC="2" Class="RemoveReminderHook" Component="accessories.plugins.time" LOC="8" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="compare" PC="2"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="compare" PC="2"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="4" Name="TableSorter" PC="0"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="4" Name="TableSorter" PC="1"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="5" Name="TableSorter" PC="2"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="4" Name="clearSortingState" PC="0"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getTableModel" PC="0"/>
                <MethodMetric CC="3" Class="TableSorter" Component="accessories.plugins.time" LOC="11" Name="setTableModel" PC="1"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getTableHeader" PC="0"/>
                <MethodMetric CC="4" Class="TableSorter" Component="accessories.plugins.time" LOC="14" Name="setTableHeader" PC="1"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="isSorting" PC="0"/>
                <MethodMetric CC="3" Class="TableSorter" Component="accessories.plugins.time" LOC="9" Name="getDirective" PC="1"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getSortingStatus" PC="1"/>
                <MethodMetric CC="2" Class="TableSorter" Component="accessories.plugins.time" LOC="7" Name="sortingStatusChanged" PC="0"/>
                <MethodMetric CC="3" Class="TableSorter" Component="accessories.plugins.time" LOC="10" Name="setSortingStatus" PC="2"/>
                <MethodMetric CC="2" Class="TableSorter" Component="accessories.plugins.time" LOC="7" Name="getHeaderRendererIcon" PC="2"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="4" Name="cancelSorting" PC="0"/>
                <MethodMetric CC="2" Class="TableSorter" Component="accessories.plugins.time" LOC="8" Name="setColumnComparator" PC="2"/>
                <MethodMetric CC="3" Class="TableSorter" Component="accessories.plugins.time" LOC="11" Name="getComparator" PC="1"/>
                <MethodMetric CC="4" Class="TableSorter" Component="accessories.plugins.time" LOC="13" Name="getViewToModel" PC="0"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="modelIndex" PC="1"/>
                <MethodMetric CC="3" Class="TableSorter" Component="accessories.plugins.time" LOC="10" Name="getModelToView" PC="0"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getRowCount" PC="0"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getColumnCount" PC="0"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getColumnName" PC="1"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getColumnClass" PC="1"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="isCellEditable" PC="2"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="getValueAt" PC="2"/>
                <MethodMetric CC="1" Class="TableSorter" Component="accessories.plugins.time" LOC="3" Name="setValueAt" PC="3"/>
                <MethodMetric CC="1" Class="Row" Component="accessories.plugins.time" LOC="3" Name="Row" PC="1"/>
                <MethodMetric CC="6" Class="Row" Component="accessories.plugins.time" LOC="27" Name="compareTo" PC="1"/>
                <MethodMetric CC="4" Class="TableModelHandler" Component="accessories.plugins.time" LOC="21" Name="tableChanged" PC="1"/>
                <MethodMetric CC="3" Class="MouseHandler" Component="accessories.plugins.time" LOC="15" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="Arrow" Component="accessories.plugins.time" LOC="5" Name="Arrow" PC="3"/>
                <MethodMetric CC="2" Class="Arrow" Component="accessories.plugins.time" LOC="23" Name="paintIcon" PC="4"/>
                <MethodMetric CC="1" Class="Arrow" Component="accessories.plugins.time" LOC="3" Name="getIconWidth" PC="0"/>
                <MethodMetric CC="1" Class="Arrow" Component="accessories.plugins.time" LOC="3" Name="getIconHeight" PC="0"/>
                <MethodMetric CC="1" Class="SortableHeaderRenderer" Component="accessories.plugins.time" LOC="3" Name="SortableHeaderRenderer" PC="1"/>
                <MethodMetric CC="2" Class="SortableHeaderRenderer" Component="accessories.plugins.time" LOC="10" Name="getTableCellRendererComponent" PC="6"/>
                <MethodMetric CC="1" Class="Directive" Component="accessories.plugins.time" LOC="4" Name="Directive" PC="2"/>
                <MethodMetric CC="9" Class="TimeList" Component="accessories.plugins.time" LOC="179" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="TimeList" Component="accessories.plugins.time" LOC="6" Name="keyPressed" PC="1"/>
                <MethodMetric CC="3" Class="TimeList" Component="accessories.plugins.time" LOC="10" Name="keyPressed" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="TimeList" Component="accessories.plugins.time" LOC="9" Name="valueChanged" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="getNodeText" PC="1"/>
                <MethodMetric CC="3" Class="TimeList" Component="accessories.plugins.time" LOC="11" Name="valueChanged" PC="1"/>
                <MethodMetric CC="3" Class="TimeList" Component="accessories.plugins.time" LOC="14" Name="setTableConfiguration" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="4" Name="toggleViewFoldedNodes" PC="0"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="5" Name="decorateButtonAndAction" PC="3"/>
                <MethodMetric CC="4" Class="TimeList" Component="accessories.plugins.time" LOC="18" Name="exportSelectedRowsAndClose" PC="0"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="13" Name="replace" PC="1"/>
                <MethodMetric CC="3" Class="TimeList" Component="accessories.plugins.time" LOC="14" Name="replace" PC="3"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="selectSelectedRows" PC="0"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="4" Name="gotoNodesAndClose" PC="2"/>
                <MethodMetric CC="3" Class="TimeList" Component="accessories.plugins.time" LOC="11" Name="selectNodes" PC="2"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="4" Name="getMindMapNode" PC="1"/>
                <MethodMetric CC="4" Class="TimeList" Component="accessories.plugins.time" LOC="35" Name="updateModel" PC="0"/>
                <MethodMetric CC="5" Class="TimeList" Component="accessories.plugins.time" LOC="17" Name="updateModel" PC="2"/>
                <MethodMetric CC="2" Class="TimeList" Component="accessories.plugins.time" LOC="7" Name="getTimePanel" PC="0"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="7" Name="disposeDialog" PC="0"/>
                <MethodMetric CC="2" Class="TimeList" Component="accessories.plugins.time" LOC="11" Name="getTableConfiguration" PC="0"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="4" Name="getRegularExpression" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="4" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="5" Name="getPureRegularExpression" PC="1"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="2" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="3" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="TimeList" Component="accessories.plugins.time" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="7" Class="MindmapTableModel" Component="accessories.plugins.time" LOC="0" Name="getColumnClass" PC="1"/>
                <MethodMetric CC="1" Class="ToggleViewFoldedNodesAction" Component="accessories.plugins.time" LOC="3" Name="ToggleViewFoldedNodesAction" PC="1"/>
                <MethodMetric CC="1" Class="ToggleViewFoldedNodesAction" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ToggleViewFoldedNodesAction" Component="accessories.plugins.time" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="IReplaceInputInformation" Component="accessories.plugins.time" LOC="0" Name="getLength" PC="0"/>
                <MethodMetric CC="1" Class="IReplaceInputInformation" Component="accessories.plugins.time" LOC="0" Name="getNodeHolderAt" PC="1"/>
                <MethodMetric CC="1" Class="IReplaceInputInformation" Component="accessories.plugins.time" LOC="0" Name="changeString" PC="2"/>
                <MethodMetric CC="1" Class="ReplaceAllInfo" Component="accessories.plugins.time" LOC="3" Name="getLength" PC="0"/>
                <MethodMetric CC="1" Class="ReplaceAllInfo" Component="accessories.plugins.time" LOC="3" Name="getNodeHolderAt" PC="1"/>
                <MethodMetric CC="1" Class="ReplaceAllInfo" Component="accessories.plugins.time" LOC="3" Name="changeString" PC="2"/>
                <MethodMetric CC="1" Class="ReplaceSelectedInfo" Component="accessories.plugins.time" LOC="3" Name="getLength" PC="0"/>
                <MethodMetric CC="1" Class="ReplaceSelectedInfo" Component="accessories.plugins.time" LOC="3" Name="getNodeHolderAt" PC="1"/>
                <MethodMetric CC="1" Class="ReplaceSelectedInfo" Component="accessories.plugins.time" LOC="3" Name="changeString" PC="2"/>
                <MethodMetric CC="2" Class="FilterTextDocumentListener" Component="accessories.plugins.time" LOC="8" Name="change" PC="1"/>
                <MethodMetric CC="1" Class="FilterTextDocumentListener" Component="accessories.plugins.time" LOC="3" Name="insertUpdate" PC="1"/>
                <MethodMetric CC="1" Class="FilterTextDocumentListener" Component="accessories.plugins.time" LOC="3" Name="removeUpdate" PC="1"/>
                <MethodMetric CC="1" Class="FilterTextDocumentListener" Component="accessories.plugins.time" LOC="3" Name="changedUpdate" PC="1"/>
                <MethodMetric CC="1" Class="DelayedTextEntry" Component="accessories.plugins.time" LOC="3" Name="DelayedTextEntry" PC="1"/>
                <MethodMetric CC="1" Class="DelayedTextEntry" Component="accessories.plugins.time" LOC="16" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="DelayedTextEntry" Component="accessories.plugins.time" LOC="11" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="FlatNodeTableMouseAdapter" Component="accessories.plugins.time" LOC="7" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="FlatNodeTableKeyListener" Component="accessories.plugins.time" LOC="2" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="FlatNodeTableKeyListener" Component="accessories.plugins.time" LOC="2" Name="keyPressed" PC="1"/>
                <MethodMetric CC="3" Class="FlatNodeTableKeyListener" Component="accessories.plugins.time" LOC="9" Name="keyReleased" PC="1"/>
                <MethodMetric CC="5" Class="FlatNodeTable" Component="accessories.plugins.time" LOC="8" Name="getCellRenderer" PC="2"/>
                <MethodMetric CC="1" Class="FlatNodeTable" Component="accessories.plugins.time" LOC="3" Name="isCellEditable" PC="2"/>
                <MethodMetric CC="4" Class="FlatNodeTable" Component="accessories.plugins.time" LOC="12" Name="processKeyEvent" PC="1"/>
                <MethodMetric CC="1" Class="DateRenderer" Component="accessories.plugins.time" LOC="3" Name="DateRenderer" PC="0"/>
                <MethodMetric CC="2" Class="DateRenderer" Component="accessories.plugins.time" LOC="6" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="NodeRenderer" Component="accessories.plugins.time" LOC="3" Name="NodeRenderer" PC="0"/>
                <MethodMetric CC="1" Class="NodeRenderer" Component="accessories.plugins.time" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="NotesRenderer" Component="accessories.plugins.time" LOC="3" Name="NotesRenderer" PC="0"/>
                <MethodMetric CC="1" Class="NotesRenderer" Component="accessories.plugins.time" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="NodeHolder" Component="accessories.plugins.time" LOC="3" Name="NodeHolder" PC="1"/>
                <MethodMetric CC="1" Class="NodeHolder" Component="accessories.plugins.time" LOC="3" Name="compareTo" PC="1"/>
                <MethodMetric CC="1" Class="NodeHolder" Component="accessories.plugins.time" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="NodeHolder" Component="accessories.plugins.time" LOC="8" Name="getUntaggedNodeText" PC="0"/>
                <MethodMetric CC="1" Class="NotesHolder" Component="accessories.plugins.time" LOC="3" Name="NotesHolder" PC="1"/>
                <MethodMetric CC="1" Class="NotesHolder" Component="accessories.plugins.time" LOC="3" Name="compareTo" PC="1"/>
                <MethodMetric CC="1" Class="NotesHolder" Component="accessories.plugins.time" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="3" Class="NotesHolder" Component="accessories.plugins.time" LOC="9" Name="getUntaggedNotesText" PC="0"/>
                <MethodMetric CC="2" Class="IconsHolder" Component="accessories.plugins.time" LOC="9" Name="IconsHolder" PC="1"/>
                <MethodMetric CC="1" Class="IconsHolder" Component="accessories.plugins.time" LOC="3" Name="compareTo" PC="1"/>
                <MethodMetric CC="1" Class="IconsHolder" Component="accessories.plugins.time" LOC="3" Name="getIcons" PC="0"/>
                <MethodMetric CC="2" Class="IconsHolder" Component="accessories.plugins.time" LOC="8" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="IconsRenderer" Component="accessories.plugins.time" LOC="4" Name="IconsRenderer" PC="1"/>
                <MethodMetric CC="4" Class="IconsRenderer" Component="accessories.plugins.time" LOC="16" Name="setValue" PC="1"/>
                <MethodMetric CC="3" Class="TimeManagement" Component="accessories.plugins.time" LOC="67" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="4" Name="windowGainedFocus" PC="1"/>
                <MethodMetric CC="3" Class="TimeManagement" Component="accessories.plugins.time" LOC="43" Name="getTimePanel" PC="0"/>
                <MethodMetric CC="2" Class="TimeManagement" Component="accessories.plugins.time" LOC="4" Name="propertyChange" PC="1"/>
                <MethodMetric CC="5" Class="TimeManagement" Component="accessories.plugins.time" LOC="23" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="TimeManagement" Component="accessories.plugins.time" LOC="7" Name="addHook" PC="2"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="6" Name="disposeDialog" PC="0"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="14" Name="getCalendarDate" PC="0"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="3" Name="getCalendar" PC="0"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="2" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="2" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="4" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="1" Class="TimeManagement" Component="accessories.plugins.time" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="NodeFactory" Component="accessories.plugins.time" LOC="0" Name="getNode" PC="1"/>
                <MethodMetric CC="1" Class="AppendDateAbstractAction" Component="accessories.plugins.time" LOC="2" Name="AppendDateAbstractAction" PC="0"/>
                <MethodMetric CC="1" Class="AppendDateAbstractAction" Component="accessories.plugins.time" LOC="4" Name="init" PC="2"/>
                <MethodMetric CC="2" Class="AppendDateAbstractAction" Component="accessories.plugins.time" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="AppendDateAction" Component="accessories.plugins.time" LOC="8" Name="AppendDateAction" PC="0"/>
                <MethodMetric CC="1" Class="AppendDateAction" Component="accessories.plugins.time" LOC="3" Name="getNode" PC="1"/>
                <MethodMetric CC="1" Class="AppendDateToChildAction" Component="accessories.plugins.time" LOC="8" Name="AppendDateToChildAction" PC="0"/>
                <MethodMetric CC="1" Class="AppendDateToChildAction" Component="accessories.plugins.time" LOC="3" Name="getNode" PC="1"/>
                <MethodMetric CC="2" Class="AppendDateToSiblingAction" Component="accessories.plugins.time" LOC="12" Name="AppendDateToSiblingAction" PC="0"/>
                <MethodMetric CC="2" Class="AppendDateToSiblingAction" Component="accessories.plugins.time" LOC="7" Name="getNode" PC="1"/>
                <MethodMetric CC="1" Class="RemindAction" Component="accessories.plugins.time" LOC="3" Name="RemindAction" PC="0"/>
                <MethodMetric CC="1" Class="RemindAction" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="RemoveReminders" Component="accessories.plugins.time" LOC="3" Name="RemoveReminders" PC="0"/>
                <MethodMetric CC="3" Class="RemoveReminders" Component="accessories.plugins.time" LOC="9" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TodayAction" Component="accessories.plugins.time" LOC="3" Name="TodayAction" PC="0"/>
                <MethodMetric CC="1" Class="TodayAction" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CloseAction" Component="accessories.plugins.time" LOC="3" Name="CloseAction" PC="0"/>
                <MethodMetric CC="1" Class="CloseAction" Component="accessories.plugins.time" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TimeManagementOrganizer" Component="accessories.plugins.time" LOC="5" Name="TimeManagementOrganizer" PC="2"/>
                <MethodMetric CC="1" Class="TimeManagementOrganizer" Component="accessories.plugins.time" LOC="2" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="TimeManagementOrganizer" Component="accessories.plugins.time" LOC="2" Name="deRegister" PC="0"/>
                <MethodMetric CC="5" Class="TimeManagementOrganizer" Component="accessories.plugins.time" LOC="16" Name="isEnabled" PC="2"/>
                <MethodMetric CC="3" Class="TimeManagementOrganizer" Component="accessories.plugins.time" LOC="9" Name="getHook" PC="1"/>
                <MethodMetric CC="2" Class="ClickableImageCreator" Component="accessories.plugins.util.html" LOC="14" Name="ClickableImageCreator" PC="3"/>
                <MethodMetric CC="2" Class="ClickableImageCreator" Component="accessories.plugins.util.html" LOC="8" Name="generateHtml" PC="0"/>
                <MethodMetric CC="1" Class="ClickableImageCreator" Component="accessories.plugins.util.html" LOC="3" Name="createArea" PC="0"/>
                <MethodMetric CC="4" Class="ClickableImageCreator" Component="accessories.plugins.util.html" LOC="23" Name="createArea" PC="1"/>
                <MethodMetric CC="1" Class="WindowClosingAdapter" Component="accessories.plugins.util.window" LOC="3" Name="WindowClosingAdapter" PC="1"/>
                <MethodMetric CC="1" Class="WindowClosingAdapter" Component="accessories.plugins.util.window" LOC="3" Name="WindowClosingAdapter" PC="0"/>
                <MethodMetric CC="2" Class="WindowClosingAdapter" Component="accessories.plugins.util.window" LOC="7" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="ExportDialog" Component="accessories.plugins.util.xslt" LOC="62" Name="ExportDialog" PC="2"/>
                <MethodMetric CC="1" Class="ExportDialog" Component="accessories.plugins.util.xslt" LOC="10" Name="makegbc" PC="4"/>
                <MethodMetric CC="1" Class="ExportDialog" Component="accessories.plugins.util.xslt" LOC="3" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="ExportListener" Component="accessories.plugins.util.xslt" LOC="3" Name="ExportListener" PC="1"/>
                <MethodMetric CC="1" Class="ExportListener" Component="accessories.plugins.util.xslt" LOC="4" Name="ExportListener" PC="2"/>
                <MethodMetric CC="2" Class="ExportListener" Component="accessories.plugins.util.xslt" LOC="15" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FileChooseListener" Component="accessories.plugins.util.xslt" LOC="2" Name="FileChooseListener" PC="0"/>
                <MethodMetric CC="2" Class="FileChooseListener" Component="accessories.plugins.util.xslt" LOC="12" Name="FileChooseListener" PC="4"/>
                <MethodMetric CC="9" Class="FileChooseListener" Component="accessories.plugins.util.xslt" LOC="42" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="XmlExporter" Component="accessories.plugins.util.xslt" LOC="2" Name="XmlExporter" PC="0"/>
                <MethodMetric CC="1" Class="XmlExporter" Component="accessories.plugins.util.xslt" LOC="15" Name="transForm" PC="3"/>
                <MethodMetric CC="1" Class="CompileXsdStart" Component="de.foltin" LOC="21" Name="CompileXsdStart" PC="1"/>
                <MethodMetric CC="1" Class="CompileXsdStart" Component="de.foltin" LOC="5" Name="main" PC="1"/>
                <MethodMetric CC="6" Class="CompileXsdStart" Component="de.foltin" LOC="23" Name="print" PC="0"/>
                <MethodMetric CC="1" Class="CompileXsdStart" Component="de.foltin" LOC="10" Name="generate" PC="0"/>
                <MethodMetric CC="1" Class="CompileXsdStart" Component="de.foltin" LOC="3" Name="endElement" PC="3"/>
                <MethodMetric CC="2" Class="CompileXsdStart" Component="de.foltin" LOC="8" Name="createClass" PC="1"/>
                <MethodMetric CC="1" Class="CompileXsdStart" Component="de.foltin" LOC="3" Name="startElement" PC="4"/>
                <MethodMetric CC="2" Class="CompileXsdStart" Component="de.foltin" LOC="6" Name="firstLetterCapitalized" PC="1"/>
                <MethodMetric CC="2" Class="CompileXsdStart" Component="de.foltin" LOC="8" Name="getNameFromXml" PC="1"/>
                <MethodMetric CC="2" Class="CompileXsdStart" Component="de.foltin" LOC="9" Name="getType" PC="1"/>
                <MethodMetric CC="1" Class="ElementTypes" Component="de.foltin" LOC="3" Name="ElementTypes" PC="1"/>
                <MethodMetric CC="1" Class="ElementTypes" Component="de.foltin" LOC="3" Name="getId" PC="0"/>
                <MethodMetric CC="1" Class="XsdHandler" Component="de.foltin" LOC="3" Name="XsdHandler" PC="1"/>
                <MethodMetric CC="3" Class="XsdHandler" Component="de.foltin" LOC="7" Name="getClassName" PC="0"/>
                <MethodMetric CC="1" Class="XsdHandler" Component="de.foltin" LOC="4" Name="getClassMap" PC="0"/>
                <MethodMetric CC="2" Class="XsdHandler" Component="de.foltin" LOC="10" Name="appendToClassMap" PC="2"/>
                <MethodMetric CC="1" Class="XsdHandler" Component="de.foltin" LOC="3" Name="addArrayListImport" PC="0"/>
                <MethodMetric CC="3" Class="XsdHandler" Component="de.foltin" LOC="9" Name="getExtendsClassName" PC="0"/>
                <MethodMetric CC="1" Class="XsdHandler" Component="de.foltin" LOC="2" Name="startElement" PC="2"/>
                <MethodMetric CC="11" Class="XsdHandler" Component="de.foltin" LOC="0" Name="startElement" PC="4"/>
                <MethodMetric CC="1" Class="XsdHandler" Component="de.foltin" LOC="3" Name="createElementHandler" PC="0"/>
                <MethodMetric CC="1" Class="XsdHandler" Component="de.foltin" LOC="4" Name="endElement" PC="3"/>
                <MethodMetric CC="1" Class="ExtensionHandler" Component="de.foltin" LOC="3" Name="ExtensionHandler" PC="1"/>
                <MethodMetric CC="3" Class="ExtensionHandler" Component="de.foltin" LOC="17" Name="startElement" PC="2"/>
                <MethodMetric CC="1" Class="SchemaHandler" Component="de.foltin" LOC="3" Name="SchemaHandler" PC="1"/>
                <MethodMetric CC="1" Class="ChoiceHandler" Component="de.foltin" LOC="3" Name="ChoiceHandler" PC="1"/>
                <MethodMetric CC="1" Class="ChoiceHandler" Component="de.foltin" LOC="3" Name="createElementHandler" PC="0"/>
                <MethodMetric CC="1" Class="ChoiceHandler" Component="de.foltin" LOC="3" Name="isSingleChoice" PC="0"/>
                <MethodMetric CC="2" Class="ChoiceHandler" Component="de.foltin" LOC="9" Name="startElement" PC="2"/>
                <MethodMetric CC="2" Class="ChoiceHandler" Component="de.foltin" LOC="6" Name="endElement" PC="3"/>
                <MethodMetric CC="2" Class="ChoiceElementHandler" Component="de.foltin" LOC="10" Name="ChoiceElementHandler" PC="1"/>
                <MethodMetric CC="2" Class="ChoiceElementHandler" Component="de.foltin" LOC="14" Name="startElement" PC="2"/>
                <MethodMetric CC="1" Class="GroupHandler" Component="de.foltin" LOC="3" Name="GroupHandler" PC="1"/>
                <MethodMetric CC="1" Class="GroupHandler" Component="de.foltin" LOC="3" Name="startElement" PC="4"/>
                <MethodMetric CC="1" Class="SequenceHandler" Component="de.foltin" LOC="3" Name="SequenceHandler" PC="1"/>
                <MethodMetric CC="1" Class="SequenceHandler" Component="de.foltin" LOC="3" Name="createElementHandler" PC="0"/>
                <MethodMetric CC="1" Class="SequenceElementHandler" Component="de.foltin" LOC="3" Name="SequenceElementHandler" PC="1"/>
                <MethodMetric CC="6" Class="SequenceElementHandler" Component="de.foltin" LOC="40" Name="startElement" PC="2"/>
                <MethodMetric CC="1" Class="ComplexTypeHandler" Component="de.foltin" LOC="3" Name="ComplexTypeHandler" PC="1"/>
                <MethodMetric CC="3" Class="ComplexTypeHandler" Component="de.foltin" LOC="12" Name="startElement" PC="2"/>
                <MethodMetric CC="2" Class="ComplexTypeHandler" Component="de.foltin" LOC="21" Name="startClass" PC="1"/>
                <MethodMetric CC="4" Class="ComplexTypeHandler" Component="de.foltin" LOC="13" Name="endElement" PC="3"/>
                <MethodMetric CC="1" Class="ComplexContentHandler" Component="de.foltin" LOC="3" Name="ComplexContentHandler" PC="1"/>
                <MethodMetric CC="1" Class="AttributeHandler" Component="de.foltin" LOC="3" Name="AttributeHandler" PC="1"/>
                <MethodMetric CC="2" Class="AttributeHandler" Component="de.foltin" LOC="17" Name="startElement" PC="2"/>
                <MethodMetric CC="1" Class="AttributeHandler" Component="de.foltin" LOC="3" Name="decapitalizeFirstLetter" PC="1"/>
                <MethodMetric CC="1" Class="StringEncoder" Component="de.foltin" LOC="2" Name="StringEncoder" PC="0"/>
                <MethodMetric CC="6" Class="StringEncoder" Component="de.foltin" LOC="21" Name="encode" PC="1"/>
                <MethodMetric CC="10" Class="StringEncoder" Component="de.foltin" LOC="30" Name="decode" PC="1"/>
                <MethodMetric CC="1" Class="StringEncoder" Component="de.foltin" LOC="3" Name="isValidXMLChar" PC="1"/>
                <MethodMetric CC="1" Class="BooleanProperty" Component="freemind.common" LOC="11" Name="BooleanProperty" PC="2"/>
                <MethodMetric CC="1" Class="BooleanProperty" Component="freemind.common" LOC="3" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="1" Class="BooleanProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="BooleanProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="2" Class="BooleanProperty" Component="freemind.common" LOC="6" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="BooleanProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="BooleanProperty" Component="freemind.common" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="BooleanProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="10" Name="ColorProperty" PC="4"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="3" Class="ColorProperty" Component="freemind.common" LOC="25" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ColorProperty" Component="freemind.common" LOC="5" Name="mousePressed" PC="1"/>
                <MethodMetric CC="2" Class="ColorProperty" Component="freemind.common" LOC="5" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="2" Class="ColorProperty" Component="freemind.common" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ColorProperty" Component="freemind.common" LOC="8" Name="setColorValue" PC="1"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="3" Name="getColorValue" PC="0"/>
                <MethodMetric CC="1" Class="ColorProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="2" Class="ComboProperty" Component="freemind.common" LOC="18" Name="ComboProperty" PC="4"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="6" Name="ComboProperty" PC="4"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="6" Name="ComboProperty" PC="4"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="3" Name="fillPossibleValues" PC="1"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="4" Name="fillPossibleValues" PC="1"/>
                <MethodMetric CC="2" Class="ComboProperty" Component="freemind.common" LOC="7" Name="updateComboBoxEntries" PC="2"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="3" Class="ComboProperty" Component="freemind.common" LOC="11" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="ComboProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="DontShowNotificationProperty" Component="freemind.common" LOC="5" Name="DontShowNotificationProperty" PC="2"/>
                <MethodMetric CC="1" Class="FontProperty" Component="freemind.common" LOC="14" Name="FontProperty" PC="3"/>
                <MethodMetric CC="1" Class="FontProperty" Component="freemind.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FontProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="FontProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="FontProperty" Component="freemind.common" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="4" Class="FontProperty" Component="freemind.common" LOC="13" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="FontProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="FontProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="28" Name="FreeMindProgressMonitor" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="3" Name="getString" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="9" Name="showProgress" PC="4"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="10" Name="showProgress" PC="3"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="9" Name="setProgress" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="6" Name="dismiss" PC="0"/>
                <MethodMetric CC="3" Class="FreeMindProgressMonitor" Component="freemind.common" LOC="16" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="24" Name="FreeMindTask" PC="3"/>
                <MethodMetric CC="9" Class="FreeMindTask" Component="freemind.common" LOC="52" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="5" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="0" Name="processAction" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="isInterrupted" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="setInterrupted" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="isFinished" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="setFinished" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="getAmountOfSteps" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="setAmountOfSteps" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindTask" Component="freemind.common" LOC="3" Name="getRounds" PC="0"/>
                <MethodMetric CC="1" Class="ProgressDescription" Component="freemind.common" LOC="5" Name="ProgressDescription" PC="2"/>
                <MethodMetric CC="1" Class="IconProperty" Component="freemind.common" LOC="9" Name="IconProperty" PC="4"/>
                <MethodMetric CC="1" Class="IconProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="IconProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="3" Class="IconProperty" Component="freemind.common" LOC="9" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="IconProperty" Component="freemind.common" LOC="4" Name="setIcon" PC="1"/>
                <MethodMetric CC="1" Class="IconProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="IconProperty" Component="freemind.common" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="3" Class="IconProperty" Component="freemind.common" LOC="19" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="IconProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="NamedObject" Component="freemind.common" LOC="2" Name="NamedObject" PC="0"/>
                <MethodMetric CC="1" Class="NamedObject" Component="freemind.common" LOC="4" Name="NamedObject" PC="2"/>
                <MethodMetric CC="1" Class="NamedObject" Component="freemind.common" LOC="6" Name="literal" PC="1"/>
                <MethodMetric CC="2" Class="NamedObject" Component="freemind.common" LOC="7" Name="equals" PC="1"/>
                <MethodMetric CC="1" Class="NamedObject" Component="freemind.common" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="NamedObject" Component="freemind.common" LOC="3" Name="getObject" PC="0"/>
                <MethodMetric CC="1" Class="NextLineProperty" Component="freemind.common" LOC="3" Name="NextLineProperty" PC="0"/>
                <MethodMetric CC="1" Class="NextLineProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="NextLineProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="NextLineProperty" Component="freemind.common" LOC="3" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="NextLineProperty" Component="freemind.common" LOC="2" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="14" Name="NumberProperty" PC="5"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="3" Name="stateChanged" PC="1"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="2" Class="NumberProperty" Component="freemind.common" LOC="16" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="3" Name="getIntValue" PC="0"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="NumberProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="2" Class="OptionalDontShowMeAgainDialog" Component="freemind.common" LOC="12" Name="OptionalDontShowMeAgainDialog" PC="7"/>
                <MethodMetric CC="1" Class="OptionalDontShowMeAgainDialog" Component="freemind.common" LOC="3" Name="getResult" PC="0"/>
                <MethodMetric CC="5" Class="OptionalDontShowMeAgainDialog" Component="freemind.common" LOC="63" Name="show" PC="0"/>
                <MethodMetric CC="1" Class="OptionalDontShowMeAgainDialog" Component="freemind.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="OptionalDontShowMeAgainDialog" Component="freemind.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="OptionalDontShowMeAgainDialog" Component="freemind.common" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="4" Class="OptionalDontShowMeAgainDialog" Component="freemind.common" LOC="18" Name="close" PC="1"/>
                <MethodMetric CC="1" Class="DontShowPropertyHandler" Component="freemind.common" LOC="0" Name="getProperty" PC="0"/>
                <MethodMetric CC="1" Class="DontShowPropertyHandler" Component="freemind.common" LOC="0" Name="setProperty" PC="1"/>
                <MethodMetric CC="1" Class="StandardPropertyHandler" Component="freemind.common" LOC="4" Name="StandardPropertyHandler" PC="2"/>
                <MethodMetric CC="1" Class="StandardPropertyHandler" Component="freemind.common" LOC="3" Name="getProperty" PC="0"/>
                <MethodMetric CC="1" Class="StandardPropertyHandler" Component="freemind.common" LOC="3" Name="setProperty" PC="1"/>
                <MethodMetric CC="1" Class="PasswordProperty" Component="freemind.common" LOC="3" Name="PasswordProperty" PC="2"/>
                <MethodMetric CC="1" Class="PasswordProperty" Component="freemind.common" LOC="3" Name="initializeTextfield" PC="0"/>
                <MethodMetric CC="1" Class="PasswordProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="PasswordProperty" Component="freemind.common" LOC="4" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="PropertyBean" Component="freemind.common" LOC="0" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="PropertyBean" Component="freemind.common" LOC="0" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="PropertyBean" Component="freemind.common" LOC="0" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="PropertyBean" Component="freemind.common" LOC="3" Name="addPropertyChangeListener" PC="1"/>
                <MethodMetric CC="1" Class="PropertyBean" Component="freemind.common" LOC="3" Name="removePropertyChangeListener" PC="1"/>
                <MethodMetric CC="2" Class="PropertyBean" Component="freemind.common" LOC="7" Name="firePropertyChangeEvent" PC="0"/>
                <MethodMetric CC="1" Class="PropertyControl" Component="freemind.common" LOC="0" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="PropertyControl" Component="freemind.common" LOC="0" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="PropertyControl" Component="freemind.common" LOC="0" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="PropertyControl" Component="freemind.common" LOC="0" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="RemindValueProperty" Component="freemind.common" LOC="5" Name="RemindValueProperty" PC="3"/>
                <MethodMetric CC="1" Class="RemindValueProperty" Component="freemind.common" LOC="9" Name="setState" PC="1"/>
                <MethodMetric CC="2" Class="ScriptEditorProperty" Component="freemind.common" LOC="12" Name="ScriptEditorProperty" PC="3"/>
                <MethodMetric CC="1" Class="ScriptEditorProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="ScriptEditorProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="ScriptEditorProperty" Component="freemind.common" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="ScriptEditorProperty" Component="freemind.common" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="4" Class="ScriptEditorProperty" Component="freemind.common" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ScriptEditorProperty" Component="freemind.common" LOC="8" Name="setScriptValue" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorStarter" Component="freemind.common" LOC="0" Name="startEditor" PC="1"/>
                <MethodMetric CC="1" Class="SeparatorProperty" Component="freemind.common" LOC="4" Name="SeparatorProperty" PC="1"/>
                <MethodMetric CC="1" Class="SeparatorProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="SeparatorProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="SeparatorProperty" Component="freemind.common" LOC="3" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="SeparatorProperty" Component="freemind.common" LOC="2" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="12" Name="StringProperty" PC="2"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="3" Name="keyReleased" PC="1"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="3" Name="initializeTextfield" PC="0"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="4" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="4" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="StringProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="TextTranslator" Component="freemind.common" LOC="0" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="12" Name="ThreeCheckBoxProperty" PC="2"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="3" Name="getState" PC="0"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="2" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="6" Name="setValue" PC="1"/>
                <MethodMetric CC="4" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="12" Name="transformString" PC="1"/>
                <MethodMetric CC="4" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="11" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="6" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="ThreeCheckBoxProperty" Component="freemind.common" LOC="9" Name="setState" PC="1"/>
                <MethodMetric CC="1" Class="UnicodeReader" Component="freemind.common" LOC="4" Name="UnicodeReader" PC="2"/>
                <MethodMetric CC="1" Class="UnicodeReader" Component="freemind.common" LOC="3" Name="getDefaultEncoding" PC="0"/>
                <MethodMetric CC="2" Class="UnicodeReader" Component="freemind.common" LOC="4" Name="getEncoding" PC="0"/>
                <MethodMetric CC="9" Class="UnicodeReader" Component="freemind.common" LOC="38" Name="init" PC="0"/>
                <MethodMetric CC="1" Class="UnicodeReader" Component="freemind.common" LOC="4" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="UnicodeReader" Component="freemind.common" LOC="4" Name="read" PC="3"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="2" Name="XmlBindingTools" PC="0"/>
                <MethodMetric CC="2" Class="XmlBindingTools" Component="freemind.common" LOC="12" Name="getInstance" PC="0"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="9" Name="createMarshaller" PC="0"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="9" Name="createUnmarshaller" PC="0"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="4" Name="storeDialogPositions" PC="4"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="9" Name="storeDialogPositions" PC="2"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="5" Name="decorateDialog" PC="3"/>
                <MethodMetric CC="4" Class="XmlBindingTools" Component="freemind.common" LOC="27" Name="decorateDialog" PC="2"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="13" Name="marshall" PC="1"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="3" Name="unMarshall" PC="1"/>
                <MethodMetric CC="1" Class="XmlBindingTools" Component="freemind.common" LOC="11" Name="unMarshall" PC="1"/>
                <MethodMetric CC="1" Class="BlindIcon" Component="freemind.controller" LOC="3" Name="BlindIcon" PC="1"/>
                <MethodMetric CC="1" Class="BlindIcon" Component="freemind.controller" LOC="3" Name="getIconHeight" PC="0"/>
                <MethodMetric CC="1" Class="BlindIcon" Component="freemind.controller" LOC="3" Name="getIconWidth" PC="0"/>
                <MethodMetric CC="1" Class="BlindIcon" Component="freemind.controller" LOC="2" Name="paintIcon" PC="4"/>
                <MethodMetric CC="1" Class="ColorSwatch" Component="freemind.controller" LOC="2" Name="ColorSwatch" PC="0"/>
                <MethodMetric CC="1" Class="ColorSwatch" Component="freemind.controller" LOC="3" Name="ColorSwatch" PC="1"/>
                <MethodMetric CC="1" Class="ColorSwatch" Component="freemind.controller" LOC="3" Name="getIconWidth" PC="0"/>
                <MethodMetric CC="1" Class="ColorSwatch" Component="freemind.controller" LOC="3" Name="getIconHeight" PC="0"/>
                <MethodMetric CC="1" Class="ColorSwatch" Component="freemind.controller" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="ColorSwatch" Component="freemind.controller" LOC="6" Name="paintIcon" PC="4"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="6" Name="Controller" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="48" Name="init" PC="0"/>
                <MethodMetric CC="4" Class="Controller" Component="freemind.controller" LOC="24" Name="initialization" PC="0"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="10" Name="propertyChange" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getIntProperty" PC="2"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="5" Name="setProperty" PC="2"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="8" Name="firePropertyChanged" PC="3"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="5" Name="getJFrame" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getResourceString" PC="1"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="9" Name="getModeController" PC="0"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="6" Name="getModel" PC="0"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="8" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getModes" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getMode" PC="0"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="8" Name="getZooms" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getMapModuleManager" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getLastOpenedList" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getMapModule" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getToolBar" PC="0"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="6" Name="getFontThroughMap" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="setAntialiasEdges" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="setAntialiasAll" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getAntialiasEdges" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getAntialiasAll" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="6" Name="getDefaultFont" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="4" Name="getDefaultFontFamilyName" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="4" Name="getDefaultFontStyle" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="4" Name="getDefaultFontSize" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getCommonJColorChooser" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="10" Name="showCommonJColorChooserDialog" PC="3"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="2" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="5" Class="Controller" Component="freemind.controller" LOC="24" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="6" Class="Controller" Component="freemind.controller" LOC="45" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="6" Name="changeZoomValueProperty" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="7" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="17" Name="createNewMode" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="4" Name="setMenubarVisible" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="4" Name="setToolbarVisible" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getToolbar" PC="0"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="11" Name="setLeftToolbarVisible" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getNodeKeyListener" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getNodeMouseMotionListener" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getNodeMotionListener" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getMapMouseMotionListener" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getMapMouseWheelListener" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getNodeDragListener" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getNodeDropListener" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="setFrame" PC="1"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="5" Name="moveToRoot" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="close" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="informationMessage" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="informationMessage" PC="2"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="13" Name="errorMessage" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="errorMessage" PC="2"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="10" Name="obtainFocusForSelected" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="7" Name="setZoom" PC="1"/>
                <MethodMetric CC="5" Class="Controller" Component="freemind.controller" LOC="26" Name="setTitle" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="registerMapTitleChangeListener" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="deregisterMapTitleChangeListener" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="registerZoomListener" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="deregisterZoomListener" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="registerMapTitleContributor" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="deregisterMapTitleContributor" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="14" Name="setAllActions" PC="1"/>
                <MethodMetric CC="11" Class="Controller" Component="freemind.controller" LOC="62" Name="quit" PC="0"/>
                <MethodMetric CC="7" Class="Controller" Component="freemind.controller" LOC="31" Name="acquirePrinterJobAndPageFormat" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="25" Name="moveTab" PC="2"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getPropertyChangeListeners" PC="0"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="8" Name="toggleSelectionAsRectangle" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="isSelectionAsRectangle" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="addPropertyChangeListener" PC="1"/>
                <MethodMetric CC="2" Class="Controller" Component="freemind.controller" LOC="8" Name="addPropertyChangeListenerAndPropagate" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="removePropertyChangeListener" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getFilterController" PC="0"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="getPageFormat" PC="0"/>
                <MethodMetric CC="4" Class="Controller" Component="freemind.controller" LOC="11" Name="setAttributeViewType" PC="2"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="5" Name="setEdgesRenderingHint" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="4" Name="setTextRenderingHint" PC="1"/>
                <MethodMetric CC="9" Class="Controller" Component="freemind.controller" LOC="60" Name="addTabbedPane" PC="1"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="stateChanged" PC="1"/>
                <MethodMetric CC="5" Class="Controller" Component="freemind.controller" LOC="17" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="2" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="Controller" Component="freemind.controller" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="13" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="3" Class="Controller" Component="freemind.controller" LOC="7" Name="setMapTitle" PC="3"/>
                <MethodMetric CC="6" Class="Controller" Component="freemind.controller" LOC="18" Name="tabSelectionChanged" PC="0"/>
                <MethodMetric CC="4" Class="Controller" Component="freemind.controller" LOC="12" Name="storePageFormat" PC="0"/>
                <MethodMetric CC="1" Class="ColorTracker" Component="freemind.controller" LOC="3" Name="ColorTracker" PC="1"/>
                <MethodMetric CC="1" Class="ColorTracker" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ColorTracker" Component="freemind.controller" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="Closer" Component="freemind.controller" LOC="4" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="DisposeOnClose" Component="freemind.controller" LOC="4" Name="componentHidden" PC="1"/>
                <MethodMetric CC="1" Class="QuitAction" Component="freemind.controller" LOC="3" Name="QuitAction" PC="1"/>
                <MethodMetric CC="1" Class="QuitAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CloseAction" Component="freemind.controller" LOC="4" Name="CloseAction" PC="1"/>
                <MethodMetric CC="1" Class="CloseAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PrintAction" Component="freemind.controller" LOC="6" Name="PrintAction" PC="2"/>
                <MethodMetric CC="3" Class="PrintAction" Component="freemind.controller" LOC="19" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PrintPreviewAction" Component="freemind.controller" LOC="4" Name="PrintPreviewAction" PC="1"/>
                <MethodMetric CC="2" Class="PrintPreviewAction" Component="freemind.controller" LOC="9" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PageAction" Component="freemind.controller" LOC="5" Name="PageAction" PC="1"/>
                <MethodMetric CC="3" Class="PageAction" Component="freemind.controller" LOC="63" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PageAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PageAction" Component="freemind.controller" LOC="3" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="1" Class="LocalLinkConverter" Component="freemind.controller" LOC="0" Name="convertLocalLink" PC="1"/>
                <MethodMetric CC="1" Class="DefaultLocalLinkConverter" Component="freemind.controller" LOC="4" Name="convertLocalLink" PC="1"/>
                <MethodMetric CC="1" Class="DocumentationAction" Component="freemind.controller" LOC="4" Name="DocumentationAction" PC="1"/>
                <MethodMetric CC="2" Class="DocumentationAction" Component="freemind.controller" LOC="29" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="DocumentationAction" Component="freemind.controller" LOC="9" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="KeyDocumentationAction" Component="freemind.controller" LOC="4" Name="KeyDocumentationAction" PC="1"/>
                <MethodMetric CC="2" Class="KeyDocumentationAction" Component="freemind.controller" LOC="19" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="AboutAction" Component="freemind.controller" LOC="4" Name="AboutAction" PC="1"/>
                <MethodMetric CC="1" Class="AboutAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="LicenseAction" Component="freemind.controller" LOC="4" Name="LicenseAction" PC="1"/>
                <MethodMetric CC="1" Class="LicenseAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NavigationPreviousMapAction" Component="freemind.controller" LOC="4" Name="NavigationPreviousMapAction" PC="1"/>
                <MethodMetric CC="1" Class="NavigationPreviousMapAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ShowAttributeDialogAction" Component="freemind.controller" LOC="4" Name="ShowAttributeDialogAction" PC="1"/>
                <MethodMetric CC="2" Class="ShowAttributeDialogAction" Component="freemind.controller" LOC="6" Name="getAttributeDialog" PC="0"/>
                <MethodMetric CC="2" Class="ShowAttributeDialogAction" Component="freemind.controller" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ShowFilterToolbarAction" Component="freemind.controller" LOC="3" Name="ShowFilterToolbarAction" PC="1"/>
                <MethodMetric CC="2" Class="ShowFilterToolbarAction" Component="freemind.controller" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NavigationNextMapAction" Component="freemind.controller" LOC="4" Name="NavigationNextMapAction" PC="1"/>
                <MethodMetric CC="1" Class="NavigationNextMapAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NavigationMoveMapLeftAction" Component="freemind.controller" LOC="4" Name="NavigationMoveMapLeftAction" PC="1"/>
                <MethodMetric CC="2" Class="NavigationMoveMapLeftAction" Component="freemind.controller" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NavigationMoveMapRightAction" Component="freemind.controller" LOC="4" Name="NavigationMoveMapRightAction" PC="1"/>
                <MethodMetric CC="2" Class="NavigationMoveMapRightAction" Component="freemind.controller" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MoveToRootAction" Component="freemind.controller" LOC="4" Name="MoveToRootAction" PC="1"/>
                <MethodMetric CC="1" Class="MoveToRootAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ToggleMenubarAction" Component="freemind.controller" LOC="4" Name="ToggleMenubarAction" PC="1"/>
                <MethodMetric CC="1" Class="ToggleMenubarAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ToggleMenubarAction" Component="freemind.controller" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="ToggleToolbarAction" Component="freemind.controller" LOC="4" Name="ToggleToolbarAction" PC="1"/>
                <MethodMetric CC="1" Class="ToggleToolbarAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ToggleToolbarAction" Component="freemind.controller" LOC="4" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="ToggleLeftToolbarAction" Component="freemind.controller" LOC="4" Name="ToggleLeftToolbarAction" PC="1"/>
                <MethodMetric CC="1" Class="ToggleLeftToolbarAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ToggleLeftToolbarAction" Component="freemind.controller" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="ZoomInAction" Component="freemind.controller" LOC="3" Name="ZoomInAction" PC="1"/>
                <MethodMetric CC="3" Class="ZoomInAction" Component="freemind.controller" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ZoomOutAction" Component="freemind.controller" LOC="3" Name="ZoomOutAction" PC="1"/>
                <MethodMetric CC="3" Class="ZoomOutAction" Component="freemind.controller" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ShowSelectionAsRectangleAction" Component="freemind.controller" LOC="3" Name="ShowSelectionAsRectangleAction" PC="1"/>
                <MethodMetric CC="1" Class="ShowSelectionAsRectangleAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ShowSelectionAsRectangleAction" Component="freemind.controller" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="ShowAllAttributesAction" Component="freemind.controller" LOC="3" Name="ShowAllAttributesAction" PC="0"/>
                <MethodMetric CC="1" Class="ShowAllAttributesAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ShowAllAttributesAction" Component="freemind.controller" LOC="6" Name="setAttributeViewType" PC="1"/>
                <MethodMetric CC="1" Class="HideAllAttributesAction" Component="freemind.controller" LOC="3" Name="HideAllAttributesAction" PC="0"/>
                <MethodMetric CC="1" Class="HideAllAttributesAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="HideAllAttributesAction" Component="freemind.controller" LOC="6" Name="setAttributeViewType" PC="1"/>
                <MethodMetric CC="1" Class="ShowSelectedAttributesAction" Component="freemind.controller" LOC="3" Name="ShowSelectedAttributesAction" PC="0"/>
                <MethodMetric CC="1" Class="ShowSelectedAttributesAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ShowSelectedAttributesAction" Component="freemind.controller" LOC="6" Name="setAttributeViewType" PC="1"/>
                <MethodMetric CC="1" Class="PropertyAction" Component="freemind.controller" LOC="4" Name="PropertyAction" PC="1"/>
                <MethodMetric CC="3" Class="PropertyAction" Component="freemind.controller" LOC="42" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="PropertyAction" Component="freemind.controller" LOC="16" Name="writeProperties" PC="1"/>
                <MethodMetric CC="1" Class="PropertyAction" Component="freemind.controller" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="PropertyAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="BackgroundSwatch" Component="freemind.controller" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="OptionAntialiasAction" Component="freemind.controller" LOC="3" Name="OptionAntialiasAction" PC="1"/>
                <MethodMetric CC="1" Class="OptionAntialiasAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="6" Class="OptionAntialiasAction" Component="freemind.controller" LOC="18" Name="changeAntialias" PC="1"/>
                <MethodMetric CC="2" Class="OptionAntialiasAction" Component="freemind.controller" LOC="5" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="1" Class="OptionHTMLExportFoldingAction" Component="freemind.controller" LOC="2" Name="OptionHTMLExportFoldingAction" PC="1"/>
                <MethodMetric CC="1" Class="OptionHTMLExportFoldingAction" Component="freemind.controller" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="OptionSelectionMechanismAction" Component="freemind.controller" LOC="4" Name="OptionSelectionMechanismAction" PC="1"/>
                <MethodMetric CC="1" Class="OptionSelectionMechanismAction" Component="freemind.controller" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="OptionSelectionMechanismAction" Component="freemind.controller" LOC="6" Name="changeSelection" PC="1"/>
                <MethodMetric CC="2" Class="OptionSelectionMechanismAction" Component="freemind.controller" LOC="5" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="1" Class="OpenURLAction" Component="freemind.controller" LOC="5" Name="OpenURLAction" PC="3"/>
                <MethodMetric CC="1" Class="OpenURLAction" Component="freemind.controller" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindPopupMenu" Component="freemind.controller" LOC="5" Name="FreeMindPopupMenu" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindPopupMenu" Component="freemind.controller" LOC="8" Name="firePopupMenuWillBecomeVisible" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindPopupMenu" Component="freemind.controller" LOC="3" Name="addMenuListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindPopupMenu" Component="freemind.controller" LOC="3" Name="removeMenuListener" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindPopupMenu" Component="freemind.controller" LOC="7" Name="firePopupMenuCanceled" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindPopupMenu" Component="freemind.controller" LOC="7" Name="firePopupMenuWillBecomeInvisible" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindToolBar" Component="freemind.controller" LOC="3" Name="FreeMindToolBar" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindToolBar" Component="freemind.controller" LOC="3" Name="FreeMindToolBar" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindToolBar" Component="freemind.controller" LOC="3" Name="FreeMindToolBar" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindToolBar" Component="freemind.controller" LOC="5" Name="FreeMindToolBar" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindToolBar" Component="freemind.controller" LOC="14" Name="add" PC="1"/>
                <MethodMetric CC="1" Class="LastOpenedList" Component="freemind.controller" LOC="10" Name="LastOpenedList" PC="2"/>
                <MethodMetric CC="2" Class="LastOpenedList" Component="freemind.controller" LOC="6" Name="mapOpened" PC="1"/>
                <MethodMetric CC="4" Class="LastOpenedList" Component="freemind.controller" LOC="11" Name="add" PC="2"/>
                <MethodMetric CC="1" Class="LastOpenedList" Component="freemind.controller" LOC="2" Name="mapClosed" PC="1"/>
                <MethodMetric CC="2" Class="LastOpenedList" Component="freemind.controller" LOC="7" Name="save" PC="0"/>
                <MethodMetric CC="3" Class="LastOpenedList" Component="freemind.controller" LOC="6" Name="load" PC="1"/>
                <MethodMetric CC="3" Class="LastOpenedList" Component="freemind.controller" LOC="12" Name="open" PC="1"/>
                <MethodMetric CC="1" Class="LastOpenedList" Component="freemind.controller" LOC="3" Name="listIterator" PC="0"/>
                <MethodMetric CC="5" Class="LastStateStorageManagement" Component="freemind.controller" LOC="20" Name="LastStateStorageManagement" PC="1"/>
                <MethodMetric CC="1" Class="LastStateStorageManagement" Component="freemind.controller" LOC="3" Name="getXml" PC="0"/>
                <MethodMetric CC="2" Class="LastStateStorageManagement" Component="freemind.controller" LOC="6" Name="clearTabIndices" PC="0"/>
                <MethodMetric CC="9" Class="LastStateStorageManagement" Component="freemind.controller" LOC="42" Name="changeOrAdd" PC="1"/>
                <MethodMetric CC="1" Class="LastStateStorageManagement" Component="freemind.controller" LOC="3" Name="setLastChanged" PC="1"/>
                <MethodMetric CC="3" Class="LastStateStorageManagement" Component="freemind.controller" LOC="10" Name="getStorage" PC="1"/>
                <MethodMetric CC="3" Class="LastStateStorageManagement" Component="freemind.controller" LOC="18" Name="getLastOpenList" PC="0"/>
                <MethodMetric CC="1" Class="LastStateStorageManagement" Component="freemind.controller" LOC="5" Name="compare" PC="2"/>
                <MethodMetric CC="1" Class="LastStateStorageManagement" Component="freemind.controller" LOC="3" Name="getLastFocussedTab" PC="0"/>
                <MethodMetric CC="1" Class="LastStateStorageManagement" Component="freemind.controller" LOC="3" Name="setLastFocussedTab" PC="1"/>
                <MethodMetric CC="2" Class="MainToolBar" Component="freemind.controller" LOC="10" Name="MainToolBar" PC="1"/>
                <MethodMetric CC="1" Class="MainToolBar" Component="freemind.controller" LOC="2" Name="activate" PC="1"/>
                <MethodMetric CC="1" Class="MainToolBar" Component="freemind.controller" LOC="2" Name="setAllActions" PC="1"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="3" Name="addListener" PC="1"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="3" Name="removeListener" PC="1"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="3" Name="MapModuleManager" PC="1"/>
                <MethodMetric CC="2" Class="MapModuleManager" Component="freemind.controller" LOC="8" Name="getMapModules" PC="0"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="3" Name="getMapModuleVector" PC="0"/>
                <MethodMetric CC="2" Class="MapModuleManager" Component="freemind.controller" LOC="8" Name="getMapKeys" PC="0"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="3" Name="getMapModule" PC="0"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="5" Name="newMapModule" PC="2"/>
                <MethodMetric CC="3" Class="MapModuleManager" Component="freemind.controller" LOC="12" Name="getModuleGivenModeController" PC="1"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="5" Name="updateMapModuleName" PC="0"/>
                <MethodMetric CC="4" Class="MapModuleManager" Component="freemind.controller" LOC="12" Name="nextMapModule" PC="0"/>
                <MethodMetric CC="4" Class="MapModuleManager" Component="freemind.controller" LOC="14" Name="previousMapModule" PC="0"/>
                <MethodMetric CC="2" Class="MapModuleManager" Component="freemind.controller" LOC="9" Name="tryToChangeToMapModule" PC="1"/>
                <MethodMetric CC="4" Class="MapModuleManager" Component="freemind.controller" LOC="10" Name="checkIfFileIsAlreadyOpened" PC="1"/>
                <MethodMetric CC="3" Class="MapModuleManager" Component="freemind.controller" LOC="9" Name="sameFile" PC="2"/>
                <MethodMetric CC="4" Class="MapModuleManager" Component="freemind.controller" LOC="14" Name="changeToMapModule" PC="1"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="3" Name="changeToMapModule" PC="1"/>
                <MethodMetric CC="3" Class="MapModuleManager" Component="freemind.controller" LOC="10" Name="changeToMapOfMode" PC="1"/>
                <MethodMetric CC="2" Class="MapModuleManager" Component="freemind.controller" LOC="13" Name="setMapModule" PC="2"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="3" Name="fireNumberOfOpenMapInformation" PC="0"/>
                <MethodMetric CC="3" Class="MapModuleManager" Component="freemind.controller" LOC="13" Name="addToOrChangeInMapModules" PC="2"/>
                <MethodMetric CC="5" Class="MapModuleManager" Component="freemind.controller" LOC="23" Name="close" PC="2"/>
                <MethodMetric CC="1" Class="MapModuleManager" Component="freemind.controller" LOC="4" Name="swapModules" PC="2"/>
                <MethodMetric CC="1" Class="MapModuleChangeObserver" Component="freemind.controller" LOC="0" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="MapModuleChangeObserver" Component="freemind.controller" LOC="0" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="MapModuleChangeObserver" Component="freemind.controller" LOC="0" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="MapModuleChangeObserver" Component="freemind.controller" LOC="0" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="MapModuleChangeObserver" Component="freemind.controller" LOC="0" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="1" Class="MapModuleChangeObserverCompound" Component="freemind.controller" LOC="3" Name="addListener" PC="1"/>
                <MethodMetric CC="1" Class="MapModuleChangeObserverCompound" Component="freemind.controller" LOC="3" Name="removeListener" PC="1"/>
                <MethodMetric CC="3" Class="MapModuleChangeObserverCompound" Component="freemind.controller" LOC="11" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="2" Class="MapModuleChangeObserverCompound" Component="freemind.controller" LOC="6" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="2" Class="MapModuleChangeObserverCompound" Component="freemind.controller" LOC="6" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="2" Class="MapModuleChangeObserverCompound" Component="freemind.controller" LOC="6" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="2" Class="MapModuleChangeObserverCompound" Component="freemind.controller" LOC="6" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="MapTitleChangeListener" Component="freemind.controller" LOC="0" Name="setMapTitle" PC="3"/>
                <MethodMetric CC="1" Class="MapTitleContributor" Component="freemind.controller" LOC="0" Name="getMapTitle" PC="3"/>
                <MethodMetric CC="1" Class="MapMouseMotionListener" Component="freemind.controller" LOC="3" Name="MapMouseMotionListener" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionListener" Component="freemind.controller" LOC="3" Name="register" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionListener" Component="freemind.controller" LOC="3" Name="deregister" PC="0"/>
                <MethodMetric CC="4" Class="MapMouseMotionListener" Component="freemind.controller" LOC="14" Name="handlePopup" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionListener" Component="freemind.controller" LOC="2" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="2" Class="MapMouseMotionListener" Component="freemind.controller" LOC="5" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionListener" Component="freemind.controller" LOC="4" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionListener" Component="freemind.controller" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionListener" Component="freemind.controller" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="3" Class="MapMouseMotionListener" Component="freemind.controller" LOC="7" Name="mousePressed" PC="1"/>
                <MethodMetric CC="2" Class="MapMouseMotionListener" Component="freemind.controller" LOC="8" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionReceiver" Component="freemind.controller" LOC="0" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionReceiver" Component="freemind.controller" LOC="0" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseMotionReceiver" Component="freemind.controller" LOC="0" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseWheelListener" Component="freemind.controller" LOC="3" Name="MapMouseWheelListener" PC="1"/>
                <MethodMetric CC="2" Class="MapMouseWheelListener" Component="freemind.controller" LOC="3" Name="mouseWheelMoved" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseWheelListener" Component="freemind.controller" LOC="3" Name="register" PC="1"/>
                <MethodMetric CC="1" Class="MapMouseWheelListener" Component="freemind.controller" LOC="3" Name="deregister" PC="0"/>
                <MethodMetric CC="2" Class="MenuBar" Component="freemind.controller" LOC="6" Name="MenuBar" PC="1"/>
                <MethodMetric CC="1" Class="MenuBar" Component="freemind.controller" LOC="66" Name="updateMenus" PC="1"/>
                <MethodMetric CC="4" Class="MenuBar" Component="freemind.controller" LOC="23" Name="updateModeMenu" PC="0"/>
                <MethodMetric CC="2" Class="MenuBar" Component="freemind.controller" LOC="12" Name="addAdditionalPopupActions" PC="0"/>
                <MethodMetric CC="5" Class="MenuBar" Component="freemind.controller" LOC="24" Name="updateMapsMenu" PC="2"/>
                <MethodMetric CC="1" Class="MenuBar" Component="freemind.controller" LOC="12" Name="updateFileMenu" PC="0"/>
                <MethodMetric CC="3" Class="MenuBar" Component="freemind.controller" LOC="15" Name="updateLastOpenedList" PC="0"/>
                <MethodMetric CC="1" Class="MenuBar" Component="freemind.controller" LOC="12" Name="updateEditMenu" PC="0"/>
                <MethodMetric CC="1" Class="MenuBar" Component="freemind.controller" LOC="24" Name="updateViewMenu" PC="0"/>
                <MethodMetric CC="4" Class="MenuBar" Component="freemind.controller" LOC="15" Name="addOptionSet" PC="4"/>
                <MethodMetric CC="1" Class="MenuBar" Component="freemind.controller" LOC="3" Name="getMapsPopupMenu" PC="0"/>
                <MethodMetric CC="2" Class="MenuBar" Component="freemind.controller" LOC="6" Name="copyMenuItems" PC="2"/>
                <MethodMetric CC="1" Class="MenuBar" Component="freemind.controller" LOC="3" Name="getMenuHolder" PC="0"/>
                <MethodMetric CC="1" Class="MenuBar" Component="freemind.controller" LOC="3" Name="processKeyBinding" PC="4"/>
                <MethodMetric CC="1" Class="MapsMenuActionListener" Component="freemind.controller" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MapsMenuActionListener" Component="freemind.controller" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="LastOpenedActionListener" Component="freemind.controller" LOC="3" Name="LastOpenedActionListener" PC="1"/>
                <MethodMetric CC="1" Class="LastOpenedActionListener" Component="freemind.controller" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ModesMenuActionListener" Component="freemind.controller" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ModesMenuActionListener" Component="freemind.controller" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="MenuItemEnabledListener" Component="freemind.controller" LOC="0" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="MenuItemSelectedListener" Component="freemind.controller" LOC="0" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNodesSelection" Component="freemind.controller" LOC="10" Name="MindMapNodesSelection" PC="8"/>
                <MethodMetric CC="9" Class="MindMapNodesSelection" Component="freemind.controller" LOC="28" Name="getTransferData" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodesSelection" Component="freemind.controller" LOC="3" Name="getTransferDataFlavors" PC="0"/>
                <MethodMetric CC="9" Class="MindMapNodesSelection" Component="freemind.controller" LOC="27" Name="isDataFlavorSupported" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodesSelection" Component="freemind.controller" LOC="2" Name="lostOwnership" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNodesSelection" Component="freemind.controller" LOC="3" Name="setDropAction" PC="1"/>
                <MethodMetric CC="1" Class="NodeDragListener" Component="freemind.controller" LOC="3" Name="NodeDragListener" PC="1"/>
                <MethodMetric CC="3" Class="NodeDragListener" Component="freemind.controller" LOC="0" Name="getCursorByAction" PC="1"/>
                <MethodMetric CC="5" Class="NodeDragListener" Component="freemind.controller" LOC="34" Name="dragGestureRecognized" PC="1"/>
                <MethodMetric CC="1" Class="NodeDragListener" Component="freemind.controller" LOC="2" Name="dragDropEnd" PC="1"/>
                <MethodMetric CC="1" Class="NodeDragListener" Component="freemind.controller" LOC="2" Name="dragEnter" PC="1"/>
                <MethodMetric CC="1" Class="NodeDragListener" Component="freemind.controller" LOC="2" Name="dragExit" PC="1"/>
                <MethodMetric CC="1" Class="NodeDragListener" Component="freemind.controller" LOC="2" Name="dragOver" PC="1"/>
                <MethodMetric CC="1" Class="NodeDragListener" Component="freemind.controller" LOC="3" Name="dropActionChanged" PC="1"/>
                <MethodMetric CC="1" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="NodeDropListener" PC="1"/>
                <MethodMetric CC="1" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="register" PC="1"/>
                <MethodMetric CC="1" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="deregister" PC="0"/>
                <MethodMetric CC="2" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="dragEnter" PC="1"/>
                <MethodMetric CC="2" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="dragExit" PC="1"/>
                <MethodMetric CC="2" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="dragOver" PC="1"/>
                <MethodMetric CC="2" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="drop" PC="1"/>
                <MethodMetric CC="2" Class="NodeDropListener" Component="freemind.controller" LOC="3" Name="dropActionChanged" PC="1"/>
                <MethodMetric CC="1" Class="NodeKeyListener" Component="freemind.controller" LOC="3" Name="NodeKeyListener" PC="1"/>
                <MethodMetric CC="1" Class="NodeKeyListener" Component="freemind.controller" LOC="3" Name="register" PC="1"/>
                <MethodMetric CC="1" Class="NodeKeyListener" Component="freemind.controller" LOC="3" Name="deregister" PC="0"/>
                <MethodMetric CC="2" Class="NodeKeyListener" Component="freemind.controller" LOC="3" Name="keyPressed" PC="1"/>
                <MethodMetric CC="2" Class="NodeKeyListener" Component="freemind.controller" LOC="3" Name="keyReleased" PC="1"/>
                <MethodMetric CC="2" Class="NodeKeyListener" Component="freemind.controller" LOC="3" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="NodeMotionListener" PC="1"/>
                <MethodMetric CC="1" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="register" PC="1"/>
                <MethodMetric CC="1" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="deregister" PC="0"/>
                <MethodMetric CC="2" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="2" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="2" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="2" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="mouseExited" PC="1"/>
                <MethodMetric CC="2" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="2" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="mousePressed" PC="1"/>
                <MethodMetric CC="2" Class="NodeMotionListener" Component="freemind.controller" LOC="3" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="NodeMouseMotionListener" PC="1"/>
                <MethodMetric CC="1" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="register" PC="1"/>
                <MethodMetric CC="1" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="deregister" PC="0"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="mouseExited" PC="1"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="mousePressed" PC="1"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="2" Class="NodeMouseMotionListener" Component="freemind.controller" LOC="3" Name="updateSelectionMethod" PC="0"/>
                <MethodMetric CC="1" Class="NodeMouseMotionObserver" Component="freemind.controller" LOC="0" Name="updateSelectionMethod" PC="0"/>
                <MethodMetric CC="3" Class="StructuredMenuHolder" Component="freemind.controller" LOC="11" Name="StructuredMenuHolder" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="4" Name="addMenu" PC="2"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="9" Name="addMenuItem" PC="2"/>
                <MethodMetric CC="2" Class="StructuredMenuHolder" Component="freemind.controller" LOC="14" Name="addAction" PC="2"/>
                <MethodMetric CC="3" Class="StructuredMenuHolder" Component="freemind.controller" LOC="10" Name="adjustTooltips" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="4" Name="addCategory" PC="1"/>
                <MethodMetric CC="2" Class="StructuredMenuHolder" Component="freemind.controller" LOC="11" Name="addSeparator" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="6" Name="addMenu" PC="2"/>
                <MethodMetric CC="5" Class="StructuredMenuHolder" Component="freemind.controller" LOC="24" Name="getCategoryMap" PC="2"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="16" Name="updateMenus" PC="2"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="4" Name="addMenuItem" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="3" Name="addSeparator" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="2" Name="addCategory" PC="1"/>
                <MethodMetric CC="3" Class="StructuredMenuHolder" Component="freemind.controller" LOC="25" Name="updateMenus" PC="2"/>
                <MethodMetric CC="2" Class="StructuredMenuHolder" Component="freemind.controller" LOC="11" Name="addMenuItem" PC="1"/>
                <MethodMetric CC="2" Class="StructuredMenuHolder" Component="freemind.controller" LOC="4" Name="addSeparator" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="2" Name="addCategory" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="15" Name="updateMenus" PC="2"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="3" Name="addMenuItem" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="3" Name="addSeparator" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="2" Name="addCategory" PC="1"/>
                <MethodMetric CC="3" Class="StructuredMenuHolder" Component="freemind.controller" LOC="10" Name="adjustMenuItem" PC="1"/>
                <MethodMetric CC="7" Class="StructuredMenuHolder" Component="freemind.controller" LOC="34" Name="updateMenus" PC="3"/>
                <MethodMetric CC="1" Class="StructuredMenuHolder" Component="freemind.controller" LOC="6" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="StructuredMenuHolder" Component="freemind.controller" LOC="6" Name="print" PC="1"/>
                <MethodMetric CC="3" Class="StructuredMenuHolder" Component="freemind.controller" LOC="8" Name="lastItemIsASeparator" PC="1"/>
                <MethodMetric CC="3" Class="StructuredMenuHolder" Component="freemind.controller" LOC="8" Name="lastItemIsASeparator" PC="1"/>
                <MethodMetric CC="3" Class="StructuredMenuHolder" Component="freemind.controller" LOC="12" Name="setSelected" PC="2"/>
                <MethodMetric CC="1" Class="PrintMenuAdder" Component="freemind.controller" LOC="3" Name="addMenuItem" PC="1"/>
                <MethodMetric CC="1" Class="PrintMenuAdder" Component="freemind.controller" LOC="3" Name="addSeparator" PC="0"/>
                <MethodMetric CC="1" Class="PrintMenuAdder" Component="freemind.controller" LOC="3" Name="addCategory" PC="1"/>
                <MethodMetric CC="1" Class="MapTokenPair" Component="freemind.controller" LOC="5" Name="MapTokenPair" PC="3"/>
                <MethodMetric CC="1" Class="MenuAdder" Component="freemind.controller" LOC="0" Name="addMenuItem" PC="1"/>
                <MethodMetric CC="1" Class="MenuAdder" Component="freemind.controller" LOC="0" Name="addSeparator" PC="0"/>
                <MethodMetric CC="1" Class="MenuAdder" Component="freemind.controller" LOC="0" Name="addCategory" PC="1"/>
                <MethodMetric CC="1" Class="MenuItemAdder" Component="freemind.controller" LOC="7" Name="MenuItemAdder" PC="1"/>
                <MethodMetric CC="3" Class="MenuItemAdder" Component="freemind.controller" LOC="19" Name="addMenuItem" PC="1"/>
                <MethodMetric CC="2" Class="MenuItemAdder" Component="freemind.controller" LOC="6" Name="addSeparator" PC="0"/>
                <MethodMetric CC="1" Class="MenuItemAdder" Component="freemind.controller" LOC="2" Name="addCategory" PC="1"/>
                <MethodMetric CC="1" Class="MenuAdderCreator" Component="freemind.controller" LOC="0" Name="createAdder" PC="1"/>
                <MethodMetric CC="1" Class="DefaultMenuAdderCreator" Component="freemind.controller" LOC="3" Name="createAdder" PC="1"/>
                <MethodMetric CC="1" Class="SeparatorHolder" Component="freemind.controller" LOC="2" Name="SeparatorHolder" PC="0"/>
                <MethodMetric CC="1" Class="PrintMenuAdderCreator" Component="freemind.controller" LOC="3" Name="createAdder" PC="1"/>
                <MethodMetric CC="1" Class="MenuEventSupplier" Component="freemind.controller" LOC="0" Name="addMenuListener" PC="1"/>
                <MethodMetric CC="1" Class="MenuEventSupplier" Component="freemind.controller" LOC="0" Name="removeMenuListener" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuListener" Component="freemind.controller" LOC="2" Name="StructuredMenuListener" PC="0"/>
                <MethodMetric CC="5" Class="StructuredMenuListener" Component="freemind.controller" LOC="34" Name="menuSelected" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuListener" Component="freemind.controller" LOC="2" Name="menuDeselected" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuListener" Component="freemind.controller" LOC="2" Name="menuCanceled" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuListener" Component="freemind.controller" LOC="3" Name="addItem" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="2" Name="StructuredMenuItemHolder" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="3" Name="getAction" PC="0"/>
                <MethodMetric CC="3" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="11" Name="setAction" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="3" Name="getEnabledListener" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="3" Name="setEnabledListener" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="3" Name="getMenuItem" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="3" Name="setMenuItem" PC="1"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="3" Name="getSelectionListener" PC="0"/>
                <MethodMetric CC="1" Class="StructuredMenuItemHolder" Component="freemind.controller" LOC="3" Name="setSelectedListener" PC="1"/>
                <MethodMetric CC="1" Class="ZoomListener" Component="freemind.controller" LOC="0" Name="setZoom" PC="1"/>
                <MethodMetric CC="1" Class="AttributeCompareCondition" Component="freemind.controller.filter.condition" LOC="6" Name="AttributeCompareCondition" PC="5"/>
                <MethodMetric CC="3" Class="AttributeCompareCondition" Component="freemind.controller.filter.condition" LOC="11" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="AttributeCompareCondition" Component="freemind.controller.filter.condition" LOC="9" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="AttributeCompareCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="AttributeCompareCondition" Component="freemind.controller.filter.condition" LOC="3" Name="createDesctiption" PC="0"/>
                <MethodMetric CC="1" Class="AttributeExistsCondition" Component="freemind.controller.filter.condition" LOC="4" Name="AttributeExistsCondition" PC="1"/>
                <MethodMetric CC="3" Class="AttributeExistsCondition" Component="freemind.controller.filter.condition" LOC="7" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="AttributeExistsCondition" Component="freemind.controller.filter.condition" LOC="7" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="AttributeExistsCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="AttributeExistsCondition" Component="freemind.controller.filter.condition" LOC="4" Name="createDesctiption" PC="0"/>
                <MethodMetric CC="1" Class="AttributeNotExistsCondition" Component="freemind.controller.filter.condition" LOC="4" Name="AttributeNotExistsCondition" PC="1"/>
                <MethodMetric CC="3" Class="AttributeNotExistsCondition" Component="freemind.controller.filter.condition" LOC="7" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="AttributeNotExistsCondition" Component="freemind.controller.filter.condition" LOC="7" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="AttributeNotExistsCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="AttributeNotExistsCondition" Component="freemind.controller.filter.condition" LOC="4" Name="createDesctiption" PC="0"/>
                <MethodMetric CC="1" Class="CompareConditionAdapter" Component="freemind.controller.filter.condition" LOC="5" Name="CompareConditionAdapter" PC="2"/>
                <MethodMetric CC="1" Class="CompareConditionAdapter" Component="freemind.controller.filter.condition" LOC="20" Name="compareTo" PC="1"/>
                <MethodMetric CC="1" Class="CompareConditionAdapter" Component="freemind.controller.filter.condition" LOC="5" Name="saveAttributes" PC="1"/>
                <MethodMetric CC="4" Class="CompareConditionAdapter" Component="freemind.controller.filter.condition" LOC="0" Name="createDescription" PC="3"/>
                <MethodMetric CC="1" Class="Condition" Component="freemind.controller.filter.condition" LOC="0" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="Condition" Component="freemind.controller.filter.condition" LOC="0" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="1" Class="Condition" Component="freemind.controller.filter.condition" LOC="0" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="2" Name="ConditionFactory" PC="0"/>
                <MethodMetric CC="1" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="4" Name="createDescription" PC="4"/>
                <MethodMetric CC="12" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="20" Name="loadCondition" PC="1"/>
                <MethodMetric CC="16" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="21" Name="createAttributeCondition" PC="4"/>
                <MethodMetric CC="4" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="8" Name="createCondition" PC="4"/>
                <MethodMetric CC="1" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="3" Name="getNodeConditionNames" PC="0"/>
                <MethodMetric CC="1" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="3" Name="getIconConditionNames" PC="0"/>
                <MethodMetric CC="1" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="3" Name="getAttributeConditionNames" PC="0"/>
                <MethodMetric CC="18" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="27" Name="createNodeCondition" PC="3"/>
                <MethodMetric CC="1" Class="ConditionFactory" Component="freemind.controller.filter.condition" LOC="6" Name="createCellRendererComponent" PC="1"/>
                <MethodMetric CC="1" Class="ConditionNotSatisfiedDecorator" Component="freemind.controller.filter.condition" LOC="4" Name="ConditionNotSatisfiedDecorator" PC="1"/>
                <MethodMetric CC="1" Class="ConditionNotSatisfiedDecorator" Component="freemind.controller.filter.condition" LOC="3" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="ConditionNotSatisfiedDecorator" Component="freemind.controller.filter.condition" LOC="10" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="1" Class="ConditionNotSatisfiedDecorator" Component="freemind.controller.filter.condition" LOC="6" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="ConditionNotSatisfiedDecorator" Component="freemind.controller.filter.condition" LOC="5" Name="load" PC="1"/>
                <MethodMetric CC="5" Class="ConditionRenderer" Component="freemind.controller.filter.condition" LOC="23" Name="getListCellRendererComponent" PC="5"/>
                <MethodMetric CC="1" Class="ConjunctConditions" Component="freemind.controller.filter.condition" LOC="3" Name="ConjunctConditions" PC="1"/>
                <MethodMetric CC="3" Class="ConjunctConditions" Component="freemind.controller.filter.condition" LOC="8" Name="checkNode" PC="2"/>
                <MethodMetric CC="2" Class="ConjunctConditions" Component="freemind.controller.filter.condition" LOC="20" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="2" Class="ConjunctConditions" Component="freemind.controller.filter.condition" LOC="9" Name="save" PC="1"/>
                <MethodMetric CC="2" Class="ConjunctConditions" Component="freemind.controller.filter.condition" LOC="9" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="DisjunctConditions" Component="freemind.controller.filter.condition" LOC="3" Name="DisjunctConditions" PC="1"/>
                <MethodMetric CC="3" Class="DisjunctConditions" Component="freemind.controller.filter.condition" LOC="8" Name="checkNode" PC="2"/>
                <MethodMetric CC="2" Class="DisjunctConditions" Component="freemind.controller.filter.condition" LOC="20" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="2" Class="DisjunctConditions" Component="freemind.controller.filter.condition" LOC="9" Name="save" PC="1"/>
                <MethodMetric CC="2" Class="DisjunctConditions" Component="freemind.controller.filter.condition" LOC="9" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="IconContainedCondition" PC="1"/>
                <MethodMetric CC="1" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="checkNode" PC="2"/>
                <MethodMetric CC="3" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="8" Name="iconFirstIndex" PC="2"/>
                <MethodMetric CC="3" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="9" Name="iconLastIndex" PC="2"/>
                <MethodMetric CC="3" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="8" Name="isStateIconContained" PC="2"/>
                <MethodMetric CC="1" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="7" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="1" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="getIconName" PC="0"/>
                <MethodMetric CC="1" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="6" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="IconContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="IconNotContainedCondition" PC="1"/>
                <MethodMetric CC="1" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="checkNode" PC="2"/>
                <MethodMetric CC="3" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="8" Name="iconFirstIndex" PC="2"/>
                <MethodMetric CC="3" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="9" Name="iconLastIndex" PC="2"/>
                <MethodMetric CC="3" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="8" Name="isStateIconContained" PC="2"/>
                <MethodMetric CC="1" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="7" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="1" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="getIconName" PC="0"/>
                <MethodMetric CC="1" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="6" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="IconNotContainedCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="IgnoreCaseNodeContainsCondition" Component="freemind.controller.filter.condition" LOC="4" Name="IgnoreCaseNodeContainsCondition" PC="1"/>
                <MethodMetric CC="1" Class="IgnoreCaseNodeContainsCondition" Component="freemind.controller.filter.condition" LOC="3" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="IgnoreCaseNodeContainsCondition" Component="freemind.controller.filter.condition" LOC="7" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="IgnoreCaseNodeContainsCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="IgnoreCaseNodeContainsCondition" Component="freemind.controller.filter.condition" LOC="5" Name="createDesctiption" PC="0"/>
                <MethodMetric CC="1" Class="JCondition" Component="freemind.controller.filter.condition" LOC="5" Name="JCondition" PC="0"/>
                <MethodMetric CC="1" Class="NodeCompareCondition" Component="freemind.controller.filter.condition" LOC="5" Name="NodeCompareCondition" PC="4"/>
                <MethodMetric CC="1" Class="NodeCompareCondition" Component="freemind.controller.filter.condition" LOC="8" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="NodeCompareCondition" Component="freemind.controller.filter.condition" LOC="8" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="NodeCompareCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="NodeCompareCondition" Component="freemind.controller.filter.condition" LOC="4" Name="createDesctiption" PC="0"/>
                <MethodMetric CC="1" Class="NodeCondition" Component="freemind.controller.filter.condition" LOC="2" Name="NodeCondition" PC="0"/>
                <MethodMetric CC="2" Class="NodeCondition" Component="freemind.controller.filter.condition" LOC="6" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="2" Class="NodeCondition" Component="freemind.controller.filter.condition" LOC="6" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="NodeCondition" Component="freemind.controller.filter.condition" LOC="0" Name="createDesctiption" PC="0"/>
                <MethodMetric CC="1" Class="NodeCondition" Component="freemind.controller.filter.condition" LOC="2" Name="saveAttributes" PC="1"/>
                <MethodMetric CC="1" Class="NodeContainsCondition" Component="freemind.controller.filter.condition" LOC="4" Name="NodeContainsCondition" PC="1"/>
                <MethodMetric CC="1" Class="NodeContainsCondition" Component="freemind.controller.filter.condition" LOC="3" Name="checkNode" PC="2"/>
                <MethodMetric CC="1" Class="NodeContainsCondition" Component="freemind.controller.filter.condition" LOC="7" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="NodeContainsCondition" Component="freemind.controller.filter.condition" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="NodeContainsCondition" Component="freemind.controller.filter.condition" LOC="5" Name="createDesctiption" PC="0"/>
                <MethodMetric CC="1" Class="NoFilteringCondition" Component="freemind.controller.filter.condition" LOC="3" Name="NoFilteringCondition" PC="0"/>
                <MethodMetric CC="2" Class="NoFilteringCondition" Component="freemind.controller.filter.condition" LOC="6" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="NoFilteringCondition" Component="freemind.controller.filter.condition" LOC="3" Name="checkNode" PC="2"/>
                <MethodMetric CC="2" Class="NoFilteringCondition" Component="freemind.controller.filter.condition" LOC="6" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="2" Class="NoFilteringCondition" Component="freemind.controller.filter.condition" LOC="6" Name="createCondition" PC="0"/>
                <MethodMetric CC="1" Class="NoFilteringCondition" Component="freemind.controller.filter.condition" LOC="2" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="SelectedViewCondition" Component="freemind.controller.filter.condition" LOC="3" Name="SelectedViewCondition" PC="0"/>
                <MethodMetric CC="2" Class="SelectedViewCondition" Component="freemind.controller.filter.condition" LOC="6" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="SelectedViewCondition" Component="freemind.controller.filter.condition" LOC="4" Name="checkNode" PC="2"/>
                <MethodMetric CC="2" Class="SelectedViewCondition" Component="freemind.controller.filter.condition" LOC="6" Name="getListCellRendererComponent" PC="0"/>
                <MethodMetric CC="2" Class="SelectedViewCondition" Component="freemind.controller.filter.condition" LOC="6" Name="CreateCondition" PC="0"/>
                <MethodMetric CC="1" Class="SelectedViewCondition" Component="freemind.controller.filter.condition" LOC="2" Name="save" PC="1"/>
                <MethodMetric CC="3" Class="DefaultFilter" Component="freemind.controller.filter" LOC="8" Name="DefaultFilter" PC="3"/>
                <MethodMetric CC="3" Class="DefaultFilter" Component="freemind.controller.filter" LOC="18" Name="applyFilter" PC="1"/>
                <MethodMetric CC="5" Class="DefaultFilter" Component="freemind.controller.filter" LOC="20" Name="selectVisibleNode" PC="1"/>
                <MethodMetric CC="2" Class="DefaultFilter" Component="freemind.controller.filter" LOC="4" Name="getNearestVisibleParent" PC="1"/>
                <MethodMetric CC="2" Class="DefaultFilter" Component="freemind.controller.filter" LOC="9" Name="filterChildren" PC="4"/>
                <MethodMetric CC="5" Class="DefaultFilter" Component="freemind.controller.filter" LOC="20" Name="applyFilter" PC="5"/>
                <MethodMetric CC="2" Class="DefaultFilter" Component="freemind.controller.filter" LOC="5" Name="isVisible" PC="1"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="resetFilter" PC="1"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="addFilterResult" PC="2"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="areMatchedShown" PC="0"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="areHiddenShown" PC="0"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="areAncestorsShown" PC="0"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="areDescendantsShown" PC="0"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="areEclipsedShown" PC="0"/>
                <MethodMetric CC="1" Class="DefaultFilter" Component="freemind.controller.filter" LOC="3" Name="getCondition" PC="0"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="applyFilter" PC="1"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="isVisible" PC="1"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="areMatchedShown" PC="0"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="areHiddenShown" PC="0"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="areAncestorsShown" PC="0"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="areDescendantsShown" PC="0"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="areEclipsedShown" PC="0"/>
                <MethodMetric CC="1" Class="Filter" Component="freemind.controller.filter" LOC="0" Name="getCondition" PC="0"/>
                <MethodMetric CC="1" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="5" Name="getFileChooser" PC="0"/>
                <MethodMetric CC="2" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="124" Name="FilterComposerDialog" PC="2"/>
                <MethodMetric CC="2" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="8" Name="getAttributeValue" PC="0"/>
                <MethodMetric CC="5" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="23" Name="mapChanged" PC="1"/>
                <MethodMetric CC="3" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="11" Name="selectCondition" PC="0"/>
                <MethodMetric CC="1" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="3" Name="setSelectedItem" PC="1"/>
                <MethodMetric CC="1" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="4" Name="show" PC="0"/>
                <MethodMetric CC="5" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="25" Name="initInternalConditionModel" PC="0"/>
                <MethodMetric CC="1" Class="FilterComposerDialog" Component="freemind.controller.filter" LOC="6" Name="applyChanges" PC="0"/>
                <MethodMetric CC="1" Class="AddConditionAction" Component="freemind.controller.filter" LOC="4" Name="AddConditionAction" PC="0"/>
                <MethodMetric CC="6" Class="AddConditionAction" Component="freemind.controller.filter" LOC="33" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="DeleteConditionAction" Component="freemind.controller.filter" LOC="4" Name="DeleteConditionAction" PC="0"/>
                <MethodMetric CC="3" Class="DeleteConditionAction" Component="freemind.controller.filter" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CreateNotSatisfiedConditionAction" Component="freemind.controller.filter" LOC="4" Name="CreateNotSatisfiedConditionAction" PC="0"/>
                <MethodMetric CC="3" Class="CreateNotSatisfiedConditionAction" Component="freemind.controller.filter" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CreateConjunctConditionAction" Component="freemind.controller.filter" LOC="4" Name="CreateConjunctConditionAction" PC="0"/>
                <MethodMetric CC="2" Class="CreateConjunctConditionAction" Component="freemind.controller.filter" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CreateDisjunctConditionAction" Component="freemind.controller.filter" LOC="4" Name="CreateDisjunctConditionAction" PC="0"/>
                <MethodMetric CC="2" Class="CreateDisjunctConditionAction" Component="freemind.controller.filter" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="ConditionListSelectionListener" Component="freemind.controller.filter" LOC="22" Name="valueChanged" PC="1"/>
                <MethodMetric CC="1" Class="ConditionListSelectionListener" Component="freemind.controller.filter" LOC="3" Name="intervalAdded" PC="1"/>
                <MethodMetric CC="1" Class="ConditionListSelectionListener" Component="freemind.controller.filter" LOC="2" Name="intervalRemoved" PC="1"/>
                <MethodMetric CC="1" Class="ConditionListSelectionListener" Component="freemind.controller.filter" LOC="2" Name="contentsChanged" PC="1"/>
                <MethodMetric CC="3" Class="ConditionListMouseListener" Component="freemind.controller.filter" LOC="12" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="2" Class="ConditionListMouseListener" Component="freemind.controller.filter" LOC="5" Name="run" PC="0"/>
                <MethodMetric CC="3" Class="CloseAction" Component="freemind.controller.filter" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="4" Class="MindMapFilterFileFilter" Component="freemind.controller.filter" LOC="13" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="MindMapFilterFileFilter" Component="freemind.controller.filter" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="3" Class="SaveAction" Component="freemind.controller.filter" LOC="20" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SaveAction" Component="freemind.controller.filter" LOC="2" Name="handleSavingException" PC="1"/>
                <MethodMetric CC="2" Class="LoadAction" Component="freemind.controller.filter" LOC="15" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="LoadAction" Component="freemind.controller.filter" LOC="2" Name="handleLoadingException" PC="1"/>
                <MethodMetric CC="2" Class="SimpleConditionChangeListener" Component="freemind.controller.filter" LOC="7" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="10" Class="SelectedAttributeChangeListener" Component="freemind.controller.filter" LOC="50" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="4" Name="FilterController" PC="1"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="4" Name="getConditionRenderer" PC="0"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="12" Name="getFilterToolbar" PC="0"/>
                <MethodMetric CC="3" Class="FilterController" Component="freemind.controller.filter" LOC="12" Name="showFilterToolbar" PC="1"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="3" Name="isVisible" PC="0"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="3" Name="refreshMap" PC="0"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="4" Name="getConditionFactory" PC="0"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="3" Name="setFilterToolbar" PC="1"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="2" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="2" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="9" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="4" Name="createTransparentFilter" PC="0"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="5" Name="saveConditions" PC="0"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="3" Name="getFilterConditionModel" PC="0"/>
                <MethodMetric CC="1" Class="FilterController" Component="freemind.controller.filter" LOC="4" Name="setFilterConditionModel" PC="1"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="11" Name="saveConditions" PC="2"/>
                <MethodMetric CC="2" Class="FilterController" Component="freemind.controller.filter" LOC="11" Name="loadConditions" PC="2"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="FilterInfo" PC="0"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="reset" PC="0"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="setAncestor" PC="0"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="setDescendant" PC="0"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="setMatched" PC="0"/>
                <MethodMetric CC="2" Class="FilterInfo" Component="freemind.controller.filter" LOC="6" Name="add" PC="1"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="get" PC="0"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="isAncestor" PC="0"/>
                <MethodMetric CC="1" Class="FilterInfo" Component="freemind.controller.filter" LOC="3" Name="isMatched" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="30" Name="FilterToolbar" PC="1"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="3" Name="getMaximumSize" PC="0"/>
                <MethodMetric CC="2" Class="FilterToolbar" Component="freemind.controller.filter" LOC="9" Name="addStandardConditions" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="14" Name="initConditions" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="3" Name="resetFilter" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="3" Name="getSelectedCondition" PC="0"/>
                <MethodMetric CC="3" Class="FilterToolbar" Component="freemind.controller.filter" LOC="7" Name="setMapFilter" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="3" Name="getFilterDialog" PC="0"/>
                <MethodMetric CC="4" Class="FilterToolbar" Component="freemind.controller.filter" LOC="17" Name="mapChanged" PC="1"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="3" Name="refreshMap" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="7" Name="saveConditions" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="3" Name="getFilterConditionModel" PC="0"/>
                <MethodMetric CC="1" Class="FilterToolbar" Component="freemind.controller.filter" LOC="3" Name="setFilterConditionModel" PC="1"/>
                <MethodMetric CC="1" Class="FilterChangeListener" Component="freemind.controller.filter" LOC="2" Name="FilterChangeListener" PC="0"/>
                <MethodMetric CC="1" Class="FilterChangeListener" Component="freemind.controller.filter" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="FilterChangeListener" Component="freemind.controller.filter" LOC="3" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="2" Class="FilterChangeListener" Component="freemind.controller.filter" LOC="10" Name="filterChanged" PC="0"/>
                <MethodMetric CC="2" Class="FilterChangeListener" Component="freemind.controller.filter" LOC="6" Name="propertyChange" PC="1"/>
                <MethodMetric CC="1" Class="EditFilterAction" Component="freemind.controller.filter" LOC="4" Name="EditFilterAction" PC="0"/>
                <MethodMetric CC="2" Class="EditFilterAction" Component="freemind.controller.filter" LOC="7" Name="getFilterDialog" PC="0"/>
                <MethodMetric CC="2" Class="EditFilterAction" Component="freemind.controller.filter" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="UnfoldAncestorsAction" Component="freemind.controller.filter" LOC="3" Name="UnfoldAncestorsAction" PC="0"/>
                <MethodMetric CC="3" Class="UnfoldAncestorsAction" Component="freemind.controller.filter" LOC="9" Name="unfoldAncestors" PC="1"/>
                <MethodMetric CC="2" Class="UnfoldAncestorsAction" Component="freemind.controller.filter" LOC="5" Name="setFolded" PC="2"/>
                <MethodMetric CC="2" Class="UnfoldAncestorsAction" Component="freemind.controller.filter" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="5" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="22" Name="setExtensionList" PC="1"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="ExtendedComboBoxModel" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="ExtendedComboBoxModel" PC="1"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="ExtendedComboBoxModel" PC="1"/>
                <MethodMetric CC="2" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="5" Name="getElementAt" PC="1"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="getSize" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="getExtensionSize" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="getOwnSize" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="insertElementAt" PC="2"/>
                <MethodMetric CC="2" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="6" Name="removeAllElements" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="removeElement" PC="1"/>
                <MethodMetric CC="2" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="removeElementAt" PC="1"/>
                <MethodMetric CC="2" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="5" Name="addSortedElement" PC="1"/>
                <MethodMetric CC="2" Class="ExtendedComboBoxModel" Component="freemind.controller.filter.util" LOC="8" Name="getIndexOf" PC="1"/>
                <MethodMetric CC="1" Class="ExtensionDataListener" Component="freemind.controller.filter.util" LOC="4" Name="intervalAdded" PC="1"/>
                <MethodMetric CC="1" Class="ExtensionDataListener" Component="freemind.controller.filter.util" LOC="4" Name="intervalRemoved" PC="1"/>
                <MethodMetric CC="1" Class="ExtensionDataListener" Component="freemind.controller.filter.util" LOC="4" Name="contentsChanged" PC="1"/>
                <MethodMetric CC="1" Class="SortedComboBoxModel" Component="freemind.controller.filter.util" LOC="4" Name="setSelectedItem" PC="1"/>
                <MethodMetric CC="1" Class="SortedComboBoxModel" Component="freemind.controller.filter.util" LOC="3" Name="getSelectedItem" PC="0"/>
                <MethodMetric CC="1" Class="SortedListModel" Component="freemind.controller.filter.util" LOC="0" Name="clear" PC="0"/>
                <MethodMetric CC="1" Class="SortedListModel" Component="freemind.controller.filter.util" LOC="0" Name="contains" PC="1"/>
                <MethodMetric CC="1" Class="SortedListModel" Component="freemind.controller.filter.util" LOC="0" Name="add" PC="1"/>
                <MethodMetric CC="1" Class="SortedListModel" Component="freemind.controller.filter.util" LOC="0" Name="replace" PC="2"/>
                <MethodMetric CC="1" Class="SortedListModel" Component="freemind.controller.filter.util" LOC="0" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="SortedListModel" Component="freemind.controller.filter.util" LOC="0" Name="getIndexOf" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="3" Name="SortedMapListModel" PC="0"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="3" Name="getSize" PC="0"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="3" Name="getElementAt" PC="1"/>
                <MethodMetric CC="2" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="5" Name="add" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="5" Name="addAll" PC="1"/>
                <MethodMetric CC="2" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="7" Name="clear" PC="0"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="3" Name="contains" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="3" Name="firstElement" PC="0"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="3" Name="iterator" PC="0"/>
                <MethodMetric CC="1" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="3" Name="lastElement" PC="0"/>
                <MethodMetric CC="3" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="9" Name="getIndexOf" PC="1"/>
                <MethodMetric CC="3" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="8" Name="replace" PC="2"/>
                <MethodMetric CC="2" Class="SortedMapListModel" Component="freemind.controller.filter.util" LOC="5" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="SortedMapVector" PC="0"/>
                <MethodMetric CC="2" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="8" Name="add" PC="2"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="capacity" PC="0"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="clear" PC="0"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="getValue" PC="1"/>
                <MethodMetric CC="2" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="5" Name="getValue" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="getKey" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="4" Name="containsKey" PC="1"/>
                <MethodMetric CC="2" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="5" Name="indexOf" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="findElement" PC="1"/>
                <MethodMetric CC="12" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="29" Name="findElement" PC="3"/>
                <MethodMetric CC="2" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="8" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="SortedMapVector" Component="freemind.controller.filter.util" LOC="3" Name="size" PC="0"/>
                <MethodMetric CC="1" Class="MapElement" Component="freemind.controller.filter.util" LOC="5" Name="MapElement" PC="2"/>
                <MethodMetric CC="1" Class="MapElement" Component="freemind.controller.filter.util" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="MapElement" Component="freemind.controller.filter.util" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="MapElement" Component="freemind.controller.filter.util" LOC="3" Name="getKey" PC="0"/>
                <MethodMetric CC="1" Class="BrowseAction" Component="freemind.controller.printpreview" LOC="12" Name="BrowseAction" PC="3"/>
                <MethodMetric CC="1" Class="BrowseAction" Component="freemind.controller.printpreview" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="BrowseAction" Component="freemind.controller.printpreview" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="BrowseAction" Component="freemind.controller.printpreview" LOC="4" Name="paintPageIndex" PC="0"/>
                <MethodMetric CC="1" Class="BrowseAction" Component="freemind.controller.printpreview" LOC="3" Name="getPageIndexText" PC="0"/>
                <MethodMetric CC="3" Class="Preview" Component="freemind.controller.printpreview" LOC="10" Name="Preview" PC="2"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="6" Name="paintPaper" PC="2"/>
                <MethodMetric CC="3" Class="Preview" Component="freemind.controller.printpreview" LOC="14" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="3" Name="getPageHeight" PC="1"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="3" Name="getPageWidth" PC="1"/>
                <MethodMetric CC="2" Class="Preview" Component="freemind.controller.printpreview" LOC="7" Name="moveIndex" PC="1"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="4" Name="changeZoom" PC="1"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="6" Name="resize" PC="0"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="3" Name="getPageFormat" PC="0"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="3" Name="getMinimumSize" PC="0"/>
                <MethodMetric CC="1" Class="Preview" Component="freemind.controller.printpreview" LOC="3" Name="getPageIndex" PC="0"/>
                <MethodMetric CC="1" Class="PreviewDialog" Component="freemind.controller.printpreview" LOC="27" Name="PreviewDialog" PC="2"/>
                <MethodMetric CC="1" Class="PreviewDialog" Component="freemind.controller.printpreview" LOC="3" Name="getButton" PC="1"/>
                <MethodMetric CC="1" Class="PreviewDialog" Component="freemind.controller.printpreview" LOC="3" Name="getButton" PC="2"/>
                <MethodMetric CC="5" Class="PreviewDialog" Component="freemind.controller.printpreview" LOC="13" Name="getButton" PC="3"/>
                <MethodMetric CC="1" Class="PreviewDialog" Component="freemind.controller.printpreview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ZoomAction" Component="freemind.controller.printpreview" LOC="5" Name="ZoomAction" PC="2"/>
                <MethodMetric CC="1" Class="ZoomAction" Component="freemind.controller.printpreview" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ExportHook" Component="freemind.extensions" LOC="4" Name="chooseFile" PC="3"/>
                <MethodMetric CC="6" Class="ExportHook" Component="freemind.extensions" LOC="28" Name="chooseImageFile" PC="4"/>
                <MethodMetric CC="2" Class="ExportHook" Component="freemind.extensions" LOC="7" Name="getTranslatableResourceString" PC="1"/>
                <MethodMetric CC="2" Class="ExportHook" Component="freemind.extensions" LOC="13" Name="createBufferedImage" PC="0"/>
                <MethodMetric CC="2" Class="ExportHook" Component="freemind.extensions" LOC="17" Name="copyFromResource" PC="3"/>
                <MethodMetric CC="2" Class="ExportHook" Component="freemind.extensions" LOC="17" Name="copyFromFile" PC="3"/>
                <MethodMetric CC="1" Class="ImageFilter" Component="freemind.extensions" LOC="4" Name="ImageFilter" PC="2"/>
                <MethodMetric CC="2" Class="ImageFilter" Component="freemind.extensions" LOC="7" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="ImageFilter" Component="freemind.extensions" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="2" Class="HookAdapter" Component="freemind.extensions" LOC="4" Name="HookAdapter" PC="0"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="2" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="getProperties" PC="0"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="setProperties" PC="1"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="setController" PC="1"/>
                <MethodMetric CC="3" Class="HookAdapter" Component="freemind.extensions" LOC="10" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="getPluginBaseClass" PC="0"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="setPluginBaseClass" PC="1"/>
                <MethodMetric CC="1" Class="HookAdapter" Component="freemind.extensions" LOC="3" Name="obtainFocusForSelected" PC="0"/>
                <MethodMetric CC="2" Class="HookDescriptorBase" Component="freemind.extensions" LOC="9" Name="HookDescriptorBase" PC="3"/>
                <MethodMetric CC="3" Class="HookDescriptorBase" Component="freemind.extensions" LOC="9" Name="getFromResourceIfNecessary" PC="1"/>
                <MethodMetric CC="3" Class="HookDescriptorBase" Component="freemind.extensions" LOC="9" Name="getFromPropertiesIfNecessary" PC="1"/>
                <MethodMetric CC="1" Class="HookDescriptorBase" Component="freemind.extensions" LOC="3" Name="getPluginDirectory" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorBase" Component="freemind.extensions" LOC="3" Name="getPluginBase" PC="0"/>
                <MethodMetric CC="3" Class="HookDescriptorBase" Component="freemind.extensions" LOC="11" Name="getPluginClasspath" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorBase" Component="freemind.extensions" LOC="5" Name="getPluginClassLoader" PC="0"/>
                <MethodMetric CC="2" Class="HookDescriptorBase" Component="freemind.extensions" LOC="8" Name="createPluginClasspathString" PC="1"/>
                <MethodMetric CC="4" Class="HookDescriptorBase" Component="freemind.extensions" LOC="25" Name="getClassLoader" PC="1"/>
                <MethodMetric CC="6" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="25" Name="HookDescriptorPluginAction" PC="4"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="4" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="12" Name="getInstanciationMethod" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getModes" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getBaseClass" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getClassName" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getDocumentation" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getIconPath" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getKeyStroke" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="getProperties" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorPluginAction" Component="freemind.extensions" LOC="3" Name="isSelectable" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorRegistration" Component="freemind.extensions" LOC="4" Name="HookDescriptorRegistration" PC="4"/>
                <MethodMetric CC="1" Class="HookDescriptorRegistration" Component="freemind.extensions" LOC="3" Name="getClassName" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorRegistration" Component="freemind.extensions" LOC="3" Name="getIsPluginBase" PC="0"/>
                <MethodMetric CC="1" Class="HookDescriptorRegistration" Component="freemind.extensions" LOC="3" Name="getListPluginModeList" PC="0"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="getPossibleNodeHooks" PC="0"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="getPossibleModeControllerHooks" PC="0"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="createModeControllerHook" PC="1"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="createNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="getHookInNode" PC="2"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="getHookMenuPositions" PC="1"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="getInstanciationMethod" PC="1"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="getRegistrations" PC="0"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="registerRegistrationContainer" PC="2"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="deregisterAllRegistrationContainer" PC="0"/>
                <MethodMetric CC="1" Class="HookFactory" Component="freemind.extensions" LOC="0" Name="getPluginBaseClass" PC="1"/>
                <MethodMetric CC="1" Class="RegistrationContainer" Component="freemind.extensions" LOC="2" Name="RegistrationContainer" PC="0"/>
                <MethodMetric CC="1" Class="HookFactoryAdapter" Component="freemind.extensions" LOC="3" Name="HookFactoryAdapter" PC="0"/>
                <MethodMetric CC="3" Class="HookFactoryAdapter" Component="freemind.extensions" LOC="9" Name="getHookInNode" PC="2"/>
                <MethodMetric CC="2" Class="HookFactoryAdapter" Component="freemind.extensions" LOC="5" Name="registerRegistrationContainer" PC="2"/>
                <MethodMetric CC="1" Class="HookFactoryAdapter" Component="freemind.extensions" LOC="3" Name="deregisterAllRegistrationContainer" PC="0"/>
                <MethodMetric CC="1" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="3" Name="isSingleton" PC="0"/>
                <MethodMetric CC="1" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="3" Name="isPermanent" PC="0"/>
                <MethodMetric CC="1" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="6" Name="HookInstanciationMethod" PC="4"/>
                <MethodMetric CC="1" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="9" Name="getAllInstanciationMethods" PC="0"/>
                <MethodMetric CC="1" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="3" Name="getDestinationNodes" PC="3"/>
                <MethodMetric CC="3" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="9" Name="isAlreadyPresent" PC="3"/>
                <MethodMetric CC="1" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="3" Name="getCenterNode" PC="3"/>
                <MethodMetric CC="1" Class="HookInstanciationMethod" Component="freemind.extensions" LOC="3" Name="isUndoable" PC="0"/>
                <MethodMetric CC="1" Class="DestinationNodesGetter" Component="freemind.extensions" LOC="0" Name="getDestinationNodes" PC="3"/>
                <MethodMetric CC="1" Class="DestinationNodesGetter" Component="freemind.extensions" LOC="0" Name="getCenterNode" PC="3"/>
                <MethodMetric CC="1" Class="DefaultDestinationNodesGetter" Component="freemind.extensions" LOC="3" Name="getDestinationNodes" PC="3"/>
                <MethodMetric CC="1" Class="DefaultDestinationNodesGetter" Component="freemind.extensions" LOC="3" Name="getCenterNode" PC="3"/>
                <MethodMetric CC="1" Class="RootDestinationNodesGetter" Component="freemind.extensions" LOC="5" Name="getDestinationNodes" PC="3"/>
                <MethodMetric CC="1" Class="RootDestinationNodesGetter" Component="freemind.extensions" LOC="3" Name="getCenterNode" PC="3"/>
                <MethodMetric CC="2" Class="AllDestinationNodesGetter" Component="freemind.extensions" LOC="7" Name="addChilds" PC="2"/>
                <MethodMetric CC="1" Class="AllDestinationNodesGetter" Component="freemind.extensions" LOC="5" Name="getDestinationNodes" PC="3"/>
                <MethodMetric CC="1" Class="AllDestinationNodesGetter" Component="freemind.extensions" LOC="3" Name="getCenterNode" PC="3"/>
                <MethodMetric CC="1" Class="HookRegistration" Component="freemind.extensions" LOC="0" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="HookRegistration" Component="freemind.extensions" LOC="0" Name="deRegister" PC="0"/>
                <MethodMetric CC="2" Class="ImportWizard" Component="freemind.extensions" LOC="6" Name="ImportWizard" PC="1"/>
                <MethodMetric CC="7" Class="ImportWizard" Component="freemind.extensions" LOC="36" Name="buildClassList" PC="0"/>
                <MethodMetric CC="3" Class="ImportWizard" Component="freemind.extensions" LOC="17" Name="addClassesFromZip" PC="2"/>
                <MethodMetric CC="2" Class="ImportWizard" Component="freemind.extensions" LOC="8" Name="isInteresting" PC="1"/>
                <MethodMetric CC="8" Class="ImportWizard" Component="freemind.extensions" LOC="38" Name="addClassesFromDir" PC="4"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="setProperties" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="setController" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="getPluginBaseClass" PC="0"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="setPluginBaseClass" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="MindMapHook" Component="freemind.extensions" LOC="0" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="PluginBaseClassSearcher" Component="freemind.extensions" LOC="0" Name="getPluginBaseObject" PC="0"/>
                <MethodMetric CC="1" Class="ModeControllerHookAdapter" Component="freemind.extensions" LOC="3" Name="ModeControllerHookAdapter" PC="0"/>
                <MethodMetric CC="1" Class="NodeHook" Component="freemind.extensions" LOC="0" Name="setMap" PC="1"/>
                <MethodMetric CC="1" Class="NodeHook" Component="freemind.extensions" LOC="0" Name="setNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeHook" Component="freemind.extensions" LOC="0" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="NodeHookAdapter" PC="0"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="getNode" PC="0"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="setNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="setMap" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAdapter" Component="freemind.extensions" LOC="3" Name="getNodeId" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onAddChild" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onNewChild" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onRemoveChild" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onRemoveChildren" PC="2"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="processUnfinishedLinks" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHook" Component="freemind.extensions" LOC="0" Name="saveHtml" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="PermanentNodeHookAdapter" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="6" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onAddChild" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onNewChild" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onRemoveChild" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="4" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="4" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="14" Name="loadNameValuePairs" PC="1"/>
                <MethodMetric CC="2" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="10" Name="saveNameValuePairs" PC="2"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="onRemoveChildren" PC="2"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="setToolTip" PC="2"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="setToolTip" PC="3"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="executeTransaction" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="registerFilter" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="deregisterFilter" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="3" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="processUnfinishedLinks" PC="0"/>
                <MethodMetric CC="1" Class="PermanentNodeHookAdapter" Component="freemind.extensions" LOC="2" Name="saveHtml" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookSubstituteUnknown" Component="freemind.extensions" LOC="4" Name="PermanentNodeHookSubstituteUnknown" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookSubstituteUnknown" Component="freemind.extensions" LOC="4" Name="loadFrom" PC="1"/>
                <MethodMetric CC="2" Class="PermanentNodeHookSubstituteUnknown" Component="freemind.extensions" LOC="7" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="PermanentNodeHookSubstituteUnknown" Component="freemind.extensions" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="12" Class="Base64Coding" Component="freemind.main" LOC="52" Name="decode64" PC="1"/>
                <MethodMetric CC="10" Class="Base64Coding" Component="freemind.main" LOC="49" Name="encode64" PC="1"/>
                <MethodMetric CC="3" Class="EditServer" Component="freemind.main" LOC="35" Name="EditServer" PC="2"/>
                <MethodMetric CC="5" Class="EditServer" Component="freemind.main" LOC="19" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="EditServer" Component="freemind.main" LOC="3" Name="isOK" PC="0"/>
                <MethodMetric CC="1" Class="EditServer" Component="freemind.main" LOC="3" Name="getPort" PC="0"/>
                <MethodMetric CC="1" Class="EditServer" Component="freemind.main" LOC="9" Name="stopServer" PC="0"/>
                <MethodMetric CC="3" Class="EditServer" Component="freemind.main" LOC="36" Name="handleClient" PC="2"/>
                <MethodMetric CC="2" Class="EditServer" Component="freemind.main" LOC="15" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="ExampleFileFilter" Component="freemind.main" LOC="3" Name="ExampleFileFilter" PC="0"/>
                <MethodMetric CC="1" Class="ExampleFileFilter" Component="freemind.main" LOC="3" Name="ExampleFileFilter" PC="1"/>
                <MethodMetric CC="3" Class="ExampleFileFilter" Component="freemind.main" LOC="5" Name="ExampleFileFilter" PC="2"/>
                <MethodMetric CC="1" Class="ExampleFileFilter" Component="freemind.main" LOC="3" Name="ExampleFileFilter" PC="1"/>
                <MethodMetric CC="3" Class="ExampleFileFilter" Component="freemind.main" LOC="7" Name="ExampleFileFilter" PC="2"/>
                <MethodMetric CC="4" Class="ExampleFileFilter" Component="freemind.main" LOC="13" Name="accept" PC="1"/>
                <MethodMetric CC="3" Class="ExampleFileFilter" Component="freemind.main" LOC="11" Name="getExtension" PC="1"/>
                <MethodMetric CC="2" Class="ExampleFileFilter" Component="freemind.main" LOC="7" Name="addExtension" PC="1"/>
                <MethodMetric CC="5" Class="ExampleFileFilter" Component="freemind.main" LOC="19" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="ExampleFileFilter" Component="freemind.main" LOC="4" Name="setDescription" PC="1"/>
                <MethodMetric CC="1" Class="ExampleFileFilter" Component="freemind.main" LOC="4" Name="setExtensionListInDescription" PC="1"/>
                <MethodMetric CC="1" Class="ExampleFileFilter" Component="freemind.main" LOC="3" Name="isExtensionListInDescription" PC="0"/>
                <MethodMetric CC="1" Class="FeedBack" Component="freemind.main" LOC="0" Name="progress" PC="3"/>
                <MethodMetric CC="1" Class="FeedBack" Component="freemind.main" LOC="0" Name="getActualValue" PC="0"/>
                <MethodMetric CC="1" Class="FeedBack" Component="freemind.main" LOC="0" Name="setMaximumValue" PC="1"/>
                <MethodMetric CC="1" Class="FeedBack" Component="freemind.main" LOC="0" Name="increase" PC="2"/>
                <MethodMetric CC="1" Class="FixedHTMLWriter" Component="freemind.main" LOC="3" Name="FixedHTMLWriter" PC="2"/>
                <MethodMetric CC="1" Class="FixedHTMLWriter" Component="freemind.main" LOC="3" Name="FixedHTMLWriter" PC="4"/>
                <MethodMetric CC="6" Class="FixedHTMLWriter" Component="freemind.main" LOC="22" Name="convertToHTML" PC="2"/>
                <MethodMetric CC="5" Class="FixedHTMLWriter" Component="freemind.main" LOC="19" Name="writeAttributes" PC="1"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="36" Name="FreeMind" PC="3"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="30" Name="init" PC="1"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="6" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="8" Class="FreeMind" Component="freemind.main" LOC="33" Name="updateLookAndFeel" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="isApplet" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getPatternsFile" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getFreemindVersion" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getWinHeight" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getWinWidth" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getWinX" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getWinY" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getWinState" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="8" Name="getIntProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getProperties" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="setProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getDefaultProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="setDefaultProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getFreemindDirectory" PC="0"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="20" Name="saveProperties" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="setView" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getFreeMindMenuBar" PC="0"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="5" Name="out" PC="1"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="5" Name="err" PC="1"/>
                <MethodMetric CC="10" Class="FreeMind" Component="freemind.main" LOC="86" Name="openDocument" PC="1"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="18" Name="execWindows" PC="1"/>
                <MethodMetric CC="3" Class="FreeMind" Component="freemind.main" LOC="9" Name="transpose" PC="3"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="10" Name="setWaitingCursor" PC="1"/>
                <MethodMetric CC="4" Class="FreeMind" Component="freemind.main" LOC="17" Name="getProgramForFile" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getResources" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getResourceString" PC="2"/>
                <MethodMetric CC="6" Class="FreeMind" Component="freemind.main" LOC="50" Name="getLogger" PC="1"/>
                <MethodMetric CC="3" Class="FreeMind" Component="freemind.main" LOC="53" Name="main" PC="4"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getActualValue" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="increase" PC="2"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="progress" PC="3"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="2" Name="setMaximumValue" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="2" Name="windowLostFocus" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="4" Name="windowGainedFocus" PC="1"/>
                <MethodMetric CC="3" Class="FreeMind" Component="freemind.main" LOC="19" Name="setupSpellChecking" PC="0"/>
                <MethodMetric CC="3" Class="FreeMind" Component="freemind.main" LOC="9" Name="setupProxy" PC="0"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="8" Name="initServer" PC="0"/>
                <MethodMetric CC="4" Class="FreeMind" Component="freemind.main" LOC="33" Name="checkForAnotherInstance" PC="1"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="6" Name="getPortFile" PC="0"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="7" Name="fireStartupDone" PC="0"/>
                <MethodMetric CC="5" Class="FreeMind" Component="freemind.main" LOC="68" Name="setScreenBounds" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="10" Name="createModeController" PC="1"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="9" Name="getMaximumNumberOfMapsToLoad" PC="1"/>
                <MethodMetric CC="13" Class="FreeMind" Component="freemind.main" LOC="66" Name="loadMaps" PC="3"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="5" Name="getLastStateStorageManagement" PC="0"/>
                <MethodMetric CC="4" Class="FreeMind" Component="freemind.main" LOC="15" Name="processLoadEventFromStartupPhase" PC="0"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="16" Name="processLoadEventFromStartupPhase" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getJFrame" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getFreeMindClassLoader" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getFreemindBaseDir" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getAdjustableProperty" PC="1"/>
                <MethodMetric CC="5" Class="FreeMind" Component="freemind.main" LOC="30" Name="insertComponentIntoSplitPane" PC="1"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="10" Name="removeSplitPane" PC="0"/>
                <MethodMetric CC="3" Class="FreeMind" Component="freemind.main" LOC="11" Name="removeContentComponent" PC="0"/>
                <MethodMetric CC="3" Class="FreeMind" Component="freemind.main" LOC="11" Name="setContentComponent" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getScrollPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getContentComponent" PC="0"/>
                <MethodMetric CC="2" Class="FreeMind" Component="freemind.main" LOC="3" Name="registerStartupDoneListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMind" Component="freemind.main" LOC="3" Name="getLoggerList" PC="0"/>
                <MethodMetric CC="1" Class="MyEventQueue" Component="freemind.main" LOC="4" Name="postEvent" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="4" Name="FreeMindApplet" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="isApplet" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getPatternsFile" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="setView" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getFreeMindMenuBar" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getFreemindVersion" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getWinHeight" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getWinWidth" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getWinState" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getWinX" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getWinY" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getResources" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getResourceString" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="8" Name="getIntProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getProperties" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="2" Name="setProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="setDefaultProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getFreemindDirectory" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="11" Name="getMaxNodeWidth" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="2" Name="saveProperties" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="2" Name="setTitle" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="out" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="err" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="openDocument" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="13" Name="start" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="10" Name="setWaitingCursor" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="5" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getLogger" PC="1"/>
                <MethodMetric CC="4" Class="FreeMindApplet" Component="freemind.main" LOC="57" Name="init" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="6" Name="setPropertyByParameter" PC="1"/>
                <MethodMetric CC="8" Class="FreeMindApplet" Component="freemind.main" LOC="35" Name="updateLookAndFeel" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getSouthPanel" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getJFrame" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getFreeMindClassLoader" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getFreemindBaseDir" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getAdjustableProperty" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="10" Name="insertComponentIntoSplitPane" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="7" Name="removeSplitPane" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindApplet" Component="freemind.main" LOC="6" Name="getContentComponent" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getScrollPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="2" Name="registerStartupDoneListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindApplet" Component="freemind.main" LOC="3" Name="getLoggerList" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindCommon" Component="freemind.main" LOC="5" Name="FreeMindCommon" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindCommon" Component="freemind.main" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindCommon" Component="freemind.main" LOC="3" Name="setDefaultProperty" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindCommon" Component="freemind.main" LOC="6" Name="getResources" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindCommon" Component="freemind.main" LOC="3" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindCommon" Component="freemind.main" LOC="3" Name="getResourceString" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindCommon" Component="freemind.main" LOC="3" Name="clearLanguageResources" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindCommon" Component="freemind.main" LOC="10" Name="getFreeMindClassLoader" PC="0"/>
                <MethodMetric CC="5" Class="FreeMindCommon" Component="freemind.main" LOC="27" Name="getFreemindBaseDirOld" PC="0"/>
                <MethodMetric CC="7" Class="FreeMindCommon" Component="freemind.main" LOC="31" Name="getFreemindBaseDir" PC="0"/>
                <MethodMetric CC="3" Class="FreeMindCommon" Component="freemind.main" LOC="12" Name="getAdjustableProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindCommon" Component="freemind.main" LOC="2" Name="loadUIProperties" PC="1"/>
                <MethodMetric CC="5" Class="FreeMindResourceBundle" Component="freemind.main" LOC="23" Name="FreeMindResourceBundle" PC="0"/>
                <MethodMetric CC="3" Class="FreeMindResourceBundle" Component="freemind.main" LOC="13" Name="getLanguageResources" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindResourceBundle" Component="freemind.main" LOC="14" Name="handleGetObject" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindResourceBundle" Component="freemind.main" LOC="3" Name="getKeys" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindResourceBundle" Component="freemind.main" LOC="8" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindResourceBundle" Component="freemind.main" LOC="13" Name="getResourceString" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getJFrame" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="isApplet" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="setView" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="setWaitingCursor" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getPatternsFile" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getFreeMindMenuBar" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getResources" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getResourceString" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getContentPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="out" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="err" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="openDocument" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="repaint" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getIntProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getProperties" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="setProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="saveProperties" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getFreemindDirectory" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getLayeredPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="setTitle" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getWinHeight" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getWinWidth" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getWinState" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getWinX" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getWinY" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getFreemindVersion" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getLogger" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="insertComponentIntoSplitPane" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="removeSplitPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getFreeMindClassLoader" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getFreemindBaseDir" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getAdjustableProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="setDefaultProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getContentComponent" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getScrollPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="registerStartupDoneListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMain" Component="freemind.main" LOC="0" Name="getLoggerList" PC="0"/>
                <MethodMetric CC="1" Class="StartupDoneListener" Component="freemind.main" LOC="0" Name="startupDone" PC="0"/>
                <MethodMetric CC="1" Class="VersionInformation" Component="freemind.main" LOC="8" Name="VersionInformation" PC="5"/>
                <MethodMetric CC="5" Class="VersionInformation" Component="freemind.main" LOC="27" Name="VersionInformation" PC="1"/>
                <MethodMetric CC="6" Class="VersionInformation" Component="freemind.main" LOC="0" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindSecurityManager" Component="freemind.main" LOC="2" Name="FreeMindSecurityManager" PC="0"/>
                <MethodMetric CC="3" Class="FreeMindSecurityManager" Component="freemind.main" LOC="10" Name="setFinalSecurityManager" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkAccept" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkAccess" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkAccess" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkAwtEventQueueAccess" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkConnect" PC="3"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkConnect" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkCreateClassLoader" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkDelete" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkExec" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkExit" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkLink" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkListen" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkMemberAccess" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkMulticast" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkMulticast" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkPackageAccess" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkPackageDefinition" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkPermission" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkPermission" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkPrintJobAccess" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkPropertiesAccess" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkPropertyAccess" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkRead" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkRead" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkRead" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkSecurityAccess" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkSetFactory" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkSystemClipboardAccess" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkTopLevelWindow" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkWrite" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="checkWrite" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindSecurityManager" Component="freemind.main" LOC="4" Name="getSecurityContext" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindSplashModern" Component="freemind.main" LOC="3" Name="getFeedBack" PC="0"/>
                <MethodMetric CC="4" Class="FreeMindSplashModern" Component="freemind.main" LOC="62" Name="FreeMindSplashModern" PC="1"/>
                <MethodMetric CC="3" Class="FreeMindSplashModern" Component="freemind.main" LOC="29" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindSplashModern" Component="freemind.main" LOC="4" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindSplashModern" Component="freemind.main" LOC="3" Name="getWindowIcon" PC="0"/>
                <MethodMetric CC="2" Class="FeedBackImpl" Component="freemind.main" LOC="25" Name="progress" PC="3"/>
                <MethodMetric CC="2" Class="FeedBackImpl" Component="freemind.main" LOC="10" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="FeedBackImpl" Component="freemind.main" LOC="3" Name="getActualValue" PC="0"/>
                <MethodMetric CC="1" Class="FeedBackImpl" Component="freemind.main" LOC="4" Name="setMaximumValue" PC="1"/>
                <MethodMetric CC="1" Class="FeedBackImpl" Component="freemind.main" LOC="3" Name="increase" PC="2"/>
                <MethodMetric CC="1" Class="FeedBackImpl" Component="freemind.main" LOC="3" Name="setImageJLabel" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindStarter" Component="freemind.main" LOC="32" Name="main" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindStarter" Component="freemind.main" LOC="9" Name="checkJavaVersion" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindStarter" Component="freemind.main" LOC="12" Name="createUserDirectory" PC="1"/>
                <MethodMetric CC="4" Class="FreeMindStarter" Component="freemind.main" LOC="0" Name="setDefaultLocale" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindStarter" Component="freemind.main" LOC="16" Name="readUsersPreferences" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindStarter" Component="freemind.main" LOC="10" Name="getUserPreferencesFile" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindStarter" Component="freemind.main" LOC="3" Name="getFreeMindDirectory" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindStarter" Component="freemind.main" LOC="15" Name="readDefaultPreferences" PC="0"/>
                <MethodMetric CC="1" Class="ProxyAuthenticator" Component="freemind.main" LOC="4" Name="ProxyAuthenticator" PC="2"/>
                <MethodMetric CC="1" Class="ProxyAuthenticator" Component="freemind.main" LOC="3" Name="getPasswordAuthentication" PC="0"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="4" Name="HtmlTools" PC="0"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="getInstance" PC="0"/>
                <MethodMetric CC="3" Class="HtmlTools" Component="freemind.main" LOC="25" Name="toXhtml" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="toHtml" PC="1"/>
                <MethodMetric CC="7" Class="HtmlTools" Component="freemind.main" LOC="53" Name="getReplaceResult" PC="3"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="append" PC="4"/>
                <MethodMetric CC="3" Class="HtmlTools" Component="freemind.main" LOC="9" Name="getMinimalOriginalPosition" PC="2"/>
                <MethodMetric CC="4" Class="HtmlTools" Component="freemind.main" LOC="14" Name="getMaximalOriginalPosition" PC="2"/>
                <MethodMetric CC="4" Class="HtmlTools" Component="freemind.main" LOC="12" Name="isHtmlNode" PC="1"/>
                <MethodMetric CC="5" Class="HtmlTools" Component="freemind.main" LOC="23" Name="unicodeToHTMLUnicodeEntity" PC="2"/>
                <MethodMetric CC="11" Class="HtmlTools" Component="freemind.main" LOC="48" Name="unescapeHTMLUnicodeEntity" PC="1"/>
                <MethodMetric CC="2" Class="HtmlTools" Component="freemind.main" LOC="8" Name="removeHtmlTagsFromString" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="removeAllTagsFromString" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="htmlToPlain" PC="1"/>
                <MethodMetric CC="2" Class="HtmlTools" Component="freemind.main" LOC="9" Name="htmlToPlain" PC="2"/>
                <MethodMetric CC="8" Class="HtmlTools" Component="freemind.main" LOC="0" Name="plainToHTML" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="toXMLUnescapedText" PC="1"/>
                <MethodMetric CC="7" Class="HtmlTools" Component="freemind.main" LOC="0" Name="toXMLEscapedTextExpandingWhitespace" PC="1"/>
                <MethodMetric CC="2" Class="HtmlTools" Component="freemind.main" LOC="6" Name="toXMLEscapedText" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="15" Name="isWellformedXml" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="makeValidXml" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="7" Name="replaceIllegalXmlCharacters" PC="1"/>
                <MethodMetric CC="1" Class="HtmlTools" Component="freemind.main" LOC="3" Name="isXMLValidCharacter" PC="1"/>
                <MethodMetric CC="10" Class="HtmlTools" Component="freemind.main" LOC="48" Name="removeInvalidXmlCharacters" PC="1"/>
                <MethodMetric CC="5" Class="HtmlTools" Component="freemind.main" LOC="21" Name="extractHtmlBody" PC="1"/>
                <MethodMetric CC="4" Class="HtmlTools" Component="freemind.main" LOC="22" Name="replaceSpacesToNonbreakableSpaces" PC="1"/>
                <MethodMetric CC="1" Class="IndexPair" Component="freemind.main" LOC="8" Name="IndexPair" PC="5"/>
                <MethodMetric CC="1" Class="IndexPair" Component="freemind.main" LOC="16" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="IFreeMindSplash" Component="freemind.main" LOC="0" Name="getFeedBack" PC="0"/>
                <MethodMetric CC="1" Class="IFreeMindSplash" Component="freemind.main" LOC="0" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="IFreeMindSplash" Component="freemind.main" LOC="0" Name="setVisible" PC="1"/>
                <MethodMetric CC="1" Class="IFreeMindSplash" Component="freemind.main" LOC="0" Name="getWindowIcon" PC="0"/>
                <MethodMetric CC="1" Class="LogFileLogHandler" Component="freemind.main" LOC="3" Name="LogFileLogHandler" PC="1"/>
                <MethodMetric CC="1" Class="LogFileLogHandler" Component="freemind.main" LOC="2" Name="LogFileLogHandler" PC="0"/>
                <MethodMetric CC="3" Class="LogFileLogHandler" Component="freemind.main" LOC="8" Name="publish" PC="1"/>
                <MethodMetric CC="1" Class="LogFileLogHandler" Component="freemind.main" LOC="2" Name="flush" PC="0"/>
                <MethodMetric CC="1" Class="LogFileLogHandler" Component="freemind.main" LOC="2" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="LogFileLogHandler" Component="freemind.main" LOC="3" Name="getLogReceiver" PC="0"/>
                <MethodMetric CC="1" Class="LogFileLogHandler" Component="freemind.main" LOC="3" Name="setLogReceiver" PC="1"/>
                <MethodMetric CC="1" Class="LogReceiver" Component="freemind.main" LOC="0" Name="receiveLog" PC="1"/>
                <MethodMetric CC="1" Class="LoggingOutputStream" Component="freemind.main" LOC="6" Name="LoggingOutputStream" PC="2"/>
                <MethodMetric CC="2" Class="LoggingOutputStream" Component="freemind.main" LOC="12" Name="flush" PC="0"/>
                <MethodMetric CC="2" Class="Resources" Component="freemind.main" LOC="6" Name="Resources" PC="1"/>
                <MethodMetric CC="2" Class="Resources" Component="freemind.main" LOC="5" Name="createInstance" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getResourceString" PC="2"/>
                <MethodMetric CC="2" Class="Resources" Component="freemind.main" LOC="7" Name="getInstance" PC="0"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getFreemindDirectory" PC="0"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getFreemindVersion" PC="0"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getIntProperty" PC="2"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="8" Name="getLongProperty" PC="2"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="4" Name="getBoolProperty" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getProperties" PC="0"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getResources" PC="0"/>
                <MethodMetric CC="3" Class="Resources" Component="freemind.main" LOC="10" Name="getCountryMap" PC="0"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getLogger" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="logException" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="logException" PC="2"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="5" Name="format" PC="2"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="4" Name="createTranslatedString" PC="1"/>
                <MethodMetric CC="1" Class="Resources" Component="freemind.main" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="2" Class="StdFormatter" Component="freemind.main" LOC="12" Name="format" PC="1"/>
                <MethodMetric CC="1" Class="StdOutErrLevel" Component="freemind.main" LOC="3" Name="StdOutErrLevel" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="executableByExtension" PC="1"/>
                <MethodMetric CC="5" Class="Tools" Component="freemind.main" LOC="10" Name="colorToXml" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="13" Name="xmlToColor" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="7" Name="PointToXml" PC="1"/>
                <MethodMetric CC="4" Class="Tools" Component="freemind.main" LOC="12" Name="xmlToPoint" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="BooleanToXml" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="5" Name="xmlToBoolean" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="8" Name="stringToList" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="8" Name="listToString" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="6" Name="expandFileName" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="11" Name="getAvailableFontFamilyNames" PC="0"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="7" Name="getAvailableFonts" PC="0"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="8" Name="getAvailableFontFamilyNamesAsVector" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isAvailableFontFamily" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="getExtension" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="4" Name="getExtension" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="4" Name="removeExtension" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="13" Name="isAbsolutePath" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="9" Name="urlGetFile" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isWindows" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isFile" PC="1"/>
                <MethodMetric CC="4" Class="Tools" Component="freemind.main" LOC="13" Name="getPrefix" PC="1"/>
                <MethodMetric CC="6" Class="Tools" Component="freemind.main" LOC="32" Name="toRelativeURL" PC="2"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="16" Name="fileToRelativeUrlString" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isPreferenceTrue" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="safeEquals" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="safeEquals" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="safeEqualsIgnoreCase" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="safeEquals" PC="2"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="6" Name="firstLetterCapitalized" PC="1"/>
                <MethodMetric CC="4" Class="Tools" Component="freemind.main" LOC="19" Name="setHidden" PC="3"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="8" Name="expandPlaceholders" PC="2"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="10" Name="expandPlaceholders" PC="3"/>
                <MethodMetric CC="4" Class="Tools" Component="freemind.main" LOC="13" Name="expandPlaceholders" PC="4"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="toBase64" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="toBase64" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="fromBase64" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="20" Name="compress" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="24" Name="decompress" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="8" Name="byteArrayToUTF8String" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="8" Name="uTF8StringToByteArray" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="8" Name="xmlToDate" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="dateToString" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="safeEquals" PC="2"/>
                <MethodMetric CC="13" Class="Tools" Component="freemind.main" LOC="80" Name="setDialogLocationRelativeTo" PC="2"/>
                <MethodMetric CC="7" Class="Tools" Component="freemind.main" LOC="79" Name="getUpdateReader" PC="3"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="replaceUtf8AndIllegalXmlChars" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="getActualReader" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="9" Name="getFile" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="getReaderFromFile" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="26" Name="getFile" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="16" Name="logTransferable" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="9" Name="addEscapeActionToDialog" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="addEscapeActionToDialog" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="5" Name="addKeyActionToDialog" PC="4"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="6" Name="removeTranslateComment" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="getURLWithoutReference" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="11" Name="copyStream" PC="3"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="11" Name="convertPointToAncestor" PC="3"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="11" Name="convertPointFromAncestor" PC="3"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="4" Name="convertPointToAncestor" PC="3"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="setLabelAndMnemonic" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="setLabelAndMnemonic" PC="2"/>
                <MethodMetric CC="6" Class="Tools" Component="freemind.main" LOC="16" Name="setLabelAndMnemonic" PC="2"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="8" Name="isMacOsX" PC="0"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="8" Name="isLinux" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="removeMnemonic" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="8" Name="getKeyStroke" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="4" Name="fileToUrl" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isBelowJava6" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isAboveJava4" PC="0"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="6" Name="urlToFile" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="5" Name="restoreAntialiasing" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="5" Name="getFileNameProposal" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="17" Name="waitForEventQueue" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="2" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="printStackTrace" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="6" Name="getStackTrace" PC="0"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="10" Name="updateFontSize" PC="3"/>
                <MethodMetric CC="6" Class="Tools" Component="freemind.main" LOC="18" Name="compareText" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="10" Name="getHostName" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="4" Name="getUserName" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="marshall" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="unMarshall" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="12" Name="getFileNameFromRestorable" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="11" Name="getModeFromRestorable" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="5" Name="getVectorWithSingleElement" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="6" Name="swapVectorPositions" PC="3"/>
                <MethodMetric CC="4" Class="Tools" Component="freemind.main" LOC="12" Name="getField" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isUnix" PC="0"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="15" Name="setPermissions" PC="2"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="14" Name="arrayToUrls" PC="1"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="14" Name="urlStringToUrls" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="isHeadless" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="getNodeTextHierarchy" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="getClipboard" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="9" Name="addFocusPrintTimer" PC="0"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="11" Name="invokeActionsToKeyboardLayoutDependantCharacters" PC="3"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="12" Name="countOccurrences" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="7" Name="correctJSplitPaneKeyMap" PC="0"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="14" Name="setPageFormatFromString" PC="2"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="10" Name="nt" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="getPageFormatAsString" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="9" Name="getHostIpAsString" PC="0"/>
                <MethodMetric CC="4" Class="Tools" Component="freemind.main" LOC="17" Name="printXmlAction" PC="1"/>
                <MethodMetric CC="1" Class="Tools" Component="freemind.main" LOC="3" Name="deepCopy" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="15" Name="generateID" PC="3"/>
                <MethodMetric CC="2" Class="Tools" Component="freemind.main" LOC="8" Name="invokeAndWait" PC="1"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="15" Name="getFreeMindBasePath" PC="0"/>
                <MethodMetric CC="3" Class="Tools" Component="freemind.main" LOC="10" Name="copyChangedProperties" PC="2"/>
                <MethodMetric CC="1" Class="IntHolder" Component="freemind.main" LOC="2" Name="IntHolder" PC="0"/>
                <MethodMetric CC="1" Class="IntHolder" Component="freemind.main" LOC="3" Name="IntHolder" PC="1"/>
                <MethodMetric CC="1" Class="IntHolder" Component="freemind.main" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="IntHolder" Component="freemind.main" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="IntHolder" Component="freemind.main" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="BooleanHolder" Component="freemind.main" LOC="2" Name="BooleanHolder" PC="0"/>
                <MethodMetric CC="1" Class="BooleanHolder" Component="freemind.main" LOC="3" Name="BooleanHolder" PC="1"/>
                <MethodMetric CC="1" Class="BooleanHolder" Component="freemind.main" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="BooleanHolder" Component="freemind.main" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="ObjectHolder" Component="freemind.main" LOC="2" Name="ObjectHolder" PC="0"/>
                <MethodMetric CC="1" Class="ObjectHolder" Component="freemind.main" LOC="3" Name="setObject" PC="1"/>
                <MethodMetric CC="1" Class="ObjectHolder" Component="freemind.main" LOC="3" Name="getObject" PC="0"/>
                <MethodMetric CC="1" Class="Pair" Component="freemind.main" LOC="4" Name="Pair" PC="2"/>
                <MethodMetric CC="1" Class="Pair" Component="freemind.main" LOC="3" Name="getFirst" PC="0"/>
                <MethodMetric CC="1" Class="Pair" Component="freemind.main" LOC="3" Name="getSecond" PC="0"/>
                <MethodMetric CC="1" Class="DesEncrypter" Component="freemind.main" LOC="5" Name="DesEncrypter" PC="2"/>
                <MethodMetric CC="3" Class="DesEncrypter" Component="freemind.main" LOC="26" Name="init" PC="1"/>
                <MethodMetric CC="2" Class="DesEncrypter" Component="freemind.main" LOC="19" Name="encrypt" PC="1"/>
                <MethodMetric CC="3" Class="DesEncrypter" Component="freemind.main" LOC="26" Name="decrypt" PC="1"/>
                <MethodMetric CC="1" Class="SingleDesEncrypter" Component="freemind.main" LOC="3" Name="SingleDesEncrypter" PC="1"/>
                <MethodMetric CC="1" Class="TripleDesEncrypter" Component="freemind.main" LOC="3" Name="TripleDesEncrypter" PC="1"/>
                <MethodMetric CC="1" Class="TransformerRunnable" Component="freemind.main" LOC="14" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="TransformerRunnable" Component="freemind.main" LOC="3" Name="isSuccessful" PC="0"/>
                <MethodMetric CC="1" Class="TransformerRunnable" Component="freemind.main" LOC="3" Name="getErrorMessage" PC="0"/>
                <MethodMetric CC="1" Class="EscapeAction" Component="freemind.main" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NameMnemonicHolder" Component="freemind.main" LOC="0" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="NameMnemonicHolder" Component="freemind.main" LOC="0" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="NameMnemonicHolder" Component="freemind.main" LOC="0" Name="setMnemonic" PC="1"/>
                <MethodMetric CC="1" Class="NameMnemonicHolder" Component="freemind.main" LOC="0" Name="setDisplayedMnemonicIndex" PC="1"/>
                <MethodMetric CC="1" Class="ButtonHolder" Component="freemind.main" LOC="4" Name="ButtonHolder" PC="1"/>
                <MethodMetric CC="1" Class="ButtonHolder" Component="freemind.main" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="ButtonHolder" Component="freemind.main" LOC="3" Name="setDisplayedMnemonicIndex" PC="1"/>
                <MethodMetric CC="1" Class="ButtonHolder" Component="freemind.main" LOC="3" Name="setMnemonic" PC="1"/>
                <MethodMetric CC="1" Class="ButtonHolder" Component="freemind.main" LOC="3" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="ActionHolder" Component="freemind.main" LOC="4" Name="ActionHolder" PC="1"/>
                <MethodMetric CC="1" Class="ActionHolder" Component="freemind.main" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="ActionHolder" Component="freemind.main" LOC="2" Name="setDisplayedMnemonicIndex" PC="1"/>
                <MethodMetric CC="2" Class="ActionHolder" Component="freemind.main" LOC="5" Name="setMnemonic" PC="1"/>
                <MethodMetric CC="1" Class="ActionHolder" Component="freemind.main" LOC="3" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodePair" Component="freemind.main" LOC="4" Name="MindMapNodePair" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNodePair" Component="freemind.main" LOC="3" Name="getCorresponding" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNodePair" Component="freemind.main" LOC="3" Name="getCloneNode" PC="0"/>
                <MethodMetric CC="1" Class="XHTMLWriter" Component="freemind.main" LOC="3" Name="XHTMLWriter" PC="2"/>
                <MethodMetric CC="1" Class="XHTMLWriter" Component="freemind.main" LOC="4" Name="XHTMLWriter" PC="4"/>
                <MethodMetric CC="1" Class="XHTMLWriter" Component="freemind.main" LOC="3" Name="write" PC="0"/>
                <MethodMetric CC="1" Class="XHTMLWriter" Component="freemind.main" LOC="7" Name="writeOption" PC="1"/>
                <MethodMetric CC="2" Class="XHTMLWriter" Component="freemind.main" LOC="3" Name="writeLineSeparator" PC="0"/>
                <MethodMetric CC="1" Class="XHTMLWriter" Component="freemind.main" LOC="7" Name="html2xhtml" PC="2"/>
                <MethodMetric CC="1" Class="XHTMLWriter" Component="freemind.main" LOC="12" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="XHTMLFilterWriter" Component="freemind.main" LOC="3" Name="XHTMLFilterWriter" PC="1"/>
                <MethodMetric CC="13" Class="XHTMLFilterWriter" Component="freemind.main" LOC="45" Name="write" PC="1"/>
                <MethodMetric CC="2" Class="XHTMLFilterWriter" Component="freemind.main" LOC="5" Name="write" PC="3"/>
                <MethodMetric CC="1" Class="XHTMLFilterWriter" Component="freemind.main" LOC="3" Name="write" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="XMLElement" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="XMLElement" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="XMLElement" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="XMLElement" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="XMLElement" PC="3"/>
                <MethodMetric CC="4" Class="XMLElement" Component="freemind.main" LOC="26" Name="XMLElement" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getUserObject" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="addChild" PC="1"/>
                <MethodMetric CC="2" Class="XMLElement" Component="freemind.main" LOC="6" Name="setAttribute" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="addProperty" PC="2"/>
                <MethodMetric CC="2" Class="XMLElement" Component="freemind.main" LOC="6" Name="setIntAttribute" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="addProperty" PC="2"/>
                <MethodMetric CC="2" Class="XMLElement" Component="freemind.main" LOC="6" Name="setDoubleAttribute" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="addProperty" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="countChildren" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="enumerateAttributeNames" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="enumeratePropertyNames" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="enumerateChildren" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="8" Name="getChildren" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getContents" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getContent" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getLineNr" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getAttribute" PC="1"/>
                <MethodMetric CC="3" Class="XMLElement" Component="freemind.main" LOC="10" Name="getAttribute" PC="2"/>
                <MethodMetric CC="5" Class="XMLElement" Component="freemind.main" LOC="20" Name="getAttribute" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getStringAttribute" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getStringAttribute" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getStringAttribute" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getIntAttribute" PC="1"/>
                <MethodMetric CC="3" Class="XMLElement" Component="freemind.main" LOC="17" Name="getIntAttribute" PC="2"/>
                <MethodMetric CC="5" Class="XMLElement" Component="freemind.main" LOC="28" Name="getIntAttribute" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getDoubleAttribute" PC="1"/>
                <MethodMetric CC="3" Class="XMLElement" Component="freemind.main" LOC="17" Name="getDoubleAttribute" PC="2"/>
                <MethodMetric CC="5" Class="XMLElement" Component="freemind.main" LOC="28" Name="getDoubleAttribute" PC="4"/>
                <MethodMetric CC="5" Class="XMLElement" Component="freemind.main" LOC="18" Name="getBooleanAttribute" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getIntProperty" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getProperty" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getProperty" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getProperty" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getProperty" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getProperty" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getStringProperty" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getSpecialIntProperty" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getSpecialDoubleProperty" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="getTagName" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="parseFromReader" PC="1"/>
                <MethodMetric CC="4" Class="XMLElement" Component="freemind.main" LOC="20" Name="parseFromReader" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="7" Name="parseString" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="parseString" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="parseString" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="8" Name="parseString" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="parseCharArray" PC="3"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="8" Name="parseCharArray" PC="4"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="removeChild" PC="1"/>
                <MethodMetric CC="2" Class="XMLElement" Component="freemind.main" LOC="6" Name="removeAttribute" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="removeProperty" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="removeChild" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="createAnotherElement" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="2" Name="completeElement" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="setContent" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="setEncodedContent" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="setTagName" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="12" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="write" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="writeWithoutClosingTag" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="7" Name="writeClosingTag" PC="1"/>
                <MethodMetric CC="12" Class="XMLElement" Component="freemind.main" LOC="65" Name="write" PC="2"/>
                <MethodMetric CC="8" Class="XMLElement" Component="freemind.main" LOC="0" Name="writeEncoded" PC="2"/>
                <MethodMetric CC="3" Class="XMLElement" Component="freemind.main" LOC="10" Name="scanIdentifier" PC="1"/>
                <MethodMetric CC="6" Class="XMLElement" Component="freemind.main" LOC="0" Name="scanWhitespace" PC="0"/>
                <MethodMetric CC="6" Class="XMLElement" Component="freemind.main" LOC="0" Name="scanWhitespace" PC="1"/>
                <MethodMetric CC="5" Class="XMLElement" Component="freemind.main" LOC="18" Name="scanString" PC="1"/>
                <MethodMetric CC="5" Class="XMLElement" Component="freemind.main" LOC="21" Name="scanPCData" PC="1"/>
                <MethodMetric CC="10" Class="XMLElement" Component="freemind.main" LOC="0" Name="checkCDATA" PC="1"/>
                <MethodMetric CC="4" Class="XMLElement" Component="freemind.main" LOC="15" Name="skipComment" PC="0"/>
                <MethodMetric CC="16" Class="XMLElement" Component="freemind.main" LOC="50" Name="skipSpecialTag" PC="1"/>
                <MethodMetric CC="3" Class="XMLElement" Component="freemind.main" LOC="9" Name="checkLiteral" PC="1"/>
                <MethodMetric CC="4" Class="XMLElement" Component="freemind.main" LOC="20" Name="readChar" PC="0"/>
                <MethodMetric CC="27" Class="XMLElement" Component="freemind.main" LOC="135" Name="scanElement" PC="1"/>
                <MethodMetric CC="6" Class="XMLElement" Component="freemind.main" LOC="33" Name="resolveEntity" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="3" Name="unreadChar" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="invalidValueSet" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="invalidValue" PC="2"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="unexpectedEndOfData" PC="0"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="syntaxError" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="expectedInput" PC="1"/>
                <MethodMetric CC="1" Class="XMLElement" Component="freemind.main" LOC="4" Name="unknownEntity" PC="1"/>
                <MethodMetric CC="1" Class="XMLParseException" Component="freemind.main" LOC="4" Name="XMLParseException" PC="2"/>
                <MethodMetric CC="1" Class="XMLParseException" Component="freemind.main" LOC="4" Name="XMLParseException" PC="3"/>
                <MethodMetric CC="1" Class="XMLParseException" Component="freemind.main" LOC="3" Name="getLineNr" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="5" Name="ArrowLinkAdapter" PC="3"/>
                <MethodMetric CC="2" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="4" Name="getStartInclination" PC="0"/>
                <MethodMetric CC="2" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="4" Name="getEndInclination" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="3" Name="getStartArrow" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="3" Name="getEndArrow" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="3" Name="setStartInclination" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="3" Name="setEndInclination" PC="1"/>
                <MethodMetric CC="3" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="11" Name="setStartArrow" PC="1"/>
                <MethodMetric CC="3" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="11" Name="setEndArrow" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="8" Name="clone" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="3" Name="showControlPoints" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="3" Name="getShowControlPointsFlag" PC="0"/>
                <MethodMetric CC="10" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="28" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="6" Name="createArrowLinkTarget" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkAdapter" Component="freemind.modes" LOC="14" Name="copy" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkTarget" Component="freemind.modes" LOC="3" Name="ArrowLinkTarget" PC="3"/>
                <MethodMetric CC="1" Class="ArrowLinkTarget" Component="freemind.modes" LOC="3" Name="getSourceLabel" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkTarget" Component="freemind.modes" LOC="3" Name="setSourceLabel" PC="1"/>
                <MethodMetric CC="2" Class="ArrowLinkTarget" Component="freemind.modes" LOC="8" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkTarget" Component="freemind.modes" LOC="2" Name="changeInclination" PC="5"/>
                <MethodMetric CC="1" Class="ArrowLinkTarget" Component="freemind.modes" LOC="5" Name="createArrowLinkAdapter" PC="1"/>
                <MethodMetric CC="2" Class="CloudAdapter" Component="freemind.modes" LOC="9" Name="CloudAdapter" PC="2"/>
                <MethodMetric CC="4" Class="CloudAdapter" Component="freemind.modes" LOC="12" Name="calcIterativeLevel" PC="1"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="setTarget" PC="1"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="getExteriorColor" PC="0"/>
                <MethodMetric CC="2" Class="CloudAdapter" Component="freemind.modes" LOC="6" Name="getIterativeLevel" PC="0"/>
                <MethodMetric CC="2" Class="CloudAdapter" Component="freemind.modes" LOC="5" Name="changeIterativeLevel" PC="1"/>
                <MethodMetric CC="4" Class="CloudAdapter" Component="freemind.modes" LOC="14" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="getStandardColor" PC="0"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="setStandardColor" PC="1"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="getStandardStyle" PC="0"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="setStandardStyle" PC="1"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="getStandardColorPropertyString" PC="0"/>
                <MethodMetric CC="1" Class="CloudAdapter" Component="freemind.modes" LOC="3" Name="getStandardStylePropertyString" PC="0"/>
                <MethodMetric CC="3" Class="CloudAdapterListener" Component="freemind.modes" LOC="8" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="ControllerAdapter" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="setModel" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="0" Name="newNode" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="0" Name="createXMLElement" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="newModel" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getFileFilter" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="10" Name="nodeRefresh" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="refreshMap" PC="0"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="8" Name="refreshMapFrom" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="nodeStructureChanged" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="updateNode" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="16" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="16" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="12" Name="changeSelection" PC="2"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="20" Name="registerNodeSelectionListener" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="deregisterNodeSelectionListener" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="registerNodeLifetimeListener" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="deregisterNodeLifetimeListener" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getNodeLifetimeListeners" PC="0"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="fireNodePreDeleteEvent" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="fireNodePostDeleteEvent" PC="2"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="10" Name="fireRecursiveNodeCreateEvent" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="7" Name="firePreSaveEvent" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="7" Name="newMap" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="newMap" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="16" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="13" Name="load" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="28" Name="restoreMapsLastState" PC="2"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="9" Name="save" PC="0"/>
                <MethodMetric CC="7" Class="ControllerAdapter" Component="freemind.modes" LOC="67" Name="loadURL" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="8" Name="createNodeTreeFromXml" PC="2"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="12" Name="invokeHooksRecursively" PC="2"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="10" Name="processUnfinishedLinksInHooks" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="11" Name="getSelecteds" PC="0"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="9" Name="select" PC="1"/>
                <MethodMetric CC="5" Class="ControllerAdapter" Component="freemind.modes" LOC="19" Name="select" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="selectBranch" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="5" Name="getSelectedsByDepth" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="sortNodesByDepth" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="5" Name="add" PC="3"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="9" Name="add" PC="4"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="7" Name="addCheckBox" PC="4"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="8" Name="addRadioItem" PC="5"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="add" PC="2"/>
                <MethodMetric CC="4" Class="ControllerAdapter" Component="freemind.modes" LOC="25" Name="open" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="setChosenDirectory" PC="1"/>
                <MethodMetric CC="5" Class="ControllerAdapter" Component="freemind.modes" LOC="21" Name="getFileChooser" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getFileChooser" PC="0"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="getMapsParentFile" PC="0"/>
                <MethodMetric CC="4" Class="ControllerAdapter" Component="freemind.modes" LOC="16" Name="handleLoadingException" PC="1"/>
                <MethodMetric CC="8" Class="ControllerAdapter" Component="freemind.modes" LOC="43" Name="saveAs" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getFileNameProposal" PC="0"/>
                <MethodMetric CC="9" Class="ControllerAdapter" Component="freemind.modes" LOC="46" Name="close" PC="2"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="12" Name="setVisible" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="5" Name="setAllActions" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="10" Name="showPopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getPopupForModel" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getLeftToolBar" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getModeToolBar" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="isBlocked" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="setBlocked" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getMode" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="setMode" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getRootNode" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="setView" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="updateMapModuleName" PC="0"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="7" Name="getNodeFromID" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getNodeID" PC="1"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="5" Name="getSelected" PC="0"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="getSelectedView" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="copy" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="copy" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="copySingle" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="15" Name="copy" PC="2"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="15" Name="createForNodesFlavor" PC="2"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="9" Name="createForNodeIdsFlavor" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getSelectionColor" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="2" Name="updatePopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="shutdownController" PC="0"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="8" Name="startupController" PC="0"/>
                <MethodMetric CC="4" Class="ControllerAdapter" Component="freemind.modes" LOC="10" Name="_setFolded" PC="2"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="14" Name="getLinkShortText" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="displayNode" PC="1"/>
                <MethodMetric CC="4" Class="ControllerAdapter" Component="freemind.modes" LOC="10" Name="displayNode" PC="2"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="centerNode" PC="1"/>
                <MethodMetric CC="3" Class="ControllerAdapter" Component="freemind.modes" LOC="14" Name="centerNode" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getAttributeController" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getNodeView" PC="1"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="insertNodeInto" PC="3"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="insertNodeInto" PC="2"/>
                <MethodMetric CC="2" Class="ControllerAdapter" Component="freemind.modes" LOC="6" Name="loadURL" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getRegisteredMouseWheelEventHandler" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="3" Name="getMapModule" PC="0"/>
                <MethodMetric CC="1" Class="ControllerAdapter" Component="freemind.modes" LOC="4" Name="setToolTip" PC="3"/>
                <MethodMetric CC="1" Class="nodesDepthComparator" Component="freemind.modes" LOC="2" Name="nodesDepthComparator" PC="0"/>
                <MethodMetric CC="4" Class="nodesDepthComparator" Component="freemind.modes" LOC="11" Name="compare" PC="2"/>
                <MethodMetric CC="1" Class="ControllerPopupMenuListener" Component="freemind.modes" LOC="3" Name="popupMenuWillBecomeVisible" PC="1"/>
                <MethodMetric CC="1" Class="ControllerPopupMenuListener" Component="freemind.modes" LOC="3" Name="popupMenuWillBecomeInvisible" PC="1"/>
                <MethodMetric CC="1" Class="ControllerPopupMenuListener" Component="freemind.modes" LOC="3" Name="popupMenuCanceled" PC="1"/>
                <MethodMetric CC="1" Class="OpenAction" Component="freemind.modes" LOC="4" Name="OpenAction" PC="1"/>
                <MethodMetric CC="1" Class="OpenAction" Component="freemind.modes" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SaveAction" Component="freemind.modes" LOC="4" Name="SaveAction" PC="1"/>
                <MethodMetric CC="2" Class="SaveAction" Component="freemind.modes" LOC="12" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SaveAsAction" Component="freemind.modes" LOC="4" Name="SaveAsAction" PC="1"/>
                <MethodMetric CC="1" Class="SaveAsAction" Component="freemind.modes" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EditAttributesAction" Component="freemind.modes" LOC="3" Name="EditAttributesAction" PC="0"/>
                <MethodMetric CC="2" Class="EditAttributesAction" Component="freemind.modes" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="FileOpener" Component="freemind.modes" LOC="9" Name="isDragAcceptable" PC="1"/>
                <MethodMetric CC="3" Class="FileOpener" Component="freemind.modes" LOC="9" Name="isDropAcceptable" PC="1"/>
                <MethodMetric CC="4" Class="FileOpener" Component="freemind.modes" LOC="25" Name="drop" PC="1"/>
                <MethodMetric CC="2" Class="FileOpener" Component="freemind.modes" LOC="6" Name="dragEnter" PC="1"/>
                <MethodMetric CC="1" Class="FileOpener" Component="freemind.modes" LOC="2" Name="dragOver" PC="1"/>
                <MethodMetric CC="1" Class="FileOpener" Component="freemind.modes" LOC="2" Name="dragExit" PC="1"/>
                <MethodMetric CC="1" Class="FileOpener" Component="freemind.modes" LOC="2" Name="dragScroll" PC="1"/>
                <MethodMetric CC="1" Class="FileOpener" Component="freemind.modes" LOC="2" Name="dropActionChanged" PC="1"/>
                <MethodMetric CC="2" Class="EdgeAdapter" Component="freemind.modes" LOC="8" Name="EdgeAdapter" PC="2"/>
                <MethodMetric CC="3" Class="EdgeAdapter" Component="freemind.modes" LOC="9" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="getRealColor" PC="0"/>
                <MethodMetric CC="3" Class="EdgeAdapter" Component="freemind.modes" LOC="9" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="getRealWidth" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="setWidth" PC="1"/>
                <MethodMetric CC="3" Class="EdgeAdapter" Component="freemind.modes" LOC="9" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="hasStyle" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="getSource" PC="0"/>
                <MethodMetric CC="6" Class="EdgeAdapter" Component="freemind.modes" LOC="18" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="getStandardColor" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="setStandardColor" PC="1"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="getStandardStyle" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="setStandardStyle" PC="1"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="getStandardColorPropertyString" PC="0"/>
                <MethodMetric CC="1" Class="EdgeAdapter" Component="freemind.modes" LOC="3" Name="getStandardStylePropertyString" PC="0"/>
                <MethodMetric CC="5" Class="EdgeAdapter" Component="freemind.modes" LOC="18" Name="getStyleAsInt" PC="0"/>
                <MethodMetric CC="3" Class="EdgeAdapterListener" Component="freemind.modes" LOC="8" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="2" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="9" Name="FreeMindAwtFileDialog" PC="0"/>
                <MethodMetric CC="3" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="12" Name="callDirectoryListener" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="getReturnValue" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="6" Name="showOpenDialog" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="6" Name="showSaveDialog" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="setDialogTitle" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="addChoosableFileFilter" PC="1"/>
                <MethodMetric CC="4" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="0" Name="setFileSelectionMode" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="5" Name="setMultiSelectionEnabled" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="isMultiSelectionEnabled" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="getSelectedFiles" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="getSelectedFile" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="7" Name="setCurrentDirectory" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="setSelectedFile" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="registerDirectoryResultListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="15" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindAwtFileDialog" Component="freemind.modes" LOC="3" Name="addChoosableFileFilterAsDefault" PC="1"/>
                <MethodMetric CC="1" Class="NullFilter" Component="freemind.modes" LOC="3" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="NullFilter" Component="freemind.modes" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="DirFilter" Component="freemind.modes" LOC="3" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="DirFilter" Component="freemind.modes" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="FileOnlyFilter" Component="freemind.modes" LOC="3" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="FileOnlyFilter" Component="freemind.modes" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="FileAndDirFilter" Component="freemind.modes" LOC="3" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="FileAndDirFilter" Component="freemind.modes" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindFilenameFilter" Component="freemind.modes" LOC="2" Name="FreeMindFilenameFilter" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindFilenameFilter" Component="freemind.modes" LOC="4" Name="accept" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindFilenameFilter" Component="freemind.modes" LOC="3" Name="getCustomFilter" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindFilenameFilter" Component="freemind.modes" LOC="3" Name="setCustomFilter" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFilenameFilter" Component="freemind.modes" LOC="3" Name="getPrincipalFilter" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindFilenameFilter" Component="freemind.modes" LOC="3" Name="setPrincipalFilter" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="showOpenDialog" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="showSaveDialog" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="setDialogTitle" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="addChoosableFileFilterAsDefault" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="addChoosableFileFilter" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="setFileSelectionMode" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="setMultiSelectionEnabled" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="isMultiSelectionEnabled" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="getSelectedFiles" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="getSelectedFile" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="setCurrentDirectory" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="setSelectedFile" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindFileDialog" Component="freemind.modes" LOC="0" Name="registerDirectoryResultListener" PC="1"/>
                <MethodMetric CC="1" Class="DirectoryResultListener" Component="freemind.modes" LOC="0" Name="setChosenDirectory" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindJFileDialog" Component="freemind.modes" LOC="3" Name="registerDirectoryResultListener" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindJFileDialog" Component="freemind.modes" LOC="10" Name="callDirectoryListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindJFileDialog" Component="freemind.modes" LOC="5" Name="showOpenDialog" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindJFileDialog" Component="freemind.modes" LOC="5" Name="showSaveDialog" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindJFileDialog" Component="freemind.modes" LOC="4" Name="addChoosableFileFilterAsDefault" PC="1"/>
                <MethodMetric CC="1" Class="HistoryInformation" Component="freemind.modes" LOC="5" Name="HistoryInformation" PC="0"/>
                <MethodMetric CC="1" Class="HistoryInformation" Component="freemind.modes" LOC="4" Name="HistoryInformation" PC="2"/>
                <MethodMetric CC="1" Class="HistoryInformation" Component="freemind.modes" LOC="3" Name="getCreatedAt" PC="0"/>
                <MethodMetric CC="1" Class="HistoryInformation" Component="freemind.modes" LOC="3" Name="getLastModifiedAt" PC="0"/>
                <MethodMetric CC="1" Class="HistoryInformation" Component="freemind.modes" LOC="3" Name="setCreatedAt" PC="1"/>
                <MethodMetric CC="1" Class="HistoryInformation" Component="freemind.modes" LOC="3" Name="setLastModifiedAt" PC="1"/>
                <MethodMetric CC="1" Class="IconInformation" Component="freemind.modes" LOC="0" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="IconInformation" Component="freemind.modes" LOC="0" Name="getIcon" PC="0"/>
                <MethodMetric CC="1" Class="IconInformation" Component="freemind.modes" LOC="0" Name="getKeystrokeResourceName" PC="0"/>
                <MethodMetric CC="1" Class="IconInformation" Component="freemind.modes" LOC="0" Name="getKeyStroke" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="6" Name="LineAdapter" PC="2"/>
                <MethodMetric CC="5" Class="LineAdapter" Component="freemind.modes" LOC="19" Name="updateStandards" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="2" Class="LineAdapter" Component="freemind.modes" LOC="6" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="setColor" PC="1"/>
                <MethodMetric CC="2" Class="LineAdapter" Component="freemind.modes" LOC="4" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="getRealWidth" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="setWidth" PC="1"/>
                <MethodMetric CC="2" Class="LineAdapter" Component="freemind.modes" LOC="6" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="setStyle" PC="1"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="setTarget" PC="1"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="3" Name="getTarget" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="10" Name="clone" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="0" Name="setStandardColor" PC="1"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="0" Name="getStandardColor" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="0" Name="setStandardStyle" PC="1"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="0" Name="getStandardStyle" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="0" Name="getStandardStylePropertyString" PC="0"/>
                <MethodMetric CC="1" Class="LineAdapter" Component="freemind.modes" LOC="0" Name="getStandardColorPropertyString" PC="0"/>
                <MethodMetric CC="2" Class="LinkAdapter" Component="freemind.modes" LOC="10" Name="LinkAdapter" PC="3"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getDestinationLabel" PC="0"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getReferenceText" PC="0"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getSource" PC="0"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="setSource" PC="1"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="setDestinationLabel" PC="1"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="setReferenceText" PC="1"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getUniqueId" PC="0"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="setUniqueId" PC="1"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getStandardColor" PC="0"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="setStandardColor" PC="1"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getStandardStyle" PC="0"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="setStandardStyle" PC="1"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getStandardColorPropertyString" PC="0"/>
                <MethodMetric CC="1" Class="LinkAdapter" Component="freemind.modes" LOC="3" Name="getStandardStylePropertyString" PC="0"/>
                <MethodMetric CC="3" Class="LinkAdapterListener" Component="freemind.modes" LOC="8" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="2" Class="MapAdapter" Component="freemind.modes" LOC="13" Name="MapAdapter" PC="2"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="setFileTime" PC="0"/>
                <MethodMetric CC="2" Class="MapAdapter" Component="freemind.modes" LOC="12" Name="getFileTime" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="11" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="tryToLock" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="4" Name="destroy" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="cancelFileChangeObservationTimer" PC="0"/>
                <MethodMetric CC="2" Class="MapAdapter" Component="freemind.modes" LOC="8" Name="removeNodes" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="isSaved" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="isReadOnly" PC="0"/>
                <MethodMetric CC="4" Class="MapAdapter" Component="freemind.modes" LOC="16" Name="setSaved" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getNumberOfChangesSinceLastSave" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getRootNode" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="setRoot" PC="1"/>
                <MethodMetric CC="6" Class="MapAdapter" Component="freemind.modes" LOC="27" Name="changeRoot" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getFile" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getURL" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="setFile" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getAsPlainText" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getAsRTF" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getAsHTML" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getRestorable" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="2" Class="MapAdapter" Component="freemind.modes" LOC="5" Name="nodeChangedInternal" PC="1"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="7" Name="fireTreeNodesInserted" PC="4"/>
                <MethodMetric CC="4" Class="MapAdapter" Component="freemind.modes" LOC="9" Name="fireTreeNodesInserted" PC="6"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="7" Name="fireTreeNodesRemoved" PC="4"/>
                <MethodMetric CC="4" Class="MapAdapter" Component="freemind.modes" LOC="9" Name="fireTreeNodesRemoved" PC="6"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="7" Name="fireTreeStructureChanged" PC="4"/>
                <MethodMetric CC="4" Class="MapAdapter" Component="freemind.modes" LOC="9" Name="fireTreeStructureChanged" PC="6"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="7" Name="fireTreeNodesChanged" PC="4"/>
                <MethodMetric CC="4" Class="MapAdapter" Component="freemind.modes" LOC="9" Name="fireTreeNodesChanged" PC="6"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="getFilter" PC="0"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="3" Name="setFilter" PC="1"/>
                <MethodMetric CC="2" Class="MapAdapter" Component="freemind.modes" LOC="11" Name="registerMapSourceChangedObserver" PC="2"/>
                <MethodMetric CC="1" Class="MapAdapter" Component="freemind.modes" LOC="4" Name="deregisterMapSourceChangedObserver" PC="1"/>
                <MethodMetric CC="5" Class="FileChangeInspectorTimerTask" Component="freemind.modes" LOC="28" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="MapRegistry" Component="freemind.modes" LOC="7" Name="MapRegistry" PC="2"/>
                <MethodMetric CC="1" Class="MapRegistry" Component="freemind.modes" LOC="3" Name="addIcon" PC="1"/>
                <MethodMetric CC="1" Class="MapRegistry" Component="freemind.modes" LOC="3" Name="getIcons" PC="0"/>
                <MethodMetric CC="1" Class="MapRegistry" Component="freemind.modes" LOC="3" Name="getAttributes" PC="0"/>
                <MethodMetric CC="3" Class="MapRegistry" Component="freemind.modes" LOC="11" Name="registrySubtree" PC="2"/>
                <MethodMetric CC="3" Class="MapRegistry" Component="freemind.modes" LOC="9" Name="registryAttributes" PC="1"/>
                <MethodMetric CC="2" Class="MapRegistry" Component="freemind.modes" LOC="8" Name="registryNodeIcons" PC="1"/>
                <MethodMetric CC="1" Class="MapRegistry" Component="freemind.modes" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="MapRegistry" Component="freemind.modes" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="MapRegistry" Component="freemind.modes" LOC="3" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="4" Name="MindIcon" PC="1"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="4" Name="MindIcon" PC="2"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="4" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="4" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="getIconFileName" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="getIconBaseFileName" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="getIconsPath" PC="0"/>
                <MethodMetric CC="6" Class="MindIcon" Component="freemind.modes" LOC="26" Name="getIcon" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="setIcon" PC="1"/>
                <MethodMetric CC="3" Class="MindIcon" Component="freemind.modes" LOC="10" Name="getAllIconNames" PC="0"/>
                <MethodMetric CC="2" Class="MindIcon" Component="freemind.modes" LOC="8" Name="factory" PC="1"/>
                <MethodMetric CC="2" Class="MindIcon" Component="freemind.modes" LOC="9" Name="factory" PC="2"/>
                <MethodMetric CC="2" Class="MindIcon" Component="freemind.modes" LOC="9" Name="compareTo" PC="1"/>
                <MethodMetric CC="3" Class="MindIcon" Component="freemind.modes" LOC="9" Name="getNumber" PC="0"/>
                <MethodMetric CC="2" Class="MindIcon" Component="freemind.modes" LOC="6" Name="getRendererComponent" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="getKeystrokeResourceName" PC="0"/>
                <MethodMetric CC="1" Class="MindIcon" Component="freemind.modes" LOC="3" Name="getKeyStroke" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getRootNode" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getAsPlainText" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getAsRTF" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getAsHTML" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getFile" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getURL" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getXml" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getFilteredXml" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getRestorable" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getPathToRoot" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="destroy" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="isReadOnly" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="isSaved" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="getFilter" PC="0"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="setFilter" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="nodeStructureChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="setSaved" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="registerMapSourceChangedObserver" PC="2"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="deregisterMapSourceChangedObserver" PC="1"/>
                <MethodMetric CC="1" Class="MindMap" Component="freemind.modes" LOC="0" Name="changeRoot" PC="1"/>
                <MethodMetric CC="1" Class="MapSourceChangedObserver" Component="freemind.modes" LOC="0" Name="mapSourceChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="getStartInclination" PC="0"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="getEndInclination" PC="0"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="setStartInclination" PC="1"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="setEndInclination" PC="1"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="getStartArrow" PC="0"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="getEndArrow" PC="0"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="changeInclination" PC="5"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="showControlPoints" PC="1"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="getShowControlPointsFlag" PC="0"/>
                <MethodMetric CC="1" Class="MindMapArrowLink" Component="freemind.modes" LOC="0" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="MindMapCloud" Component="freemind.modes" LOC="0" Name="getExteriorColor" PC="0"/>
                <MethodMetric CC="1" Class="MindMapCloud" Component="freemind.modes" LOC="0" Name="getIterativeLevel" PC="0"/>
                <MethodMetric CC="1" Class="MindMapCloud" Component="freemind.modes" LOC="0" Name="changeIterativeLevel" PC="1"/>
                <MethodMetric CC="1" Class="MindMapCloud" Component="freemind.modes" LOC="0" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="MindMapEdge" Component="freemind.modes" LOC="0" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="MindMapEdge" Component="freemind.modes" LOC="0" Name="hasStyle" PC="0"/>
                <MethodMetric CC="1" Class="MindMapEdge" Component="freemind.modes" LOC="0" Name="getStyleAsInt" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLine" Component="freemind.modes" LOC="0" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLine" Component="freemind.modes" LOC="0" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLine" Component="freemind.modes" LOC="0" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLine" Component="freemind.modes" LOC="0" Name="getRealWidth" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLine" Component="freemind.modes" LOC="0" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLine" Component="freemind.modes" LOC="0" Name="setTarget" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLine" Component="freemind.modes" LOC="0" Name="clone" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLink" Component="freemind.modes" LOC="0" Name="getDestinationLabel" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLink" Component="freemind.modes" LOC="0" Name="getReferenceText" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLink" Component="freemind.modes" LOC="0" Name="getTarget" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLink" Component="freemind.modes" LOC="0" Name="getSource" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLink" Component="freemind.modes" LOC="0" Name="getUniqueId" PC="0"/>
                <MethodMetric CC="2" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="10" Name="MindMapLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="generateUniqueID" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="generateUniqueLinkId" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="registerLinkTarget" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="registerLinkTarget" PC="2"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="_registerLinkTarget" PC="1"/>
                <MethodMetric CC="3" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="11" Name="_registerLinkTarget" PC="2"/>
                <MethodMetric CC="2" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="4" Name="getState" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="4" Name="getTargetForId" PC="1"/>
                <MethodMetric CC="2" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="12" Name="getAssignedLinksVector" PC="1"/>
                <MethodMetric CC="4" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="17" Name="deregisterLinkTarget" PC="1"/>
                <MethodMetric CC="7" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="24" Name="registerLink" PC="1"/>
                <MethodMetric CC="3" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="12" Name="deregisterLink" PC="1"/>
                <MethodMetric CC="2" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="6" Name="getLinkForId" PC="1"/>
                <MethodMetric CC="3" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="12" Name="getAllSources" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="6" Name="getAllLinks" PC="1"/>
                <MethodMetric CC="2" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="9" Name="getAllLinksIntoMe" PC="1"/>
                <MethodMetric CC="2" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="8" Name="getAllLinksFromMe" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="getLabel" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="registerLocalHyperlinkId" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLinkRegistry" Component="freemind.modes" LOC="3" Name="isTargetOfLocalHyperlinks" PC="1"/>
                <MethodMetric CC="3" Class="SynchronousVector" Component="freemind.modes" LOC="12" Name="add" PC="1"/>
                <MethodMetric CC="3" Class="SynchronousVector" Component="freemind.modes" LOC="12" Name="removeElementAt" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getXmlText" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setXmlText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getXmlNoteText" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setXmlNoteText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getNoteText" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setNoteText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getObjectId" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="childrenFolded" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="childrenUnfolded" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="sortedChildrenUnfolded" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getChildren" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="hasChildren" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getFilterInfo" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getChildPosition" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getNodeLevel" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getLink" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getShortText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getEdge" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setStyle" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="hasStyle" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getParentNode" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isBold" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isItalic" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isUnderlined" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getFont" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getFontSize" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getFontFamilyName" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getViewers" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="addViewer" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="removeViewer" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getPlainTextContent" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getPath" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isDescendantOf" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isDescendantOfOrEqual" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isRoot" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isFolded" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isLeft" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setLeft" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setFolded" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setFont" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setShiftY" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getShiftY" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="calcShiftY" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setVGap" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getVGap" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setHGap" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getHGap" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setLink" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setFontSize" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setColor" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getIcons" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="addIcon" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="removeIcon" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getCloud" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setCloud" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getBackgroundColor" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getHooks" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getActivatedHooks" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="addHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="invokeHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="removeHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="removeAllHooks" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setToolTip" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getToolTip" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setAdditionalInfo" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getAdditionalInfo" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="shallowCopy" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="save" PC="4"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getStateIcons" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setStateIcon" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getHistoryInformation" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setHistoryInformation" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isVisible" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="hasExactlyOneVisibleChild" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="hasVisibleChilds" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getAttributes" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="createAttributeTableModel" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getAttributeKeyList" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getAttributeTableLength" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getAttribute" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getAttribute" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getAttributePosition" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="setAttribute" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="addTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="removeTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="acceptViewVisitor" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="getListeners" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isNewChildLeft" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="isWriteable" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNode" Component="freemind.modes" LOC="0" Name="hasFoldedParents" PC="0"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="0" Name="init" PC="1"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="0" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="0" Name="activate" PC="0"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="0" Name="restore" PC="1"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="0" Name="createModeController" PC="0"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="0" Name="getDefaultModeController" PC="0"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="0" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="Mode" Component="freemind.modes" LOC="3" Name="toLocalizedString" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="loadURL" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="newMap" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="saveAs" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="open" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="close" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="createNodeTreeFromXml" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="startupController" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="shutdownController" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="doubleClick" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="plainClick" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="setVisible" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="isBlocked" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getNodeFromID" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getNodeID" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="select" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="select" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="selectBranch" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getSelected" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getSelectedView" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getSelecteds" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getSelectedsByDepth" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="sortNodesByDepth" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="extendSelection" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="registerNodeSelectionListener" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="deregisterNodeSelectionListener" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="firePreSaveEvent" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="registerNodeLifetimeListener" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="deregisterNodeLifetimeListener" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="fireNodePreDeleteEvent" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="setFolded" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="displayNode" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="centerNode" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getLinkShortText" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getModeToolBar" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getLeftToolBar" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="updateMenus" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="updatePopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getPopupMenu" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="showPopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getPopupForModel" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="setModel" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getMode" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getMapModule" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getHookFactory" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getSelectionColor" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getAttributeController" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getNodeView" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="refreshMap" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="copy" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="copy" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="copySingle" PC="0"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="copy" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="getFileChooser" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="setView" PC="1"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="changeSelection" PC="2"/>
                <MethodMetric CC="1" Class="ModeController" Component="freemind.modes" LOC="0" Name="setToolTip" PC="3"/>
                <MethodMetric CC="1" Class="NodeSelectionListener" Component="freemind.modes" LOC="0" Name="onUpdateNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="NodeSelectionListener" Component="freemind.modes" LOC="0" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeSelectionListener" Component="freemind.modes" LOC="0" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeSelectionListener" Component="freemind.modes" LOC="0" Name="onSaveNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeSelectionListener" Component="freemind.modes" LOC="0" Name="onSelectionChange" PC="2"/>
                <MethodMetric CC="1" Class="NodeLifetimeListener" Component="freemind.modes" LOC="0" Name="onCreateNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="NodeLifetimeListener" Component="freemind.modes" LOC="0" Name="onPreDeleteNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeLifetimeListener" Component="freemind.modes" LOC="0" Name="onPostDeleteNode" PC="2"/>
                <MethodMetric CC="1" Class="ModesCreator" Component="freemind.modes" LOC="3" Name="ModesCreator" PC="1"/>
                <MethodMetric CC="4" Class="ModesCreator" Component="freemind.modes" LOC="19" Name="getAllModes" PC="0"/>
                <MethodMetric CC="3" Class="ModesCreator" Component="freemind.modes" LOC="22" Name="getMode" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="insertRow" PC="3"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="addRowNoUndo" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getAttributes" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="NodeAdapter" PC="2"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="21" Name="NodeAdapter" PC="3"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="setMap" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="7" Name="getText" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getXmlText" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="setXmlText" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getXmlNoteText" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getNoteText" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="setXmlNoteText" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="setNoteText" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getPlainTextContent" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getLink" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="getShortText" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="setLink" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getFilterInfo" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="getViewers" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="addViewer" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="removeViewer" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="7" Name="getPath" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getEdge" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setEdge" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getCloud" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="setCloud" PC="1"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="10" Name="changeChildCloudIterativeLevels" PC="1"/>
                <MethodMetric CC="8" Class="NodeAdapter" Component="freemind.modes" LOC="32" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="hasStyle" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setStyle" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setColor" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getBackgroundColor" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="establishOwnFont" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="setBold" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="toggleBold" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="setItalic" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="toggleItalic" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setUnderlined" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setFont" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getParentNode" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="setFontSize" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getFont" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="8" Name="getFontSize" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="8" Name="getFontFamilyName" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="isBold" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="isItalic" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="isUnderlined" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="isFolded" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="getIcons" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="10" Name="addIcon" PC="2"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="12" Name="removeIcon" PC="1"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="hasFoldedStrictDescendant" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="7" Name="hasFoldedParents" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setFolded" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="15" Name="shallowCopy" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="isDescendantOf" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="isRoot" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="isDescendantOfOrEqual" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="hasChildren" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="getChildPosition" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="childrenUnfolded" PC="0"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="20" Name="sortedChildrenUnfolded" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="compare" PC="2"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="comp" PC="2"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="childrenFolded" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getChildren" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="children" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getAllowsChildren" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getChildAt" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getChildCount" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getIndex" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getParent" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="isLeaf" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="isLeft" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="9" Name="setLeft" PC="1"/>
                <MethodMetric CC="5" Class="NodeAdapter" Component="freemind.modes" LOC="13" Name="isNewChildLeft" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="14" Name="insert" PC="2"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="remove" PC="1"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="14" Name="remove" PC="1"/>
                <MethodMetric CC="5" Class="NodeAdapter" Component="freemind.modes" LOC="12" Name="recursiveCallAddChildren" PC="2"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="10" Name="recursiveCallRemoveChildren" PC="3"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="removeFromParent" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setParent" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setParent" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setUserObject" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="addToPathVector" PC="1"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="10" Name="getNodeLevel" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="addHook" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="18" Name="invokeHook" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="createActivatedHooks" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="createToolTip" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="createHooks" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="createStateIcons" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="createIcons" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="getHooks" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="getActivatedHooks" PC="0"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="15" Name="removeHook" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="12" Name="removeAllHooks" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="getToolTip" PC="0"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="12" Name="setToolTip" PC="2"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getObjectId" PC="1"/>
                <MethodMetric CC="32" Class="NodeAdapter" Component="freemind.modes" LOC="131" Name="save" PC="4"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="convertToEncodedContent" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="7" Name="saveChildren" PC="4"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getShiftY" PC="0"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="8" Name="hasExactlyOneVisibleChild" PC="0"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="hasVisibleChilds" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="8" Name="calcShiftY" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setShiftY" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="2" Name="setAdditionalInfo" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getAdditionalInfo" PC="0"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="11" Name="setStateIcon" PC="2"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="getStateIcons" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getHistoryInformation" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setHistoryInformation" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getHGap" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setHGap" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getVGap" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="setVGap" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="4" Name="isVisible" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getAttributes" PC="0"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="13" Name="createAttributeTableModel" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getAttributeTableLength" PC="0"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getAttribute" PC="1"/>
                <MethodMetric CC="3" Class="NodeAdapter" Component="freemind.modes" LOC="10" Name="getAttributeKeyList" PC="0"/>
                <MethodMetric CC="4" Class="NodeAdapter" Component="freemind.modes" LOC="12" Name="getAttributePosition" PC="1"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="7" Name="getAttribute" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="5" Name="setAttribute" PC="2"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="addTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="removeTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="NodeAdapter" Component="freemind.modes" LOC="3" Name="getListeners" PC="0"/>
                <MethodMetric CC="2" Class="NodeAdapter" Component="freemind.modes" LOC="6" Name="acceptViewVisitor" PC="1"/>
                <MethodMetric CC="1" Class="NodeDownAction" Component="freemind.modes" LOC="4" Name="NodeDownAction" PC="1"/>
                <MethodMetric CC="1" Class="NodeDownAction" Component="freemind.modes" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewEvent" Component="freemind.modes" LOC="4" Name="NodeViewEvent" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewEventListener" Component="freemind.modes" LOC="0" Name="nodeViewCreated" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewEventListener" Component="freemind.modes" LOC="0" Name="nodeViewRemoved" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="2" Name="StylePattern" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="StylePattern" PC="2"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="13" Name="StylePattern" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getAppliesToEdge" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getAppliesToNode" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getAppliesToNodeFont" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getAppliesToNodeIcon" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getAppliesToChildren" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getRecursive" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setRecursive" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeColor" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeColor" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeBackgroundColor" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeStyle" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeStyle" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeFontFamily" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeFontFamily" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeFontSize" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeFontSize" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeIcon" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeIcon" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getEdgeColor" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setEdgeColor" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getEdgeStyle" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setEdgeStyle" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getEdgeWidth" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setEdgeWidth" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getChildrenStylePattern" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setChildrenStylePattern" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="loadPatterns" PC="1"/>
                <MethodMetric CC="2" Class="StylePattern" Component="freemind.modes" LOC="9" Name="loadPatterns" PC="1"/>
                <MethodMetric CC="26" Class="StylePattern" Component="freemind.modes" LOC="78" Name="loadPattern" PC="2"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeFontBold" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeFontBold" PC="1"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="getNodeFontItalic" PC="0"/>
                <MethodMetric CC="1" Class="StylePattern" Component="freemind.modes" LOC="3" Name="setNodeFontItalic" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFactory" Component="freemind.modes" LOC="3" Name="loadPatterns" PC="1"/>
                <MethodMetric CC="7" Class="StylePatternFactory" Component="freemind.modes" LOC="27" Name="loadPatterns" PC="1"/>
                <MethodMetric CC="5" Class="StylePatternFactory" Component="freemind.modes" LOC="24" Name="savePatterns" PC="2"/>
                <MethodMetric CC="10" Class="StylePatternFactory" Component="freemind.modes" LOC="55" Name="createPatternFromNode" PC="1"/>
                <MethodMetric CC="5" Class="StylePatternFactory" Component="freemind.modes" LOC="31" Name="toString" PC="2"/>
                <MethodMetric CC="3" Class="StylePatternFactory" Component="freemind.modes" LOC="12" Name="addSubPatternToString" PC="4"/>
                <MethodMetric CC="2" Class="StylePatternFactory" Component="freemind.modes" LOC="6" Name="addSeparatorIfNecessary" PC="1"/>
                <MethodMetric CC="2" Class="StylePatternFactory" Component="freemind.modes" LOC="8" Name="getPatternFromString" PC="1"/>
                <MethodMetric CC="2" Class="StylePatternFactory" Component="freemind.modes" LOC="8" Name="getPatternsFromString" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFactory" Component="freemind.modes" LOC="15" Name="intersectPattern" PC="2"/>
                <MethodMetric CC="3" Class="StylePatternFactory" Component="freemind.modes" LOC="10" Name="processPatternProperties" PC="3"/>
                <MethodMetric CC="2" Class="StylePatternFactory" Component="freemind.modes" LOC="9" Name="createPatternFromSelected" PC="2"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="XMLElementAdapter" PC="1"/>
                <MethodMetric CC="2" Class="XMLElementAdapter" Component="freemind.modes" LOC="9" Name="XMLElementAdapter" PC="3"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="0" Name="createAnotherElement" PC="0"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="0" Name="createNodeAdapter" PC="2"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="0" Name="createEdgeAdapter" PC="2"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="0" Name="createCloudAdapter" PC="2"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="0" Name="createArrowLinkAdapter" PC="3"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="0" Name="createArrowLinkTarget" PC="3"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="0" Name="createEncryptedNode" PC="1"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="getUserObject" PC="0"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="setUserObject" PC="1"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="getMapChild" PC="0"/>
                <MethodMetric CC="15" Class="XMLElementAdapter" Component="freemind.modes" LOC="49" Name="setName" PC="1"/>
                <MethodMetric CC="17" Class="XMLElementAdapter" Component="freemind.modes" LOC="85" Name="addChild" PC="1"/>
                <MethodMetric CC="48" Class="XMLElementAdapter" Component="freemind.modes" LOC="154" Name="setAttribute" PC="2"/>
                <MethodMetric CC="20" Class="XMLElementAdapter" Component="freemind.modes" LOC="58" Name="setNodeAttribute" PC="3"/>
                <MethodMetric CC="2" Class="XMLElementAdapter" Component="freemind.modes" LOC="6" Name="copyAttributesToNode" PC="1"/>
                <MethodMetric CC="9" Class="XMLElementAdapter" Component="freemind.modes" LOC="29" Name="completeElement" PC="0"/>
                <MethodMetric CC="11" Class="XMLElementAdapter" Component="freemind.modes" LOC="64" Name="processUnfinishedLinks" PC="1"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="getIDToTarget" PC="0"/>
                <MethodMetric CC="1" Class="XMLElementAdapter" Component="freemind.modes" LOC="3" Name="setIDToTarget" PC="1"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="4" Name="Attribute" PC="1"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="4" Name="Attribute" PC="2"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="4" Name="Attribute" PC="1"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="3" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="3" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="Attribute" Component="freemind.modes.attributes" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performSetValueAt" PC="4"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performInsertRow" PC="4"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performRemoveRow" PC="2"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performSetColumnWidth" PC="3"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performRemoveAttributeValue" PC="2"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performReplaceAttributeValue" PC="3"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performSetFontSize" PC="2"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performSetVisibility" PC="2"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performSetRestriction" PC="2"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performReplaceAtributeName" PC="2"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performRemoveAttribute" PC="1"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performRegistryAttribute" PC="1"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performRegistryAttributeValue" PC="2"/>
                <MethodMetric CC="1" Class="AttributeController" Component="freemind.modes.attributes" LOC="0" Name="performRegistrySubtreeAttributes" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="AttributeRegistry" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="size" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="12" Name="AttributeRegistry" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getKey" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getElement" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getAttributeController" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="removeAtribute" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="containsElement" PC="1"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="4" Name="getCombinedModel" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getComboBoxModel" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getListBoxModel" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="9" Name="getDefaultComboBoxModel" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="4" Name="getElement" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getVisibleElementsNumber" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="addChangeListener" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="removeChangeListener" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="addAttributesListener" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="removeAttributesListener" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="fireAttributeLayoutChanged" PC="0"/>
                <MethodMetric CC="4" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="9" Name="fireStateChanged" PC="0"/>
                <MethodMetric CC="4" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="9" Name="fireAttributesChanged" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="indexOf" PC="1"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="8" Name="setVisibilityModel" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getTableModel" PC="0"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="10" Name="setRestrictionModel" PC="2"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="8" Name="getRestriction" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="isRestricted" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="setRestricted" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="setRestricted" PC="2"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="6" Name="getValues" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="isRestricted" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="5" Name="setRestricted" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getFontSize" PC="0"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="6" Name="setFontSize" PC="1"/>
                <MethodMetric CC="7" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="28" Name="save" PC="1"/>
                <MethodMetric CC="3" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="10" Name="resetChanges" PC="0"/>
                <MethodMetric CC="3" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="10" Name="applyChanges" PC="0"/>
                <MethodMetric CC="4" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="13" Name="exist" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getElements" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="decrementVisibleElementsNumber" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="incrementVisibleElementsNumber" PC="0"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="17" Name="registry" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="5" Name="registry" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="setAttributeLayoutChanged" PC="0"/>
                <MethodMetric CC="2" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="7" Name="unregistry" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="3" Name="getAttributeViewType" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistry" Component="freemind.modes.attributes" LOC="4" Name="setAttributeViewType" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="5" Name="AttributeRegistryComboBoxColumnModel" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="4" Name="setSelectedItem" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="3" Name="getSelectedItem" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="3" Name="getSize" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="3" Name="getElementAt" PC="1"/>
                <MethodMetric CC="4" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="14" Name="tableChanged" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="2" Name="clear" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="3" Name="contains" PC="1"/>
                <MethodMetric CC="2" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="6" Name="add" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="3" Name="replace" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="3" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryComboBoxColumnModel" Component="freemind.modes.attributes" LOC="3" Name="getIndexOf" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="10" Name="AttributeRegistryElement" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="isVisible" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="getValues" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="4" Name="addValue" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="4" Name="removeAllValues" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="4" Name="removeValue" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="isRestricted" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="getKey" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="setKey" PC="1"/>
                <MethodMetric CC="4" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="18" Name="save" PC="0"/>
                <MethodMetric CC="3" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="9" Name="setVisibility" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="5" Name="setRestriction" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="getRestriction" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="setRestrictionModel" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="getVisibilityModel" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="3" Name="setVisibilityModel" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryElement" Component="freemind.modes.attributes" LOC="4" Name="replaceValue" PC="2"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="getRegistry" PC="0"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="getKey" PC="0"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="add" PC="1"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="_add" PC="1"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="_remove" PC="1"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="replace" PC="2"/>
                <MethodMetric CC="1" Class="RegisteredAttributeValues" Component="freemind.modes.attributes" LOC="3" Name="_replace" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="AttributeRegistryTableModel" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="getRowCount" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="getColumnCount" PC="0"/>
                <MethodMetric CC="7" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="18" Name="getValueAt" PC="2"/>
                <MethodMetric CC="5" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="17" Name="setValueAt" PC="3"/>
                <MethodMetric CC="5" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="13" Name="getColumnClass" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="isCellEditable" PC="2"/>
                <MethodMetric CC="9" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="17" Name="getColumnName" PC="1"/>
                <MethodMetric CC="2" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="fireTableRowsDeleted" PC="0"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="fireTableCellUpdated" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="fireTableRowsDeleted" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="fireTableRowsInserted" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="fireTableRowsUpdated" PC="2"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="fireVisibilityUpdated" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryTableModel" Component="freemind.modes.attributes" LOC="3" Name="fireRestrictionsUpdated" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="3" Name="AttributeTableLayoutModel" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="3" Name="getColumnWidth" PC="1"/>
                <MethodMetric CC="2" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="6" Name="setColumnWidth" PC="2"/>
                <MethodMetric CC="1" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="3" Name="setListenerList" PC="1"/>
                <MethodMetric CC="2" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="4" Name="getListenerList" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="3" Name="addColumnWidthChangeListener" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="3" Name="removeColumnWidthChangeListener" PC="1"/>
                <MethodMetric CC="4" Class="AttributeTableLayoutModel" Component="freemind.modes.attributes" LOC="9" Name="fireColumnWidthChanged" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableModel" Component="freemind.modes.attributes" LOC="0" Name="getRowCount" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModel" Component="freemind.modes.attributes" LOC="0" Name="getColumnWidth" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableModel" Component="freemind.modes.attributes" LOC="0" Name="setColumnWidth" PC="2"/>
                <MethodMetric CC="1" Class="AttributeTableModel" Component="freemind.modes.attributes" LOC="0" Name="getValueAt" PC="2"/>
                <MethodMetric CC="1" Class="AttributeTableModel" Component="freemind.modes.attributes" LOC="0" Name="setValueAt" PC="3"/>
                <MethodMetric CC="1" Class="AttributeTableModel" Component="freemind.modes.attributes" LOC="0" Name="getNode" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModel" Component="freemind.modes.attributes" LOC="0" Name="fireTableDataChanged" PC="0"/>
                <MethodMetric CC="1" Class="ColumnWidthChangeEvent" Component="freemind.modes.attributes" LOC="4" Name="ColumnWidthChangeEvent" PC="2"/>
                <MethodMetric CC="1" Class="ColumnWidthChangeEvent" Component="freemind.modes.attributes" LOC="3" Name="getColumnNumber" PC="0"/>
                <MethodMetric CC="1" Class="ColumnWidthChangeListener" Component="freemind.modes.attributes" LOC="0" Name="columnWidthChanged" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="5" Name="NodeAttributeTableModel" PC="2"/>
                <MethodMetric CC="2" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="allocateAttributes" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="NodeAttributeTableModel" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getRowCount" PC="0"/>
                <MethodMetric CC="4" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="11" Name="getValueAt" PC="2"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="4" Name="getName" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="4" Name="getValue" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getAttributeController" PC="0"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="setValueAt" PC="3"/>
                <MethodMetric CC="3" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="8" Name="enableStateIcon" PC="0"/>
                <MethodMetric CC="2" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="5" Name="disableStateIcon" PC="0"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="insertRow" PC="3"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="8" Name="addRowNoUndo" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="5" Name="setName" PC="2"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="5" Name="setValue" PC="2"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="5" Name="removeRow" PC="1"/>
                <MethodMetric CC="3" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="8" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="8" Name="saveAttribute" PC="2"/>
                <MethodMetric CC="5" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="16" Name="saveLayout" PC="1"/>
                <MethodMetric CC="2" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="7" Name="initializeNodeAttributeLayoutXMLElement" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getNode" PC="0"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getAttribute" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getColumnCount" PC="0"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="isCellEditable" PC="2"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getColumnName" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getColumnClass" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="getColumnWidth" PC="1"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="3" Name="setColumnWidth" PC="2"/>
                <MethodMetric CC="2" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="4" Name="getLayout" PC="0"/>
                <MethodMetric CC="1" Class="NodeAttributeTableModel" Component="freemind.modes.attributes" LOC="4" Name="getAttributes" PC="0"/>
                <MethodMetric CC="1" Class="BrowseArrowLinkModel" Component="freemind.modes.browsemode" LOC="3" Name="BrowseArrowLinkModel" PC="3"/>
                <MethodMetric CC="1" Class="BrowseArrowLinkModel" Component="freemind.modes.browsemode" LOC="3" Name="clone" PC="0"/>
                <MethodMetric CC="1" Class="BrowseArrowLinkModel" Component="freemind.modes.browsemode" LOC="3" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="BrowseArrowLinkModel" Component="freemind.modes.browsemode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="BrowseArrowLinkModel" Component="freemind.modes.browsemode" LOC="2" Name="changeInclination" PC="5"/>
                <MethodMetric CC="1" Class="BrowseCloudModel" Component="freemind.modes.browsemode" LOC="3" Name="BrowseCloudModel" PC="2"/>
                <MethodMetric CC="1" Class="BrowseCloudModel" Component="freemind.modes.browsemode" LOC="3" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="10" Name="BrowseController" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="4" Name="startupController" PC="0"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="2" Name="restoreMapsLastState" PC="2"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="newModel" PC="1"/>
                <MethodMetric CC="4" Class="BrowseController" Component="freemind.modes.browsemode" LOC="15" Name="plainClick" PC="1"/>
                <MethodMetric CC="2" Class="BrowseController" Component="freemind.modes.browsemode" LOC="8" Name="doubleClick" PC="0"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="newNode" PC="2"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="getPopupMenu" PC="0"/>
                <MethodMetric CC="5" Class="BrowseController" Component="freemind.modes.browsemode" LOC="25" Name="getPopupForModel" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="getGotoLinkNodeAction" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="getModeToolBar" PC="0"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="getToolBar" PC="0"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="5" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="5" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="4" Name="newMap" PC="1"/>
                <MethodMetric CC="4" Class="BrowseController" Component="freemind.modes.browsemode" LOC="13" Name="setNoteIcon" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="6" Name="setAllActions" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="8" Name="updateMenus" PC="1"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="getHookFactory" PC="0"/>
                <MethodMetric CC="1" Class="BrowseController" Component="freemind.modes.browsemode" LOC="3" Name="createXMLElement" PC="0"/>
                <MethodMetric CC="1" Class="FollowMapLink" Component="freemind.modes.browsemode" LOC="5" Name="FollowMapLink" PC="1"/>
                <MethodMetric CC="2" Class="FollowMapLink" Component="freemind.modes.browsemode" LOC="22" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FollowMapLink" Component="freemind.modes.browsemode" LOC="5" Name="getHook" PC="0"/>
                <MethodMetric CC="1" Class="FollowMapLink" Component="freemind.modes.browsemode" LOC="3" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="FollowLinkAction" Component="freemind.modes.browsemode" LOC="3" Name="FollowLinkAction" PC="0"/>
                <MethodMetric CC="1" Class="FollowLinkAction" Component="freemind.modes.browsemode" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="BrowseEdgeModel" Component="freemind.modes.browsemode" LOC="3" Name="BrowseEdgeModel" PC="2"/>
                <MethodMetric CC="1" Class="BrowseEdgeModel" Component="freemind.modes.browsemode" LOC="3" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="BrowseEdgeModel" Component="freemind.modes.browsemode" LOC="3" Name="setColor" PC="1"/>
                <MethodMetric CC="1" Class="BrowseEdgeModel" Component="freemind.modes.browsemode" LOC="3" Name="setStyle" PC="1"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="BrowseHookFactory" PC="0"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="getPossibleNodeHooks" PC="0"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="getPossibleModeControllerHooks" PC="0"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="createModeControllerHook" PC="1"/>
                <MethodMetric CC="3" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="16" Name="createNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="getHookMenuPositions" PC="1"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="getInstanciationMethod" PC="1"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="getRegistrations" PC="0"/>
                <MethodMetric CC="1" Class="BrowseHookFactory" Component="freemind.modes.browsemode" LOC="3" Name="getPluginBaseClass" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="BrowseMapModel" PC="2"/>
                <MethodMetric CC="2" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="6" Name="BrowseMapModel" PC="3"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="2" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="8" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="getFile" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="2" Name="setFile" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="getURL" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="setURL" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="isSaved" PC="0"/>
                <MethodMetric CC="2" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="10" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="27" Name="loadTree" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="2" Name="setLinkInclinationChanged" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="getXml" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMapModel" Component="freemind.modes.browsemode" LOC="3" Name="getFilteredXml" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="2" Name="BrowseMode" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="4" Name="init" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="8" Name="activate" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="9" Name="restore" PC="1"/>
                <MethodMetric CC="1" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="4" Name="getDefaultModeController" PC="0"/>
                <MethodMetric CC="1" Class="BrowseMode" Component="freemind.modes.browsemode" LOC="3" Name="createModeController" PC="0"/>
                <MethodMetric CC="1" Class="BrowseNodeModel" Component="freemind.modes.browsemode" LOC="5" Name="BrowseNodeModel" PC="2"/>
                <MethodMetric CC="1" Class="BrowseNodeModel" Component="freemind.modes.browsemode" LOC="5" Name="BrowseNodeModel" PC="3"/>
                <MethodMetric CC="1" Class="BrowseNodeModel" Component="freemind.modes.browsemode" LOC="3" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="BrowseNodeModel" Component="freemind.modes.browsemode" LOC="3" Name="isWriteable" PC="0"/>
                <MethodMetric CC="1" Class="BrowsePopupMenu" Component="freemind.modes.browsemode" LOC="4" Name="add" PC="2"/>
                <MethodMetric CC="1" Class="BrowsePopupMenu" Component="freemind.modes.browsemode" LOC="12" Name="BrowsePopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="BrowsePopupMenu" Component="freemind.modes.browsemode" LOC="3" Name="popupMenuWillBecomeVisible" PC="1"/>
                <MethodMetric CC="1" Class="BrowsePopupMenu" Component="freemind.modes.browsemode" LOC="2" Name="popupMenuWillBecomeInvisible" PC="1"/>
                <MethodMetric CC="1" Class="BrowsePopupMenu" Component="freemind.modes.browsemode" LOC="2" Name="popupMenuCanceled" PC="1"/>
                <MethodMetric CC="1" Class="BrowseReminderHook" Component="freemind.modes.browsemode" LOC="3" Name="BrowseReminderHook" PC="0"/>
                <MethodMetric CC="1" Class="BrowseReminderHook" Component="freemind.modes.browsemode" LOC="3" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="BrowseReminderHook" Component="freemind.modes.browsemode" LOC="4" Name="setToolTip" PC="3"/>
                <MethodMetric CC="2" Class="BrowseToolBar" Component="freemind.modes.browsemode" LOC="22" Name="BrowseToolBar" PC="1"/>
                <MethodMetric CC="2" Class="BrowseToolBar" Component="freemind.modes.browsemode" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="BrowseToolBar" Component="freemind.modes.browsemode" LOC="3" Name="setURLField" PC="1"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="4" Name="BrowseXMLElement" PC="1"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="4" Name="BrowseXMLElement" PC="3"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="3" Name="createAnotherElement" PC="0"/>
                <MethodMetric CC="2" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="6" Name="createNodeAdapter" PC="2"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="3" Name="createEdgeAdapter" PC="2"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="3" Name="createCloudAdapter" PC="2"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="3" Name="createArrowLinkAdapter" PC="3"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="3" Name="createArrowLinkTarget" PC="3"/>
                <MethodMetric CC="1" Class="BrowseXMLElement" Component="freemind.modes.browsemode" LOC="7" Name="createEncryptedNode" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedBrowseNode" Component="freemind.modes.browsemode" LOC="3" Name="EncryptedBrowseNode" PC="2"/>
                <MethodMetric CC="4" Class="EncryptedBrowseNode" Component="freemind.modes.browsemode" LOC="12" Name="EncryptedBrowseNode" PC="3"/>
                <MethodMetric CC="1" Class="EncryptedBrowseNode" Component="freemind.modes.browsemode" LOC="3" Name="updateIcon" PC="0"/>
                <MethodMetric CC="6" Class="EncryptedBrowseNode" Component="freemind.modes.browsemode" LOC="42" Name="setFolded" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedBrowseNode" Component="freemind.modes.browsemode" LOC="4" Name="setAdditionalInfo" PC="1"/>
                <MethodMetric CC="1" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="3" Name="NodeNoteViewer" PC="1"/>
                <MethodMetric CC="2" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="11" Name="getNoteViewerComponent" PC="1"/>
                <MethodMetric CC="1" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="3" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="2" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="7" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="2" Name="onSaveNode" PC="1"/>
                <MethodMetric CC="1" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="3" Name="onUpdateNodeHook" PC="1"/>
                <MethodMetric CC="2" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="6" Name="setStateIcon" PC="2"/>
                <MethodMetric CC="1" Class="NodeNoteViewer" Component="freemind.modes.browsemode" LOC="2" Name="onSelectionChange" PC="2"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="3" Name="getSubterms" PC="0"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="3" Name="getSearchTerm" PC="0"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="4" Name="getFindFromText" PC="0"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="4" Name="FindAction" PC="1"/>
                <MethodMetric CC="4" Class="FindAction" Component="freemind.modes.common.actions" LOC="19" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="FindAction" Component="freemind.modes.common.actions" LOC="9" Name="close" PC="1"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="50" Name="displayDialog" PC="0"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="5" Name="getSearchTermAsEscapedString" PC="1"/>
                <MethodMetric CC="3" Class="FindAction" Component="freemind.modes.common.actions" LOC="17" Name="find" PC="3"/>
                <MethodMetric CC="13" Class="FindAction" Component="freemind.modes.common.actions" LOC="57" Name="find" PC="3"/>
                <MethodMetric CC="4" Class="FindAction" Component="freemind.modes.common.actions" LOC="13" Name="prepareTextContent" PC="2"/>
                <MethodMetric CC="7" Class="FindAction" Component="freemind.modes.common.actions" LOC="33" Name="breakSearchTermIntoSubterms" PC="1"/>
                <MethodMetric CC="4" Class="FindAction" Component="freemind.modes.common.actions" LOC="10" Name="displayNode" PC="2"/>
                <MethodMetric CC="2" Class="FindAction" Component="freemind.modes.common.actions" LOC="6" Name="findNext" PC="0"/>
                <MethodMetric CC="1" Class="FindAction" Component="freemind.modes.common.actions" LOC="3" Name="centerNode" PC="1"/>
                <MethodMetric CC="1" Class="FindNextAction" Component="freemind.modes.common.actions" LOC="5" Name="FindNextAction" PC="2"/>
                <MethodMetric CC="3" Class="FindNextAction" Component="freemind.modes.common.actions" LOC="14" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NewMapAction" Component="freemind.modes.common.actions" LOC="4" Name="NewMapAction" PC="1"/>
                <MethodMetric CC="1" Class="NewMapAction" Component="freemind.modes.common.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="CommonNodeKeyListener" Component="freemind.modes.common" LOC="17" Name="CommonNodeKeyListener" PC="2"/>
                <MethodMetric CC="1" Class="CommonNodeKeyListener" Component="freemind.modes.common" LOC="2" Name="keyTyped" PC="1"/>
                <MethodMetric CC="25" Class="CommonNodeKeyListener" Component="freemind.modes.common" LOC="58" Name="keyPressed" PC="1"/>
                <MethodMetric CC="2" Class="CommonNodeKeyListener" Component="freemind.modes.common" LOC="5" Name="keyReleased" PC="1"/>
                <MethodMetric CC="1" Class="EditHandler" Component="freemind.modes.common" LOC="0" Name="edit" PC="3"/>
                <MethodMetric CC="1" Class="CommonToggleFoldedAction" Component="freemind.modes.common" LOC="5" Name="CommonToggleFoldedAction" PC="1"/>
                <MethodMetric CC="1" Class="CommonToggleFoldedAction" Component="freemind.modes.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CommonToggleFoldedAction" Component="freemind.modes.common" LOC="3" Name="toggleFolded" PC="0"/>
                <MethodMetric CC="2" Class="CommonToggleFoldedAction" Component="freemind.modes.common" LOC="7" Name="toggleFolded" PC="1"/>
                <MethodMetric CC="2" Class="CommonToggleFoldedAction" Component="freemind.modes.common" LOC="6" Name="reset" PC="1"/>
                <MethodMetric CC="6" Class="CommonToggleFoldedAction" Component="freemind.modes.common" LOC="25" Name="getFoldingState" PC="1"/>
                <MethodMetric CC="2" Class="GotoLinkNodeAction" Component="freemind.modes.common" LOC="10" Name="GotoLinkNodeAction" PC="2"/>
                <MethodMetric CC="1" Class="GotoLinkNodeAction" Component="freemind.modes.common" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="2" Name="EnterPasswordDialog" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="6" Name="EnterPasswordDialog" PC="3"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="18" Name="initialize" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="close" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="10" Name="okPressed" PC="0"/>
                <MethodMetric CC="6" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="18" Name="checkEqualAndMinimumSize" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="5" Name="cancelPressed" PC="0"/>
                <MethodMetric CC="3" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="59" Name="getJContentPane" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="6" Name="getJPasswordField" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="6" Name="getJPasswordField1" PC="0"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="13" Name="getJOKButton" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="13" Name="getJCancelButton" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="getResult" PC="0"/>
                <MethodMetric CC="1" Class="EnterPasswordDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="getPassword" PC="0"/>
                <MethodMetric CC="3" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="40" Name="IconSelectionPopupDialog" PC="3"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="canSelect" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="calculateIndex" PC="1"/>
                <MethodMetric CC="3" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="7" Name="getPosition" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="getPositionFromIndex" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="4" Name="setSelectedPosition" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="getSelectedPosition" PC="0"/>
                <MethodMetric CC="2" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="14" Name="select" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="unhighlight" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="highlight" PC="1"/>
                <MethodMetric CC="2" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="4" Name="cursorLeft" PC="0"/>
                <MethodMetric CC="2" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="4" Name="cursorRight" PC="0"/>
                <MethodMetric CC="2" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="4" Name="cursorUp" PC="0"/>
                <MethodMetric CC="2" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="4" Name="cursorDown" PC="0"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="5" Name="addIcon" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="getResult" PC="0"/>
                <MethodMetric CC="4" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="7" Name="getModifiers" PC="0"/>
                <MethodMetric CC="13" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="37" Name="keyPressed" PC="1"/>
                <MethodMetric CC="2" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="6" Name="getKeyStrokeForEvent" PC="1"/>
                <MethodMetric CC="3" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="10" Name="findIndexByKeyEvent" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="5" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="2" Name="keyReleased" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="2" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="3" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="2" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="IconSelectionPopupDialog" Component="freemind.modes.common.dialogs" LOC="2" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="Position" Component="freemind.modes.common.dialogs" LOC="4" Name="Position" PC="2"/>
                <MethodMetric CC="1" Class="Position" Component="freemind.modes.common.dialogs" LOC="3" Name="getX" PC="0"/>
                <MethodMetric CC="1" Class="Position" Component="freemind.modes.common.dialogs" LOC="3" Name="getY" PC="0"/>
                <MethodMetric CC="1" Class="Position" Component="freemind.modes.common.dialogs" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="4" Class="PersistentEditableComboBox" Component="freemind.modes.common.dialogs" LOC="24" Name="PersistentEditableComboBox" PC="2"/>
                <MethodMetric CC="2" Class="PersistentEditableComboBox" Component="freemind.modes.common.dialogs" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PersistentEditableComboBox" Component="freemind.modes.common.dialogs" LOC="3" Name="addActionListener" PC="1"/>
                <MethodMetric CC="6" Class="PersistentEditableComboBox" Component="freemind.modes.common.dialogs" LOC="23" Name="addUrl" PC="2"/>
                <MethodMetric CC="1" Class="PersistentEditableComboBox" Component="freemind.modes.common.dialogs" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="PersistentEditableComboBox" Component="freemind.modes.common.dialogs" LOC="5" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="CommonMouseMotionManager" Component="freemind.modes.common.listeners" LOC="4" Name="CommonMouseMotionManager" PC="1"/>
                <MethodMetric CC="3" Class="CommonMouseMotionManager" Component="freemind.modes.common.listeners" LOC="11" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="2" Class="CommonMouseMotionManager" Component="freemind.modes.common.listeners" LOC="7" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="CommonMouseMotionManager" Component="freemind.modes.common.listeners" LOC="4" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="3" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="13" Name="updateSelectionMethod" PC="0"/>
                <MethodMetric CC="3" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="5" Name="CommonNodeMouseMotionListener" PC="1"/>
                <MethodMetric CC="4" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="13" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="2" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="6" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="1" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="2" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="2" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="5" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="4" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="4" Name="mouseExited" PC="1"/>
                <MethodMetric CC="4" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="15" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="7" Name="handlePopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="4" Name="getControlRegion" PC="1"/>
                <MethodMetric CC="1" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="6" Name="createTimer" PC="1"/>
                <MethodMetric CC="2" Class="CommonNodeMouseMotionListener" Component="freemind.modes.common.listeners" LOC="5" Name="stopTimerForDelayedSelection" PC="0"/>
                <MethodMetric CC="1" Class="timeDelayedSelection" Component="freemind.modes.common.listeners" LOC="4" Name="timeDelayedSelection" PC="2"/>
                <MethodMetric CC="2" Class="timeDelayedSelection" Component="freemind.modes.common.listeners" LOC="10" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="timeDelayedSelection" Component="freemind.modes.common.listeners" LOC="5" Name="run" PC="0"/>
                <MethodMetric CC="3" Class="MindMapMouseWheelEventHandler" Component="freemind.modes.common.listeners" LOC="16" Name="MindMapMouseWheelEventHandler" PC="1"/>
                <MethodMetric CC="2" Class="MindMapMouseWheelEventHandler" Component="freemind.modes.common.listeners" LOC="5" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="8" Class="MindMapMouseWheelEventHandler" Component="freemind.modes.common.listeners" LOC="33" Name="mouseWheelMoved" PC="1"/>
                <MethodMetric CC="2" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="6" Name="getMapLocationIcon" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="3" Name="setStateIcon" PC="2"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="3" Name="MapNodePositionHolderBase" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="5" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="5" Name="invoke" PC="1"/>
                <MethodMetric CC="3" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="7" Name="showTooltip" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="3" Name="isTooltipDesired" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="5" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="4" Name="addTooltip" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="6" Name="getImageHtml" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="3" Name="hideTooltip" PC="0"/>
                <MethodMetric CC="3" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="9" Name="getBaseHook" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolderBase" Component="freemind.modes.common.plugins" LOC="3" Name="getBarePosition" PC="0"/>
                <MethodMetric CC="1" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="3" Name="ReminderHookBase" PC="0"/>
                <MethodMetric CC="2" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="8" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="6" Name="save" PC="1"/>
                <MethodMetric CC="2" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="8" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="3" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="16" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="5" Name="scheduleTimer" PC="0"/>
                <MethodMetric CC="2" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="6" Name="getClockIcon" PC="0"/>
                <MethodMetric CC="2" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="6" Name="getBellIcon" PC="0"/>
                <MethodMetric CC="2" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="6" Name="getFlagIcon" PC="0"/>
                <MethodMetric CC="5" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="19" Name="displayState" PC="3"/>
                <MethodMetric CC="1" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="0" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="0" Name="setToolTip" PC="3"/>
                <MethodMetric CC="1" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="3" Name="getRemindUserAt" PC="0"/>
                <MethodMetric CC="3" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="10" Name="getRemindUserAtAsSecondsFromNow" PC="0"/>
                <MethodMetric CC="1" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="3" Name="setRemindUserAt" PC="1"/>
                <MethodMetric CC="2" Class="ReminderHookBase" Component="freemind.modes.common.plugins" LOC="6" Name="getStateKey" PC="0"/>
                <MethodMetric CC="1" Class="TimerBlinkTask" Component="freemind.modes.common.plugins" LOC="4" Name="TimerBlinkTask" PC="1"/>
                <MethodMetric CC="2" Class="TimerBlinkTask" Component="freemind.modes.common.plugins" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FileController" Component="freemind.modes.filemode" LOC="3" Name="FileController" PC="1"/>
                <MethodMetric CC="1" Class="FileController" Component="freemind.modes.filemode" LOC="3" Name="getModeToolBar" PC="0"/>
                <MethodMetric CC="1" Class="FileController" Component="freemind.modes.filemode" LOC="3" Name="newModel" PC="1"/>
                <MethodMetric CC="1" Class="FileController" Component="freemind.modes.filemode" LOC="3" Name="newNode" PC="2"/>
                <MethodMetric CC="1" Class="FileController" Component="freemind.modes.filemode" LOC="3" Name="getPopupMenu" PC="0"/>
                <MethodMetric CC="1" Class="FileController" Component="freemind.modes.filemode" LOC="5" Name="updateMenus" PC="1"/>
                <MethodMetric CC="1" Class="FileController" Component="freemind.modes.filemode" LOC="3" Name="getHookFactory" PC="0"/>
                <MethodMetric CC="3" Class="FileController" Component="freemind.modes.filemode" LOC="11" Name="plainClick" PC="1"/>
                <MethodMetric CC="2" Class="FileController" Component="freemind.modes.filemode" LOC="5" Name="toggleFolded" PC="1"/>
                <MethodMetric CC="1" Class="CenterAction" Component="freemind.modes.filemode" LOC="3" Name="CenterAction" PC="0"/>
                <MethodMetric CC="2" Class="CenterAction" Component="freemind.modes.filemode" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="OpenPathAction" Component="freemind.modes.filemode" LOC="3" Name="OpenPathAction" PC="0"/>
                <MethodMetric CC="3" Class="OpenPathAction" Component="freemind.modes.filemode" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FileEdgeModel" Component="freemind.modes.filemode" LOC="3" Name="FileEdgeModel" PC="2"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="FileMapModel" PC="2"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="6" Name="FileMapModel" PC="3"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="destroy" PC="0"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="2" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="isSaved" PC="0"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="2" Name="changeNode" PC="2"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="2" Name="setLinkInclinationChanged" PC="0"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="getXml" PC="1"/>
                <MethodMetric CC="1" Class="FileMapModel" Component="freemind.modes.filemode" LOC="3" Name="getFilteredXml" PC="1"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="2" Name="FileMode" PC="0"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="5" Name="init" PC="1"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="3" Name="getToolbar" PC="0"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="FileMode" Component="freemind.modes.filemode" LOC="9" Name="activate" PC="0"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="2" Name="restore" PC="1"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="3" Name="getDefaultModeController" PC="0"/>
                <MethodMetric CC="1" Class="FileMode" Component="freemind.modes.filemode" LOC="3" Name="createModeController" PC="0"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="6" Name="FileNodeModel" PC="3"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="3" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="3" Name="getFile" PC="0"/>
                <MethodMetric CC="2" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="6" Name="getColor" PC="0"/>
                <MethodMetric CC="2" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="7" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="3" Name="hasChildren" PC="0"/>
                <MethodMetric CC="3" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="8" Name="childrenFolded" PC="0"/>
                <MethodMetric CC="5" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="23" Name="childrenUnfolded" PC="0"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="3" Name="isLeaf" PC="0"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="9" Name="getLink" PC="0"/>
                <MethodMetric CC="1" Class="FileNodeModel" Component="freemind.modes.filemode" LOC="3" Name="isWriteable" PC="0"/>
                <MethodMetric CC="1" Class="FilePopupMenu" Component="freemind.modes.filemode" LOC="4" Name="add" PC="2"/>
                <MethodMetric CC="1" Class="FilePopupMenu" Component="freemind.modes.filemode" LOC="7" Name="FilePopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="FileToolBar" Component="freemind.modes.filemode" LOC="8" Name="FileToolBar" PC="1"/>
                <MethodMetric CC="1" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setRemoveAction" PC="1"/>
                <MethodMetric CC="1" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="AddArrowLinkAction" PC="1"/>
                <MethodMetric CC="3" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="8" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="32" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="createAddArrowLinkXmlAction" PC="3"/>
                <MethodMetric CC="1" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="addLink" PC="2"/>
                <MethodMetric CC="1" Class="AddArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="AddLocalLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="AddLocalLinkAction" PC="1"/>
                <MethodMetric CC="3" Class="AddLocalLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ApplyPatternAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="ApplyPatternAction" PC="2"/>
                <MethodMetric CC="1" Class="ApplyPatternAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="28" Class="ApplyPatternAction" Component="freemind.modes.mindmapmode.actions" LOC="96" Name="applyPattern" PC="2"/>
                <MethodMetric CC="3" Class="ApplyPatternAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="edgeWidthStringToInt" PC="1"/>
                <MethodMetric CC="3" Class="ApplyPatternAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="edgeWidthIntToString" PC="1"/>
                <MethodMetric CC="1" Class="ApplyPatternAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getPattern" PC="0"/>
                <MethodMetric CC="1" Class="ExternalPatternAction" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="act" PC="2"/>
                <MethodMetric CC="1" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="BoldAction" PC="1"/>
                <MethodMetric CC="3" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="toggleBold" PC="2"/>
                <MethodMetric CC="1" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setBold" PC="2"/>
                <MethodMetric CC="1" Class="BoldAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="ChangeArrowLinkEndPoints" PC="1"/>
                <MethodMetric CC="1" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setArrowLinkEndPoints" PC="3"/>
                <MethodMetric CC="1" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getActionPair" PC="3"/>
                <MethodMetric CC="2" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="2" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="createArrowLinkPointXmlAction" PC="3"/>
                <MethodMetric CC="1" Class="ChangeArrowLinkEndPoints" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="ChangeArrowsInArrowLinkAction" PC="6"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="changeArrowsOfArrowLink" PC="3"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getActionPair" PC="3"/>
                <MethodMetric CC="2" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="createArrowLinkArrowXmlAction" PC="3"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="createArrowLinkArrowXmlAction" PC="3"/>
                <MethodMetric CC="1" Class="ChangeArrowsInArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="CloudAction" PC="1"/>
                <MethodMetric CC="1" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setCloud" PC="2"/>
                <MethodMetric CC="2" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="createAddCloudXmlAction" PC="3"/>
                <MethodMetric CC="6" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="22" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="CloudAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="CloudColorAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="CloudColorAction" PC="1"/>
                <MethodMetric CC="4" Class="CloudColorAction" Component="freemind.modes.mindmapmode.actions" LOC="14" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CloudColorAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="setCloudColor" PC="2"/>
                <MethodMetric CC="1" Class="CloudColorAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createCloudColorXmlAction" PC="2"/>
                <MethodMetric CC="5" Class="CloudColorAction" Component="freemind.modes.mindmapmode.actions" LOC="18" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="CloudColorAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="CloudColorAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="ColorArrowLinkAction" PC="2"/>
                <MethodMetric CC="2" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setArrowLinkColor" PC="2"/>
                <MethodMetric CC="1" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getActionPair" PC="2"/>
                <MethodMetric CC="2" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createArrowLinkColorXmlAction" PC="2"/>
                <MethodMetric CC="1" Class="ColorArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="CompoundActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="CompoundActionHandler" PC="1"/>
                <MethodMetric CC="3" Class="CompoundActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="CompoundActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="CompoundActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="2" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CopyAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="CopyAction" PC="1"/>
                <MethodMetric CC="3" Class="CopyAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CopySingleAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="CopySingleAction" PC="1"/>
                <MethodMetric CC="3" Class="CopySingleAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="CutAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="CutAction" PC="1"/>
                <MethodMetric CC="3" Class="CutAction" Component="freemind.modes.mindmapmode.actions" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CutAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getCutNodeAction" PC="1"/>
                <MethodMetric CC="4" Class="CutAction" Component="freemind.modes.mindmapmode.actions" LOC="21" Name="cut" PC="1"/>
                <MethodMetric CC="1" Class="CutAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="CutAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="DeleteChildAction" PC="1"/>
                <MethodMetric CC="4" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="14" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="act" PC="1"/>
                <MethodMetric CC="4" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="25" Name="deleteWithoutUndo" PC="1"/>
                <MethodMetric CC="4" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="15" Name="removeHooks" PC="1"/>
                <MethodMetric CC="1" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="deleteNode" PC="1"/>
                <MethodMetric CC="1" Class="DeleteChildAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getDeleteNodeAction" PC="1"/>
                <MethodMetric CC="1" Class="EdgeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="EdgeColorAction" PC="1"/>
                <MethodMetric CC="3" Class="EdgeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EdgeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="setEdgeColor" PC="2"/>
                <MethodMetric CC="3" Class="EdgeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="2" Class="EdgeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="createEdgeColorFormatAction" PC="2"/>
                <MethodMetric CC="1" Class="EdgeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="EdgeStyleAction" PC="2"/>
                <MethodMetric CC="1" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="setEdgeStyle" PC="2"/>
                <MethodMetric CC="1" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="2" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="getStyle" PC="1"/>
                <MethodMetric CC="1" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createNodeStyleFormatAction" PC="2"/>
                <MethodMetric CC="3" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="EdgeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="EdgeWidthAction" PC="2"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="setEdgeWidth" PC="2"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getWidth" PC="1"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createEdgeWidthFormatAction" PC="2"/>
                <MethodMetric CC="3" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="3" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="13" Name="getWidthTitle" PC="2"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="EdgeWidthAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="EditAction" PC="1"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="5" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="14" Name="edit" PC="3"/>
                <MethodMetric CC="9" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="117" Name="edit" PC="6"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="ok" PC="1"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="split" PC="2"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="ok" PC="1"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="split" PC="2"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="ok" PC="1"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="split" PC="2"/>
                <MethodMetric CC="3" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="13" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="ok" PC="1"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="endEdit" PC="0"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="2" Name="split" PC="2"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="setNodeText" PC="2"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="setHtmlText" PC="2"/>
                <MethodMetric CC="2" Class="EditAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="stopEditing" PC="0"/>
                <MethodMetric CC="1" Class="ExportBranchAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="ExportBranchAction" PC="1"/>
                <MethodMetric CC="7" Class="ExportBranchAction" Component="freemind.modes.mindmapmode.actions" LOC="50" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="FontFamilyAction" PC="1"/>
                <MethodMetric CC="1" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setFontFamily" PC="2"/>
                <MethodMetric CC="1" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createFontNodeAction" PC="2"/>
                <MethodMetric CC="3" Class="FontFamilyAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="FontSizeAction" PC="1"/>
                <MethodMetric CC="1" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="setFontSize" PC="2"/>
                <MethodMetric CC="1" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createFontSizeNodeAction" PC="2"/>
                <MethodMetric CC="3" Class="FontSizeAction" Component="freemind.modes.mindmapmode.actions" LOC="16" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="FreemindAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="FreemindAction" PC="3"/>
                <MethodMetric CC="1" Class="FreemindAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="FreemindAction" PC="3"/>
                <MethodMetric CC="1" Class="FreemindAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="addActor" PC="1"/>
                <MethodMetric CC="1" Class="FreemindAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="HookAction" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="getHookName" PC="0"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="IconAction" PC="3"/>
                <MethodMetric CC="5" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="19" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="addLastIcon" PC="0"/>
                <MethodMetric CC="2" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="removeIcon" PC="1"/>
                <MethodMetric CC="2" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="toggleIcon" PC="0"/>
                <MethodMetric CC="3" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="removeAllIcons" PC="0"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="addIcon" PC="2"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="toggleIcon" PC="2"/>
                <MethodMetric CC="2" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="removeIcon" PC="3"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="getAddLastIconActionPair" PC="2"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getAddIconActionPair" PC="3"/>
                <MethodMetric CC="2" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="getToggleIconActionPair" PC="2"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="getRemoveIconActionPair" PC="3"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getRemoveIconActionPair" PC="3"/>
                <MethodMetric CC="2" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="createAddIconAction" PC="3"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getMindIcon" PC="0"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getKeyStroke" PC="0"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getIcon" PC="0"/>
                <MethodMetric CC="1" Class="IconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getKeystrokeResourceName" PC="0"/>
                <MethodMetric CC="1" Class="ImportExplorerFavoritesAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="ImportExplorerFavoritesAction" PC="1"/>
                <MethodMetric CC="2" Class="ImportExplorerFavoritesAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="10" Class="ImportExplorerFavoritesAction" Component="freemind.modes.mindmapmode.actions" LOC="42" Name="importExplorerFavorites" PC="3"/>
                <MethodMetric CC="1" Class="ImportExplorerFavoritesAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="addNode" PC="2"/>
                <MethodMetric CC="2" Class="ImportFolderStructureAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="ImportFolderStructureAction" PC="1"/>
                <MethodMetric CC="2" Class="ImportFolderStructureAction" Component="freemind.modes.mindmapmode.actions" LOC="20" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ImportFolderStructureAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="7" Class="ImportFolderStructureAction" Component="freemind.modes.mindmapmode.actions" LOC="21" Name="importFolderStructure" PC="3"/>
                <MethodMetric CC="1" Class="ImportFolderStructureAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="addNode" PC="3"/>
                <MethodMetric CC="1" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="ItalicAction" PC="1"/>
                <MethodMetric CC="2" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="toggleItalic" PC="2"/>
                <MethodMetric CC="1" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setItalic" PC="2"/>
                <MethodMetric CC="1" Class="ItalicAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="JoinNodesAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="JoinNodesAction" PC="1"/>
                <MethodMetric CC="1" Class="JoinNodesAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="5" Class="JoinNodesAction" Component="freemind.modes.mindmapmode.actions" LOC="24" Name="joinNodes" PC="2"/>
                <MethodMetric CC="6" Class="JoinNodesAction" Component="freemind.modes.mindmapmode.actions" LOC="22" Name="addContent" PC="4"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="nodeStructureChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="edit" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setNodeText" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setNoteText" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="addNew" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="addNewNode" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="deleteNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="cut" PC="0"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="cut" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="moveNodes" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setFolded" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="toggleFolded" PC="0"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setBold" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setItalic" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setNodeColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setNodeBackgroundColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="blendNodeColor" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setFontFamily" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setFontSize" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="addIcon" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="removeLastIcon" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="removeAllIcons" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="applyPattern" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="applyPattern" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setNodeStyle" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setEdgeColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setEdgeWidth" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setEdgeStyle" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setCloud" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setCloudColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="addLink" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="removeReference" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="changeArrowsOfArrowLink" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setArrowLinkColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setArrowLinkEndPoints" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setLink" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="increaseFontSize" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="splitNode" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="joinNodes" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="paste" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="paste" PC="4"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="paste" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="addHook" PC="4"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="removeHook" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="createNodeHook" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="createModeControllerHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="invokeHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="invokeHooksRecursively" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="getActionFactory" PC="0"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="marshall" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="unMarshall" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="isUndoAction" PC="0"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="getRootNode" PC="0"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="moveNodePosition" PC="4"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="load" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="registerMouseWheelEventHandler" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="deRegisterMouseWheelEventHandler" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="setAttribute" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="addAttribute" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="removeAttribute" PC="2"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="editAttribute" PC="3"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="clearNodeContents" PC="1"/>
                <MethodMetric CC="1" Class="MindMapActions" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="showThisMap" PC="0"/>
                <MethodMetric CC="1" Class="MouseWheelEventHandler" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="handleMouseWheelEvent" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerHookAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="MindMapControllerHookAction" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerHookAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerHookAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getHookName" PC="0"/>
                <MethodMetric CC="1" Class="ModeControllerActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="ModeControllerActionHandler" PC="1"/>
                <MethodMetric CC="1" Class="ModeControllerActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="executeAction" PC="1"/>
                <MethodMetric CC="1" Class="ModeControllerActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="2" Name="startTransaction" PC="1"/>
                <MethodMetric CC="1" Class="ModeControllerActionHandler" Component="freemind.modes.mindmapmode.actions" LOC="2" Name="endTransaction" PC="1"/>
                <MethodMetric CC="1" Class="MoveNodeAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="MoveNodeAction" PC="1"/>
                <MethodMetric CC="2" Class="MoveNodeAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="MoveNodeAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="MoveNodeAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="MoveNodeAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="4"/>
                <MethodMetric CC="1" Class="MoveNodeAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="moveNode" PC="4"/>
                <MethodMetric CC="2" Class="MoveNodeAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="moveNodeTo" PC="4"/>
                <MethodMetric CC="2" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="NewChildAction" PC="1"/>
                <MethodMetric CC="1" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="17" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="9" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="42" Name="addNew" PC="3"/>
                <MethodMetric CC="1" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="addNewNode" PC="2"/>
                <MethodMetric CC="2" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="addNewNode" PC="3"/>
                <MethodMetric CC="1" Class="NewChildAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="getAddNodeAction" PC="4"/>
                <MethodMetric CC="1" Class="NewPreviousSiblingAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="NewPreviousSiblingAction" PC="1"/>
                <MethodMetric CC="1" Class="NewPreviousSiblingAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NewSiblingAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="NewSiblingAction" PC="1"/>
                <MethodMetric CC="1" Class="NewSiblingAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NodeActorXml" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="NodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="NodeBackgroundColorAction" PC="1"/>
                <MethodMetric CC="3" Class="NodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="setNodeBackgroundColor" PC="2"/>
                <MethodMetric CC="1" Class="NodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createNodeBackgroundColorFormatAction" PC="2"/>
                <MethodMetric CC="3" Class="NodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="NodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="RemoveNodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="RemoveNodeBackgroundColorAction" PC="1"/>
                <MethodMetric CC="1" Class="RemoveNodeBackgroundColorAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="NodeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="NodeColorAction" PC="1"/>
                <MethodMetric CC="3" Class="NodeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="NodeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="setNodeColor" PC="2"/>
                <MethodMetric CC="1" Class="NodeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createNodeColorFormatAction" PC="2"/>
                <MethodMetric CC="3" Class="NodeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="NodeColorAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="NodeColorBlendAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="NodeColorBlendAction" PC="1"/>
                <MethodMetric CC="1" Class="NodeColorBlendAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="3" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="NodeGeneralAction" PC="3"/>
                <MethodMetric CC="2" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="NodeGeneralAction" PC="4"/>
                <MethodMetric CC="1" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="NodeGeneralAction" PC="4"/>
                <MethodMetric CC="2" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="addActor" PC="1"/>
                <MethodMetric CC="1" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setSingleNodeOperation" PC="1"/>
                <MethodMetric CC="6" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="22" Name="xmlActionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="execute" PC="1"/>
                <MethodMetric CC="1" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="2" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getNodeFromID" PC="1"/>
                <MethodMetric CC="1" Class="NodeGeneralAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getNodeID" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="2" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="NodeHookAction" PC="2"/>
                <MethodMetric CC="1" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="14" Name="addHook" PC="4"/>
                <MethodMetric CC="8" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="40" Name="createHookNodeUndoAction" PC="3"/>
                <MethodMetric CC="1" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="invoke" PC="2"/>
                <MethodMetric CC="9" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="39" Name="invoke" PC="4"/>
                <MethodMetric CC="2" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="finishInvocation" PC="4"/>
                <MethodMetric CC="1" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getInstanciationMethod" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="getHookFactory" PC="0"/>
                <MethodMetric CC="4" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="14" Name="isEnabled" PC="2"/>
                <MethodMetric CC="4" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="21" Name="createHookNodeAction" PC="4"/>
                <MethodMetric CC="4" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="21" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getHookName" PC="0"/>
                <MethodMetric CC="3" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="16" Name="isSelected" PC="2"/>
                <MethodMetric CC="2" Class="NodeHookAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="removeHook" PC="3"/>
                <MethodMetric CC="1" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="NodeStyleAction" PC="2"/>
                <MethodMetric CC="2" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setStyle" PC="2"/>
                <MethodMetric CC="1" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createNodeStyleFormatAction" PC="2"/>
                <MethodMetric CC="3" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="act" PC="1"/>
                <MethodMetric CC="2" Class="NodeStyleAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="isSelected" PC="2"/>
                <MethodMetric CC="2" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="NodeUpAction" PC="1"/>
                <MethodMetric CC="1" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="moveNodes" PC="3"/>
                <MethodMetric CC="7" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="37" Name="_moveNodes" PC="3"/>
                <MethodMetric CC="1" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="compare" PC="2"/>
                <MethodMetric CC="3" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="20" Name="moveNodeTo" PC="3"/>
                <MethodMetric CC="4" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="22" Name="getSortedSiblings" PC="1"/>
                <MethodMetric CC="3" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="compare" PC="2"/>
                <MethodMetric CC="3" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="NodeUpAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="createMoveNodesAction" PC="3"/>
                <MethodMetric CC="2" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="PasteAction" PC="1"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="16" Name="getPasteNodeAction" PC="3"/>
                <MethodMetric CC="2" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="paste" PC="2"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="paste" PC="4"/>
                <MethodMetric CC="4" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="23" Name="_paste" PC="4"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="getFlavorHandlers" PC="0"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="14" Name="pasteXMLWithoutRedisplay" PC="6"/>
                <MethodMetric CC="4" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="19" Name="insertNodeInto" PC="5"/>
                <MethodMetric CC="20" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="83" Name="pasteStringWithoutRedisplay" PC="4"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="insertNodeInto" PC="3"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="insertNodeInto" PC="2"/>
                <MethodMetric CC="14" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="94" Name="getTransferableContent" PC="2"/>
                <MethodMetric CC="1" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="determineAmountOfNewNodes" PC="1"/>
                <MethodMetric CC="2" Class="PasteAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="getTransferable" PC="1"/>
                <MethodMetric CC="1" Class="NodeCoordinate" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="NodeCoordinate" PC="3"/>
                <MethodMetric CC="2" Class="NodeCoordinate" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="getNode" PC="0"/>
                <MethodMetric CC="2" Class="NodeCoordinate" Component="freemind.modes.mindmapmode.actions" LOC="13" Name="NodeCoordinate" PC="2"/>
                <MethodMetric CC="1" Class="DataFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="paste" PC="5"/>
                <MethodMetric CC="1" Class="DataFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="getDataFlavor" PC="0"/>
                <MethodMetric CC="2" Class="FileListFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="paste" PC="5"/>
                <MethodMetric CC="1" Class="FileListFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDataFlavor" PC="0"/>
                <MethodMetric CC="7" Class="MindMapNodesFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="32" Name="paste" PC="5"/>
                <MethodMetric CC="1" Class="MindMapNodesFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDataFlavor" PC="0"/>
                <MethodMetric CC="5" Class="DirectHtmlFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="23" Name="paste" PC="5"/>
                <MethodMetric CC="1" Class="DirectHtmlFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDataFlavor" PC="0"/>
                <MethodMetric CC="8" Class="HtmlFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="52" Name="paste" PC="5"/>
                <MethodMetric CC="1" Class="HtmlFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDataFlavor" PC="0"/>
                <MethodMetric CC="1" Class="StringFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="paste" PC="5"/>
                <MethodMetric CC="1" Class="StringFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDataFlavor" PC="0"/>
                <MethodMetric CC="1" Class="ImageFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="paste" PC="5"/>
                <MethodMetric CC="1" Class="ImageFlavorHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDataFlavor" PC="0"/>
                <MethodMetric CC="2" Class="PasteAsPlainTextAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="PasteAsPlainTextAction" PC="1"/>
                <MethodMetric CC="2" Class="PasteAsPlainTextAction" Component="freemind.modes.mindmapmode.actions" LOC="22" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="RedoAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="RedoAction" PC="1"/>
                <MethodMetric CC="1" Class="RedoAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="informUndoPartner" PC="1"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="RemoveAllIconsAction" PC="2"/>
                <MethodMetric CC="2" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="createRemoveAllIconsXmlAction" PC="1"/>
                <MethodMetric CC="3" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="removeAllIcons" PC="1"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getIcon" PC="0"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getKeyStroke" PC="0"/>
                <MethodMetric CC="1" Class="RemoveAllIconsAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getKeystrokeResourceName" PC="0"/>
                <MethodMetric CC="2" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="RemoveArrowLinkAction" PC="2"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="removeReference" PC="1"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getActionPair" PC="1"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getArrowLink" PC="0"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setArrowLink" PC="1"/>
                <MethodMetric CC="3" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="12" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="createRemoveArrowLinkXmlAction" PC="1"/>
                <MethodMetric CC="2" Class="RemoveArrowLinkAction" Component="freemind.modes.mindmapmode.actions" LOC="15" Name="createAddArrowLinkXmlAction" PC="1"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="RemoveIconAction" PC="1"/>
                <MethodMetric CC="2" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createRemoveIconXmlAction" PC="2"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="removeLastIcon" PC="1"/>
                <MethodMetric CC="2" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setIconAction" PC="1"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getIcon" PC="0"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getKeyStroke" PC="0"/>
                <MethodMetric CC="1" Class="RemoveIconAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getKeystrokeResourceName" PC="0"/>
                <MethodMetric CC="1" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="RevertAction" PC="1"/>
                <MethodMetric CC="2" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="15" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="10" Name="openXmlInsteadOfMap" PC="1"/>
                <MethodMetric CC="2" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="createRevertXmlAction" PC="1"/>
                <MethodMetric CC="1" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="createRevertXmlAction" PC="3"/>
                <MethodMetric CC="1" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="createRevertXmlAction" PC="3"/>
                <MethodMetric CC="4" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="22" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RevertAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SelectAllAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="SelectAllAction" PC="1"/>
                <MethodMetric CC="1" Class="SelectAllAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="SelectBranchAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="SelectBranchAction" PC="1"/>
                <MethodMetric CC="1" Class="SelectBranchAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SetLinkByTextFieldAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="SetLinkByTextFieldAction" PC="1"/>
                <MethodMetric CC="3" Class="SetLinkByTextFieldAction" Component="freemind.modes.mindmapmode.actions" LOC="9" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SetLinkByTextFieldAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setLink" PC="2"/>
                <MethodMetric CC="2" Class="SetLinkByTextFieldAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="SetLinkByTextFieldAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SetLinkByTextFieldAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="SetLinkByTextFieldAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="createAddLinkXmlAction" PC="2"/>
                <MethodMetric CC="1" Class="SingleNodeOperation" Component="freemind.modes.mindmapmode.actions" LOC="0" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="ToggleChildrenFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="ToggleChildrenFoldedAction" PC="1"/>
                <MethodMetric CC="1" Class="ToggleChildrenFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="ToggleFoldedAction" PC="1"/>
                <MethodMetric CC="1" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="toggleFolded" PC="0"/>
                <MethodMetric CC="1" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="toggleFolded" PC="1"/>
                <MethodMetric CC="4" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="19" Name="createFoldAction" PC="3"/>
                <MethodMetric CC="3" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="createSingleFoldAction" PC="3"/>
                <MethodMetric CC="3" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="ToggleFoldedAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="setFolded" PC="2"/>
                <MethodMetric CC="1" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="UnderlinedAction" PC="1"/>
                <MethodMetric CC="2" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="5" Name="getActionPair" PC="2"/>
                <MethodMetric CC="1" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="toggleUnderlined" PC="2"/>
                <MethodMetric CC="1" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="setUnderlined" PC="2"/>
                <MethodMetric CC="1" Class="UnderlinedAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="2" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="UndoAction" PC="1"/>
                <MethodMetric CC="1" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="UndoAction" PC="4"/>
                <MethodMetric CC="1" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="isUndoAction" PC="0"/>
                <MethodMetric CC="3" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="xmlActionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="informUndoPartner" PC="1"/>
                <MethodMetric CC="1" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="7" Name="undoDoAction" PC="1"/>
                <MethodMetric CC="2" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="4" Name="setEnabled" PC="1"/>
                <MethodMetric CC="4" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="41" Name="add" PC="1"/>
                <MethodMetric CC="2" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="startActionFrame" PC="0"/>
                <MethodMetric CC="1" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="clear" PC="0"/>
                <MethodMetric CC="2" Class="UndoAction" Component="freemind.modes.mindmapmode.actions" LOC="8" Name="print" PC="0"/>
                <MethodMetric CC="2" Class="UndoPasteHandler" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="UndoPasteHandler" PC="1"/>
                <MethodMetric CC="3" Class="UndoPasteHandler" Component="freemind.modes.mindmapmode.actions" LOC="13" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="UndoPasteHandler" Component="freemind.modes.mindmapmode.actions" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="UsePlainTextAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="UsePlainTextAction" PC="1"/>
                <MethodMetric CC="2" Class="UsePlainTextAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="apply" PC="2"/>
                <MethodMetric CC="2" Class="UseRichFormattingAction" Component="freemind.modes.mindmapmode.actions" LOC="11" Name="UseRichFormattingAction" PC="1"/>
                <MethodMetric CC="2" Class="UseRichFormattingAction" Component="freemind.modes.mindmapmode.actions" LOC="6" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="AbstractActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="4" Name="AbstractActorXml" PC="1"/>
                <MethodMetric CC="1" Class="AbstractActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getNode" PC="1"/>
                <MethodMetric CC="1" Class="AbstractActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getNodeID" PC="1"/>
                <MethodMetric CC="1" Class="AbstractActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getAttributeController" PC="0"/>
                <MethodMetric CC="1" Class="AbstractActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getAttributeRegistry" PC="0"/>
                <MethodMetric CC="1" Class="AbstractActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="createCompoundAction" PC="0"/>
                <MethodMetric CC="1" Class="AbstractXmlAction" Component="freemind.modes.mindmapmode.actions.xml" LOC="4" Name="AbstractXmlAction" PC="3"/>
                <MethodMetric CC="1" Class="AbstractXmlAction" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="AbstractXmlAction" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getShortDescription" PC="0"/>
                <MethodMetric CC="1" Class="AbstractXmlAction" Component="freemind.modes.mindmapmode.actions.xml" LOC="0" Name="xmlActionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="AbstractXmlAction" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="2" Class="AbstractXmlAction" Component="freemind.modes.mindmapmode.actions.xml" LOC="6" Name="addActor" PC="1"/>
                <MethodMetric CC="1" Class="AbstractXmlAction" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getActor" PC="0"/>
                <MethodMetric CC="2" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="10" Name="ActionFactory" PC="1"/>
                <MethodMetric CC="2" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="6" Name="registerHandler" PC="1"/>
                <MethodMetric CC="1" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="deregisterHandler" PC="1"/>
                <MethodMetric CC="6" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="21" Name="registerFilter" PC="1"/>
                <MethodMetric CC="1" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="deregisterFilter" PC="1"/>
                <MethodMetric CC="2" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="6" Name="startTransaction" PC="1"/>
                <MethodMetric CC="2" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="6" Name="endTransaction" PC="1"/>
                <MethodMetric CC="1" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="6" Name="doTransaction" PC="2"/>
                <MethodMetric CC="5" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="30" Name="executeAction" PC="1"/>
                <MethodMetric CC="1" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="registerActor" PC="2"/>
                <MethodMetric CC="1" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="deregisterActor" PC="1"/>
                <MethodMetric CC="3" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="9" Name="getActor" PC="1"/>
                <MethodMetric CC="1" Class="ActionFactory" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="registerUndoHandler" PC="1"/>
                <MethodMetric CC="1" Class="ActionFilter" Component="freemind.modes.mindmapmode.actions.xml" LOC="0" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="ActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="0" Name="executeAction" PC="1"/>
                <MethodMetric CC="1" Class="ActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="0" Name="startTransaction" PC="1"/>
                <MethodMetric CC="1" Class="ActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="0" Name="endTransaction" PC="1"/>
                <MethodMetric CC="1" Class="ActionPair" Component="freemind.modes.mindmapmode.actions.xml" LOC="4" Name="ActionPair" PC="2"/>
                <MethodMetric CC="1" Class="ActionPair" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getDoAction" PC="0"/>
                <MethodMetric CC="1" Class="ActionPair" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="getUndoAction" PC="0"/>
                <MethodMetric CC="1" Class="ActionPair" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="setDoAction" PC="1"/>
                <MethodMetric CC="1" Class="ActionPair" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="setUndoAction" PC="1"/>
                <MethodMetric CC="1" Class="ActionPair" Component="freemind.modes.mindmapmode.actions.xml" LOC="3" Name="reverse" PC="0"/>
                <MethodMetric CC="1" Class="ActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="0" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="ActorXml" Component="freemind.modes.mindmapmode.actions.xml" LOC="0" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="2" Class="PrintActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="5" Name="PrintActionHandler" PC="1"/>
                <MethodMetric CC="1" Class="PrintActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="2" Name="startTransaction" PC="1"/>
                <MethodMetric CC="1" Class="PrintActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="2" Name="endTransaction" PC="1"/>
                <MethodMetric CC="1" Class="PrintActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="4" Name="executeAction" PC="1"/>
                <MethodMetric CC="1" Class="UndoActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="5" Name="UndoActionHandler" PC="3"/>
                <MethodMetric CC="2" Class="UndoActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="8" Name="executeAction" PC="1"/>
                <MethodMetric CC="1" Class="UndoActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="2" Name="startTransaction" PC="1"/>
                <MethodMetric CC="1" Class="UndoActionHandler" Component="freemind.modes.mindmapmode.actions.xml" LOC="2" Name="endTransaction" PC="1"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="132" Name="AssignAttributeDialog" PC="1"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="10" Name="mapChanged" PC="1"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="18" Name="selectedAttributeChanged" PC="2"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="attributesChanged" PC="1"/>
                <MethodMetric CC="2" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="21" Name="attributesChanged" PC="0"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="2" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="2" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="1" Class="AssignAttributeDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="2" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="ClonedComboBoxModel" PC="1"/>
                <MethodMetric CC="1" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="addListDataListener" PC="1"/>
                <MethodMetric CC="1" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getElementAt" PC="1"/>
                <MethodMetric CC="1" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getSize" PC="0"/>
                <MethodMetric CC="1" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="removeListDataListener" PC="1"/>
                <MethodMetric CC="1" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="setSelectedItem" PC="1"/>
                <MethodMetric CC="2" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="getContentChangedEvent" PC="0"/>
                <MethodMetric CC="1" Class="ClonedComboBoxModel" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getSelectedItem" PC="0"/>
                <MethodMetric CC="3" Class="IteratingAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="17" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="4" Class="IteratingAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="12" Name="iterate" PC="1"/>
                <MethodMetric CC="2" Class="IteratingAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="performAction" PC="1"/>
                <MethodMetric CC="1" Class="IteratingAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="0" Name="performAction" PC="1"/>
                <MethodMetric CC="1" Class="IteratingAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="showEmptyStringErrorMessage" PC="0"/>
                <MethodMetric CC="1" Class="AddAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="performAction" PC="1"/>
                <MethodMetric CC="4" Class="AddAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="17" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="DeleteAttributeAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="DeleteAttributeAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="performAction" PC="1"/>
                <MethodMetric CC="3" Class="DeleteValueAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="14" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="DeleteValueAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="9" Name="performAction" PC="1"/>
                <MethodMetric CC="5" Class="ReplaceValueAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="25" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="ReplaceValueAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="10" Name="performAction" PC="1"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="applyChanges" PC="0"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="resetChanges" PC="0"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="49" Name="AttributeManagerDialog" PC="1"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="componentShown" PC="1"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="2" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="2" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="1" Class="AttributeManagerDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="2" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="ApplyAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="ApplyAction" PC="0"/>
                <MethodMetric CC="1" Class="ApplyAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="OKAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="OKAction" PC="0"/>
                <MethodMetric CC="1" Class="OKAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CancelAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="CancelAction" PC="0"/>
                <MethodMetric CC="1" Class="CancelAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ImportAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="ImportAction" PC="0"/>
                <MethodMetric CC="2" Class="ImportAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EditListAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="EditListAction" PC="0"/>
                <MethodMetric CC="1" Class="EditListAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EditListAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getRow" PC="0"/>
                <MethodMetric CC="1" Class="EditListAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="setRow" PC="1"/>
                <MethodMetric CC="1" Class="EditListAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="setListBoxModel" PC="3"/>
                <MethodMetric CC="1" Class="ClosingListener" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRegistryTable" Component="freemind.modes.mindmapmode.attributeactors" LOC="11" Name="AttributeRegistryTable" PC="1"/>
                <MethodMetric CC="3" Class="AttributeRegistryTable" Component="freemind.modes.mindmapmode.attributeactors" LOC="10" Name="setModel" PC="1"/>
                <MethodMetric CC="2" Class="AttributeRegistryTable" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="getCellEditor" PC="2"/>
                <MethodMetric CC="8" Class="AttributeRegistryTable" Component="freemind.modes.mindmapmode.attributeactors" LOC="32" Name="getCellRenderer" PC="2"/>
                <MethodMetric CC="2" Class="AttributeRegistryTable" Component="freemind.modes.mindmapmode.attributeactors" LOC="9" Name="prepareEditor" PC="3"/>
                <MethodMetric CC="1" Class="ButtonEditor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="ButtonEditor" PC="1"/>
                <MethodMetric CC="1" Class="ButtonEditor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="ButtonEditor" PC="1"/>
                <MethodMetric CC="1" Class="ButtonEditor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="getTableCellEditorComponent" PC="5"/>
                <MethodMetric CC="1" Class="ButtonEditor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getCellEditorValue" PC="0"/>
                <MethodMetric CC="1" Class="ButtonEditor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="setAction" PC="1"/>
                <MethodMetric CC="1" Class="ButtonRenderer" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="ButtonRenderer" PC="2"/>
                <MethodMetric CC="1" Class="ButtonRenderer" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getTableCellRendererComponent" PC="6"/>
                <MethodMetric CC="1" Class="ButtonRenderer" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="ToggleAllAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="ToggleAllAction" PC="0"/>
                <MethodMetric CC="2" Class="ToggleAllAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="AttributesListener" Component="freemind.modes.mindmapmode.attributeactors" LOC="0" Name="attributesChanged" PC="1"/>
                <MethodMetric CC="1" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="41" Name="ImportAttributesDialog" PC="2"/>
                <MethodMetric CC="1" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="15" Name="show" PC="0"/>
                <MethodMetric CC="7" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="29" Name="performImport" PC="1"/>
                <MethodMetric CC="4" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="24" Name="createMapSubTrees" PC="1"/>
                <MethodMetric CC="3" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="11" Name="createAttributeSubTrees" PC="2"/>
                <MethodMetric CC="3" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="12" Name="createValueSubTrees" PC="3"/>
                <MethodMetric CC="3" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="0" Name="valueChanged" PC="1"/>
                <MethodMetric CC="8" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="32" Name="setParentSelectionType" PC="2"/>
                <MethodMetric CC="3" Class="ImportAttributesDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="10" Name="setSelectionType" PC="2"/>
                <MethodMetric CC="1" Class="TreeNodeInfo" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="TreeNodeInfo" PC="1"/>
                <MethodMetric CC="1" Class="TreeNodeInfo" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getSelected" PC="0"/>
                <MethodMetric CC="1" Class="TreeNodeInfo" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="setSelected" PC="1"/>
                <MethodMetric CC="1" Class="TreeNodeInfo" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getInfo" PC="0"/>
                <MethodMetric CC="1" Class="TreeNodeInfo" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTreeNodeInfo" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="AttributeTreeNodeInfo" PC="2"/>
                <MethodMetric CC="1" Class="AttributeTreeNodeInfo" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="isRestricted" PC="0"/>
                <MethodMetric CC="1" Class="MyRenderer" Component="freemind.modes.mindmapmode.attributeactors" LOC="2" Name="MyRenderer" PC="0"/>
                <MethodMetric CC="4" Class="MyRenderer" Component="freemind.modes.mindmapmode.attributeactors" LOC="17" Name="getTreeCellRendererComponent" PC="7"/>
                <MethodMetric CC="1" Class="InsertAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="InsertAttributeActor" PC="1"/>
                <MethodMetric CC="1" Class="InsertAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="createAction" PC="4"/>
                <MethodMetric CC="1" Class="InsertAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="createActionPair" PC="4"/>
                <MethodMetric CC="2" Class="InsertAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="InsertAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="4"/>
                <MethodMetric CC="1" Class="InsertAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="showDialog" PC="6"/>
                <MethodMetric CC="1" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="updateButtons" PC="0"/>
                <MethodMetric CC="1" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="11" Name="getCurrentText" PC="0"/>
                <MethodMetric CC="1" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="selectText" PC="0"/>
                <MethodMetric CC="6" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="89" Name="ListDialog" PC="6"/>
                <MethodMetric CC="4" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="17" Name="getScrollableUnitIncrement" PC="3"/>
                <MethodMetric CC="2" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="3" Class="ListDialog" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="getIndexOf" PC="1"/>
                <MethodMetric CC="1" Class="TextChangeListener" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="update" PC="0"/>
                <MethodMetric CC="1" Class="TextChangeListener" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="insertUpdate" PC="1"/>
                <MethodMetric CC="1" Class="TextChangeListener" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="removeUpdate" PC="1"/>
                <MethodMetric CC="1" Class="TextChangeListener" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="changedUpdate" PC="1"/>
                <MethodMetric CC="2" Class="ListSelectionChangeListener" Component="freemind.modes.mindmapmode.attributeactors" LOC="9" Name="valueChanged" PC="1"/>
                <MethodMetric CC="1" Class="AddAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="RenameAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="DeleteAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CloseAction" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="16" Name="MindMapModeAttributeController" PC="1"/>
                <MethodMetric CC="7" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="41" Name="performSetValueAt" PC="4"/>
                <MethodMetric CC="4" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="23" Name="performInsertRow" PC="4"/>
                <MethodMetric CC="1" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="performRemoveRow" PC="2"/>
                <MethodMetric CC="2" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="performSetColumnWidth" PC="3"/>
                <MethodMetric CC="1" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="performRemoveAttributeValue" PC="2"/>
                <MethodMetric CC="1" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="performReplaceAttributeValue" PC="3"/>
                <MethodMetric CC="2" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="performSetFontSize" PC="2"/>
                <MethodMetric CC="2" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="performSetVisibility" PC="2"/>
                <MethodMetric CC="3" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="11" Name="performSetRestriction" PC="2"/>
                <MethodMetric CC="3" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="16" Name="performReplaceAtributeName" PC="2"/>
                <MethodMetric CC="1" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="performRemoveAttribute" PC="1"/>
                <MethodMetric CC="2" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="10" Name="performRegistryAttribute" PC="1"/>
                <MethodMetric CC="3" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="16" Name="performRegistryAttributeValue" PC="2"/>
                <MethodMetric CC="1" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getAttributeRegistry" PC="0"/>
                <MethodMetric CC="3" Class="MindMapModeAttributeController" Component="freemind.modes.mindmapmode.attributeactors" LOC="11" Name="performRegistrySubtreeAttributes" PC="1"/>
                <MethodMetric CC="1" Class="Visitor" Component="freemind.modes.mindmapmode.attributeactors" LOC="0" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRenamer" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="AttributeRenamer" PC="2"/>
                <MethodMetric CC="3" Class="AttributeRenamer" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="AttributeChanger" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="AttributeChanger" PC="3"/>
                <MethodMetric CC="3" Class="AttributeChanger" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="AttributeRemover" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="AttributeRemover" PC="1"/>
                <MethodMetric CC="3" Class="AttributeRemover" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="AttributeValueRemover" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="AttributeValueRemover" PC="2"/>
                <MethodMetric CC="3" Class="AttributeValueRemover" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="Iterator" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="Iterator" PC="1"/>
                <MethodMetric CC="2" Class="Iterator" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="iterate" PC="1"/>
                <MethodMetric CC="1" Class="RegistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="RegistryAttributeActor" PC="1"/>
                <MethodMetric CC="1" Class="RegistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createAction" PC="1"/>
                <MethodMetric CC="1" Class="RegistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="createActionPair" PC="1"/>
                <MethodMetric CC="2" Class="RegistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RegistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RegistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="RegistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="RegistryAttributeValueActor" PC="1"/>
                <MethodMetric CC="1" Class="RegistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="createAction" PC="2"/>
                <MethodMetric CC="1" Class="RegistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="createActionPair" PC="2"/>
                <MethodMetric CC="2" Class="RegistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RegistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="act" PC="2"/>
                <MethodMetric CC="1" Class="RegistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="RemoveAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="RemoveAttributeActor" PC="1"/>
                <MethodMetric CC="1" Class="RemoveAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="createAction" PC="2"/>
                <MethodMetric CC="1" Class="RemoveAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="createActionPair" PC="2"/>
                <MethodMetric CC="2" Class="RemoveAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="RemoveAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="act" PC="2"/>
                <MethodMetric CC="1" Class="RemoveAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="ReplaceAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="ReplaceAttributeValueActor" PC="1"/>
                <MethodMetric CC="1" Class="ReplaceAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="createAction" PC="3"/>
                <MethodMetric CC="1" Class="ReplaceAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="createActionPair" PC="3"/>
                <MethodMetric CC="2" Class="ReplaceAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="ReplaceAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="act" PC="3"/>
                <MethodMetric CC="1" Class="ReplaceAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SetAttributeColumnWidthActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="SetAttributeColumnWidthActor" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeColumnWidthActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="createAction" PC="3"/>
                <MethodMetric CC="1" Class="SetAttributeColumnWidthActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createActionPair" PC="3"/>
                <MethodMetric CC="2" Class="SetAttributeColumnWidthActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeColumnWidthActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="act" PC="3"/>
                <MethodMetric CC="1" Class="SetAttributeColumnWidthActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SetAttributeFontSizeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="SetAttributeFontSizeActor" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeFontSizeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createAction" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeFontSizeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createActionPair" PC="1"/>
                <MethodMetric CC="2" Class="SetAttributeFontSizeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeFontSizeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeFontSizeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SetAttributeNameActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="SetAttributeNameActor" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeNameActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="createAction" PC="3"/>
                <MethodMetric CC="1" Class="SetAttributeNameActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createActionPair" PC="3"/>
                <MethodMetric CC="2" Class="SetAttributeNameActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeNameActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="act" PC="3"/>
                <MethodMetric CC="1" Class="SetAttributeNameActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SetAttributeRestrictedActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="SetAttributeRestrictedActor" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeRestrictedActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="createAction" PC="2"/>
                <MethodMetric CC="2" Class="SetAttributeRestrictedActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="11" Name="createActionPair" PC="2"/>
                <MethodMetric CC="2" Class="SetAttributeRestrictedActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="2" Class="SetAttributeRestrictedActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="act" PC="2"/>
                <MethodMetric CC="1" Class="SetAttributeRestrictedActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SetAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="SetAttributeValueActor" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="7" Name="createAction" PC="3"/>
                <MethodMetric CC="1" Class="SetAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createActionPair" PC="3"/>
                <MethodMetric CC="2" Class="SetAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="8" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="act" PC="3"/>
                <MethodMetric CC="1" Class="SetAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="SetAttributeVisibleActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="SetAttributeVisibleActor" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeVisibleActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="createAction" PC="2"/>
                <MethodMetric CC="1" Class="SetAttributeVisibleActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createActionPair" PC="2"/>
                <MethodMetric CC="2" Class="SetAttributeVisibleActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="SetAttributeVisibleActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="act" PC="2"/>
                <MethodMetric CC="1" Class="SetAttributeVisibleActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="UnregistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="UnregistryAttributeActor" PC="1"/>
                <MethodMetric CC="1" Class="UnregistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="5" Name="createAction" PC="1"/>
                <MethodMetric CC="1" Class="UnregistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="createActionPair" PC="1"/>
                <MethodMetric CC="2" Class="UnregistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="12" Name="createUndoAction" PC="1"/>
                <MethodMetric CC="2" Class="UnregistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="UnregistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="UnregistryAttributeActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="UnregistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="UnregistryAttributeValueActor" PC="1"/>
                <MethodMetric CC="1" Class="UnregistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="createAction" PC="2"/>
                <MethodMetric CC="1" Class="UnregistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="4" Name="createActionPair" PC="2"/>
                <MethodMetric CC="2" Class="UnregistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="6" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="UnregistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="act" PC="2"/>
                <MethodMetric CC="1" Class="UnregistryAttributeValueActor" Component="freemind.modes.mindmapmode.attributeactors" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="IntegerComboProperty" Component="freemind.modes.mindmapmode.dialogs" LOC="3" Name="IntegerComboProperty" PC="4"/>
                <MethodMetric CC="4" Class="IntegerComboProperty" Component="freemind.modes.mindmapmode.dialogs" LOC="26" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="6" Name="StylePatternFrame" PC="3"/>
                <MethodMetric CC="2" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="15" Name="init" PC="0"/>
                <MethodMetric CC="4" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="18" Name="addListeners" PC="0"/>
                <MethodMetric CC="2" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="6" Name="propertyChange" PC="1"/>
                <MethodMetric CC="5" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="105" Name="getControls" PC="0"/>
                <MethodMetric CC="2" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="8" Name="getPatternNames" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="3" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="25" Name="setPattern" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="3" Name="setPatternControls" PC="4"/>
                <MethodMetric CC="3" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="14" Name="setPatternControls" PC="5"/>
                <MethodMetric CC="4" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="13" Name="transformEdgeWidth" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="5" Name="transformStringToWidth" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="10" Name="getEdgeWidthTransformation" PC="0"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="4" Name="getResultPattern" PC="0"/>
                <MethodMetric CC="2" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="20" Name="getResultPattern" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="4" Name="getPatternResult" PC="3"/>
                <MethodMetric CC="4" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="14" Name="getPatternResult" PC="4"/>
                <MethodMetric CC="2" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="8" Name="propertyChange" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFrame" Component="freemind.modes.mindmapmode.dialogs" LOC="5" Name="setPatternList" PC="1"/>
                <MethodMetric CC="1" Class="StylePatternFrameType" Component="freemind.modes.mindmapmode.dialogs" LOC="2" Name="StylePatternFrameType" PC="0"/>
                <MethodMetric CC="1" Class="ValueTransformator" Component="freemind.modes.mindmapmode.dialogs" LOC="0" Name="transform" PC="1"/>
                <MethodMetric CC="1" Class="IdentityTransformer" Component="freemind.modes.mindmapmode.dialogs" LOC="3" Name="transform" PC="1"/>
                <MethodMetric CC="1" Class="EdgeWidthTransformer" Component="freemind.modes.mindmapmode.dialogs" LOC="3" Name="transform" PC="1"/>
                <MethodMetric CC="1" Class="EdgeWidthBackTransformer" Component="freemind.modes.mindmapmode.dialogs" LOC="3" Name="transform" PC="1"/>
                <MethodMetric CC="4" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="12" Name="EncryptedMindMapNode" PC="3"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="4" Name="setMap" PC="1"/>
                <MethodMetric CC="6" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="38" Name="decrypt" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="paste" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="4" Name="getNodeFromXml" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="getMindMapMapModel" PC="0"/>
                <MethodMetric CC="6" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="22" Name="checkPassword" PC="1"/>
                <MethodMetric CC="4" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="9" Name="equals" PC="2"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="4" Name="encrypt" PC="0"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="6" Name="getChildCount" PC="0"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="6" Name="childrenFolded" PC="0"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="6" Name="childrenUnfolded" PC="0"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="6" Name="hasChildren" PC="0"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="10" Name="updateIcon" PC="0"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="setPassword" PC="1"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="6" Name="isFolded" PC="0"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="8" Name="setFolded" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="5" Name="setAdditionalInfo" PC="1"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="6" Name="getAdditionalInfo" PC="0"/>
                <MethodMetric CC="4" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="27" Name="save" PC="4"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="6" Name="generateEncryptedContent" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="11" Name="encryptXml" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="5" Name="decryptXml" PC="2"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="setShuttingDown" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="4" Name="setAccessible" PC="1"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="isAccessible" PC="0"/>
                <MethodMetric CC="2" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="8" Name="insert" PC="2"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="isWriteable" PC="0"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="isStoringEncryptedContent" PC="0"/>
                <MethodMetric CC="1" Class="EncryptedMindMapNode" Component="freemind.modes.mindmapmode" LOC="3" Name="setStoringEncryptedContent" PC="1"/>
                <MethodMetric CC="1" Class="JAutoScrollBarPane" Component="freemind.modes.mindmapmode" LOC="3" Name="JAutoScrollBarPane" PC="1"/>
                <MethodMetric CC="5" Class="JAutoScrollBarPane" Component="freemind.modes.mindmapmode" LOC="23" Name="doLayout" PC="0"/>
                <MethodMetric CC="2" Class="JAutoScrollBarPane" Component="freemind.modes.mindmapmode" LOC="6" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="1" Class="MindMapArrowLinkModel" Component="freemind.modes.mindmapmode" LOC="3" Name="MindMapArrowLinkModel" PC="3"/>
                <MethodMetric CC="1" Class="MindMapArrowLinkModel" Component="freemind.modes.mindmapmode" LOC="3" Name="clone" PC="0"/>
                <MethodMetric CC="1" Class="MindMapArrowLinkModel" Component="freemind.modes.mindmapmode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="4" Class="MindMapArrowLinkModel" Component="freemind.modes.mindmapmode" LOC="22" Name="changeInclination" PC="5"/>
                <MethodMetric CC="5" Class="MindMapArrowLinkModel" Component="freemind.modes.mindmapmode" LOC="19" Name="changeInclination" PC="4"/>
                <MethodMetric CC="1" Class="MindMapCloudModel" Component="freemind.modes.mindmapmode" LOC="3" Name="MindMapCloudModel" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="apply" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="9" Name="MindMapController" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="25" Name="init" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="70" Name="createStandardActions" PC="0"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="28" Name="loadPatternActions" PC="0"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="12" Name="getPatternReader" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="isUndoAction" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="14" Name="load" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="loadPatterns" PC="1"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="12" Name="createPatterns" PC="1"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="33" Name="startupController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="edit" PC="3"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="16" Name="shutdownController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="newModel" PC="1"/>
                <MethodMetric CC="6" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="26" Name="createIconActions" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="accept" PC="2"/>
                <MethodMetric CC="4" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="18" Name="createNodeHookActions" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getFileFilter" PC="0"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="7" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="updateToolbar" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setNewNodeCreator" PC="1"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="6" Name="newNode" PC="2"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="19" Name="updateMenus" PC="1"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="9" Name="addIconsToMenu" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="6" Name="createPatternSubMenu" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="11" Name="updateMenusFromXml" PC="1"/>
                <MethodMetric CC="10" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="47" Name="processMenuCategory" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getPopupMenu" PC="0"/>
                <MethodMetric CC="5" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="49" Name="getPopupForModel" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getMindMapMapModel" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getModeToolBar" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getToolBar" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getLeftToolBar" PC="0"/>
                <MethodMetric CC="6" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="80" Name="setAllActions" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setBold" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setItalic" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setCloud" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setCloudColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setFontSize" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="6" Name="increaseFontSize" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setFontFamily" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setNodeColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setNodeBackgroundColor" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="8" Name="blendNodeColor" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setEdgeColor" PC="2"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="9" Name="applyPattern" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="8" Name="applyPattern" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="addIcon" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="removeAllIcons" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="removeLastIcon" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="addLink" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="removeReference" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setArrowLinkColor" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="changeArrowsOfArrowLink" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setArrowLinkEndPoints" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setLink" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="edit" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setNodeText" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setEdgeWidth" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setEdgeStyle" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setNodeStyle" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="10" Name="copy" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="cut" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="cut" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="paste" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="6" Name="paste" PC="4"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="paste" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="addNew" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="addNewNode" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="deleteNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="toggleFolded" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setFolded" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="moveNodes" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="joinNodes" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="setLinkByFileChooser" PC="0"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="13" Name="setImageByFileChooser" PC="0"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="15" Name="getLinkByFileChooser" PC="1"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="10" Name="loadURL" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="addHook" PC="4"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="removeHook" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="moveNodePosition" PC="4"/>
                <MethodMetric CC="4" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="15" Name="plainClick" PC="1"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="6" Name="getHookFactory" PC="0"/>
                <MethodMetric CC="4" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="17" Name="createNodeHook" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="10" Name="invokeHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getActionFactory" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="5" Name="saveHTML" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="saveHTML" PC="2"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="18" Name="splitNode" PC="3"/>
                <MethodMetric CC="9" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="56" Name="getContent" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="updateNode" PC="1"/>
                <MethodMetric CC="6" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="12" Name="recursiveCallUpdateHooks" PC="2"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="7" Name="doubleClick" PC="1"/>
                <MethodMetric CC="7" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="33" Name="extendSelection" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="registerMouseWheelEventHandler" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="deRegisterMouseWheelEventHandler" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getRegisteredMouseWheelEventHandler" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="marshall" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="unMarshall" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="storeDialogPositions" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="decorateDialog" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getAttributeController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getAttributeTablePopupMenu" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="createXMLElement" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="5" Name="setAttribute" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="removeAttribute" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="7" Name="addAttribute" PC="2"/>
                <MethodMetric CC="5" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="20" Name="editAttribute" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="insertNodeInto" PC="3"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="6" Name="removeNodeFromParent" PC="1"/>
                <MethodMetric CC="3" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="10" Name="nodeStyleChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="repaintMap" PC="0"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="22" Name="clearNodeContents" PC="1"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="11" Name="createEditNoteToNodeAction" PC="2"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="11" Name="setNoteText" PC="2"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="registerPlugin" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="deregisterPlugin" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="getPlugins" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="4" Name="getClipboardContents" PC="0"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="7" Name="getClipboard" PC="0"/>
                <MethodMetric CC="2" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="7" Name="setClipboardContents" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="showThisMap" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="5" Name="mapSourceChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="setNodeHookFactory" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="6" Name="createModeControllerHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="obtainFocusForSelected" PC="0"/>
                <MethodMetric CC="1" Class="MindMapController" Component="freemind.modes.mindmapmode" LOC="3" Name="doTransaction" PC="2"/>
                <MethodMetric CC="1" Class="MapSourceChangeDialog" Component="freemind.modes.mindmapmode" LOC="2" Name="MapSourceChangeDialog" PC="0"/>
                <MethodMetric CC="2" Class="MapSourceChangeDialog" Component="freemind.modes.mindmapmode" LOC="9" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="MapSourceChangeDialog" Component="freemind.modes.mindmapmode" LOC="3" Name="getReturnValue" PC="0"/>
                <MethodMetric CC="1" Class="AssignAttributesAction" Component="freemind.modes.mindmapmode" LOC="3" Name="AssignAttributesAction" PC="0"/>
                <MethodMetric CC="2" Class="AssignAttributesAction" Component="freemind.modes.mindmapmode" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NewNodeCreator" Component="freemind.modes.mindmapmode" LOC="0" Name="createNode" PC="2"/>
                <MethodMetric CC="1" Class="DefaultMindMapNodeCreator" Component="freemind.modes.mindmapmode" LOC="3" Name="createNode" PC="2"/>
                <MethodMetric CC="1" Class="ExportToHTMLAction" Component="freemind.modes.mindmapmode" LOC="4" Name="ExportToHTMLAction" PC="1"/>
                <MethodMetric CC="2" Class="ExportToHTMLAction" Component="freemind.modes.mindmapmode" LOC="14" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ExportBranchToHTMLAction" Component="freemind.modes.mindmapmode" LOC="4" Name="ExportBranchToHTMLAction" PC="1"/>
                <MethodMetric CC="2" Class="ExportBranchToHTMLAction" Component="freemind.modes.mindmapmode" LOC="14" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ImportBranchAction" Component="freemind.modes.mindmapmode" LOC="3" Name="ImportBranchAction" PC="0"/>
                <MethodMetric CC="3" Class="ImportBranchAction" Component="freemind.modes.mindmapmode" LOC="18" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ImportLinkedBranchAction" Component="freemind.modes.mindmapmode" LOC="3" Name="ImportLinkedBranchAction" PC="0"/>
                <MethodMetric CC="2" Class="ImportLinkedBranchAction" Component="freemind.modes.mindmapmode" LOC="25" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ImportLinkedBranchWithoutRootAction" Component="freemind.modes.mindmapmode" LOC="3" Name="ImportLinkedBranchWithoutRootAction" PC="0"/>
                <MethodMetric CC="3" Class="ImportLinkedBranchWithoutRootAction" Component="freemind.modes.mindmapmode" LOC="27" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="4" Class="MindMapFilter" Component="freemind.modes.mindmapmode" LOC="13" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="MindMapFilter" Component="freemind.modes.mindmapmode" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="SetLinkByFileChooserAction" Component="freemind.modes.mindmapmode" LOC="3" Name="SetLinkByFileChooserAction" PC="0"/>
                <MethodMetric CC="1" Class="SetLinkByFileChooserAction" Component="freemind.modes.mindmapmode" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SetImageByFileChooserAction" Component="freemind.modes.mindmapmode" LOC="3" Name="SetImageByFileChooserAction" PC="0"/>
                <MethodMetric CC="1" Class="SetImageByFileChooserAction" Component="freemind.modes.mindmapmode" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="LinkActionBase" Component="freemind.modes.mindmapmode" LOC="3" Name="LinkActionBase" PC="1"/>
                <MethodMetric CC="3" Class="LinkActionBase" Component="freemind.modes.mindmapmode" LOC="7" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="FollowLinkAction" Component="freemind.modes.mindmapmode" LOC="3" Name="FollowLinkAction" PC="0"/>
                <MethodMetric CC="3" Class="FollowLinkAction" Component="freemind.modes.mindmapmode" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="OpenLinkDirectoryAction" Component="freemind.modes.mindmapmode" LOC="3" Name="OpenLinkDirectoryAction" PC="0"/>
                <MethodMetric CC="4" Class="OpenLinkDirectoryAction" Component="freemind.modes.mindmapmode" LOC="15" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EditLongAction" Component="freemind.modes.mindmapmode" LOC="3" Name="EditLongAction" PC="0"/>
                <MethodMetric CC="1" Class="EditLongAction" Component="freemind.modes.mindmapmode" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MindMapEdgeModel" Component="freemind.modes.mindmapmode" LOC="3" Name="MindMapEdgeModel" PC="2"/>
                <MethodMetric CC="1" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="6" Name="MindMapHTMLWriter" PC="1"/>
                <MethodMetric CC="8" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="0" Name="convertSpecialChar" PC="1"/>
                <MethodMetric CC="9" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="0" Name="saveHTML_escapeUnicodeAndSpecialCharacters" PC="1"/>
                <MethodMetric CC="2" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="13" Name="saveHTML" PC="1"/>
                <MethodMetric CC="2" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="18" Name="saveHTML" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="9" Name="writeBodyWithFolding" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="3" Name="writeJavaScript" PC="0"/>
                <MethodMetric CC="2" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="9" Name="writeStyle" PC="0"/>
                <MethodMetric CC="29" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="106" Name="saveHTML" PC="6"/>
                <MethodMetric CC="7" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="24" Name="fontStyle" PC="1"/>
                <MethodMetric CC="3" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="15" Name="writeModelContent" PC="1"/>
                <MethodMetric CC="2" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="5" Name="writeIcons" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="4" Name="writeFoldingButtons" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="3" Name="isHeading" PC="2"/>
                <MethodMetric CC="1" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="3" Name="hasHtml" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHTMLWriter" Component="freemind.modes.mindmapmode" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="MindMapMapModel" PC="2"/>
                <MethodMetric CC="2" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="14" Name="MindMapMapModel" PC="3"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="getRestorable" PC="0"/>
                <MethodMetric CC="2" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="9" Name="changeNode" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="13" Name="getAsHTML" PC="1"/>
                <MethodMetric CC="2" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="15" Name="getAsPlainText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="13" Name="saveTXT" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="13" Name="getAsRTF" PC="1"/>
                <MethodMetric CC="4" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="27" Name="saveRTF" PC="2"/>
                <MethodMetric CC="2" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="10" Name="save" PC="1"/>
                <MethodMetric CC="5" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="30" Name="saveInternal" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="getXml" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="10" Name="getXml" PC="3"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="getXml" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="getFilteredXml" PC="1"/>
                <MethodMetric CC="3" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="11" Name="tryToLock" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="5" Name="load" PC="1"/>
                <MethodMetric CC="5" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="33" Name="load" PC="1"/>
                <MethodMetric CC="2" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="8" Name="destroy" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="loadTree" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="3" Name="loadTree" PC="1"/>
                <MethodMetric CC="9" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="48" Name="loadTree" PC="2"/>
                <MethodMetric CC="3" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="18" Name="readFileStart" PC="2"/>
                <MethodMetric CC="5" Class="MindMapMapModel" Component="freemind.modes.mindmapmode" LOC="24" Name="scheduleTimerForAutomaticSaving" PC="0"/>
                <MethodMetric CC="1" Class="StringReaderCreator" Component="freemind.modes.mindmapmode" LOC="3" Name="StringReaderCreator" PC="1"/>
                <MethodMetric CC="1" Class="StringReaderCreator" Component="freemind.modes.mindmapmode" LOC="3" Name="createReader" PC="0"/>
                <MethodMetric CC="1" Class="StringReaderCreator" Component="freemind.modes.mindmapmode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="FileReaderCreator" Component="freemind.modes.mindmapmode" LOC="3" Name="FileReaderCreator" PC="1"/>
                <MethodMetric CC="1" Class="FileReaderCreator" Component="freemind.modes.mindmapmode" LOC="3" Name="createReader" PC="0"/>
                <MethodMetric CC="1" Class="FileReaderCreator" Component="freemind.modes.mindmapmode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="ReaderCreator" Component="freemind.modes.mindmapmode" LOC="0" Name="createReader" PC="0"/>
                <MethodMetric CC="1" Class="LockManager" Component="freemind.modes.mindmapmode" LOC="3" Name="getSemaphoreFile" PC="1"/>
                <MethodMetric CC="1" Class="LockManager" Component="freemind.modes.mindmapmode" LOC="5" Name="popLockingUserOfOldLock" PC="0"/>
                <MethodMetric CC="3" Class="LockManager" Component="freemind.modes.mindmapmode" LOC="23" Name="writeSemaphoreFile" PC="1"/>
                <MethodMetric CC="4" Class="LockManager" Component="freemind.modes.mindmapmode" LOC="28" Name="tryToLock" PC="1"/>
                <MethodMetric CC="2" Class="LockManager" Component="freemind.modes.mindmapmode" LOC="6" Name="releaseLock" PC="0"/>
                <MethodMetric CC="2" Class="LockManager" Component="freemind.modes.mindmapmode" LOC="6" Name="releaseTimer" PC="0"/>
                <MethodMetric CC="2" Class="LockManager" Component="freemind.modes.mindmapmode" LOC="13" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="DummyLockManager" Component="freemind.modes.mindmapmode" LOC="3" Name="popLockingUserOfOldLock" PC="0"/>
                <MethodMetric CC="1" Class="DummyLockManager" Component="freemind.modes.mindmapmode" LOC="3" Name="tryToLock" PC="1"/>
                <MethodMetric CC="1" Class="DummyLockManager" Component="freemind.modes.mindmapmode" LOC="2" Name="releaseLock" PC="0"/>
                <MethodMetric CC="1" Class="DummyLockManager" Component="freemind.modes.mindmapmode" LOC="2" Name="releaseTimer" PC="0"/>
                <MethodMetric CC="1" Class="DummyLockManager" Component="freemind.modes.mindmapmode" LOC="2" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="DoAutomaticSave" Component="freemind.modes.mindmapmode" LOC="8" Name="DoAutomaticSave" PC="4"/>
                <MethodMetric CC="5" Class="DoAutomaticSave" Component="freemind.modes.mindmapmode" LOC="43" Name="run" PC="0"/>
                <MethodMetric CC="3" Class="DoAutomaticSave" Component="freemind.modes.mindmapmode" LOC="24" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="2" Name="MindMapMode" PC="0"/>
                <MethodMetric CC="2" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="7" Name="init" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="6" Name="createModeController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="8" Name="activate" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="3" Name="restore" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMode" Component="freemind.modes.mindmapmode" LOC="3" Name="getDefaultModeController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="3" Name="MindMapNodeModel" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="5" Name="MindMapNodeModel" PC="3"/>
                <MethodMetric CC="1" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="3" Name="getPlainTextContent" PC="0"/>
                <MethodMetric CC="5" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="23" Name="saveTXT" PC="2"/>
                <MethodMetric CC="3" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="11" Name="saveChildrenText" PC="2"/>
                <MethodMetric CC="3" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="8" Name="collectColors" PC="1"/>
                <MethodMetric CC="7" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="0" Name="saveRFT_escapeUnicodeAndSpecialCharacters" PC="1"/>
                <MethodMetric CC="9" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="48" Name="saveRTF" PC="3"/>
                <MethodMetric CC="3" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="11" Name="saveChildrenRTF" PC="3"/>
                <MethodMetric CC="1" Class="MindMapNodeModel" Component="freemind.modes.mindmapmode" LOC="3" Name="isWriteable" PC="0"/>
                <MethodMetric CC="2" Class="MindMapPopupMenu" Component="freemind.modes.mindmapmode" LOC="7" Name="MindMapPopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="MindMapPopupMenu" Component="freemind.modes.mindmapmode" LOC="6" Name="update" PC="1"/>
                <MethodMetric CC="7" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="58" Name="MindMapToolBar" PC="1"/>
                <MethodMetric CC="3" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="11" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="3" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="9" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="2" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="5" Name="itemStateChanged" PC="1"/>
                <MethodMetric CC="2" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="7" Name="setZoomByItem" PC="1"/>
                <MethodMetric CC="1" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="2" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="15" Name="update" PC="1"/>
                <MethodMetric CC="1" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="5" Name="selectFontSize" PC="1"/>
                <MethodMetric CC="1" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="3" Name="getLeftToolBar" PC="0"/>
                <MethodMetric CC="2" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="10" Name="selectFontName" PC="1"/>
                <MethodMetric CC="1" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="4" Name="setAllActions" PC="1"/>
                <MethodMetric CC="3" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="11" Name="setZoom" PC="1"/>
                <MethodMetric CC="1" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="3" Name="getItemForZoom" PC="1"/>
                <MethodMetric CC="1" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="3" Name="startup" PC="0"/>
                <MethodMetric CC="1" Class="MindMapToolBar" Component="freemind.modes.mindmapmode" LOC="3" Name="shutdown" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindComboBox" Component="freemind.modes.mindmapmode" LOC="3" Name="FreeMindComboBox" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindComboBox" Component="freemind.modes.mindmapmode" LOC="3" Name="FreeMindComboBox" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindComboBox" Component="freemind.modes.mindmapmode" LOC="3" Name="getMaximumSize" PC="0"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="4" Name="MindMapXMLElement" PC="1"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="4" Name="MindMapXMLElement" PC="3"/>
                <MethodMetric CC="2" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="5" Name="init" PC="0"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="3" Name="createAnotherElement" PC="0"/>
                <MethodMetric CC="2" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="19" Name="createNodeAdapter" PC="2"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="3" Name="createEdgeAdapter" PC="2"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="3" Name="createCloudAdapter" PC="2"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="3" Name="createArrowLinkAdapter" PC="3"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="3" Name="createArrowLinkTarget" PC="3"/>
                <MethodMetric CC="1" Class="MindMapXMLElement" Component="freemind.modes.mindmapmode" LOC="7" Name="createEncryptedNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="MindMapHookAdapter" PC="0"/>
                <MethodMetric CC="1" Class="MindMapHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="2" Class="MindMapHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="10" Name="addAccelerator" PC="2"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="5" Name="MindMapHookFactory" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="getPossibleNodeHooks" PC="0"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="getPossibleModeControllerHooks" PC="0"/>
                <MethodMetric CC="5" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="25" Name="searchFor" PC="2"/>
                <MethodMetric CC="7" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="40" Name="actualizePlugins" PC="0"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="4" Name="createModeControllerHook" PC="1"/>
                <MethodMetric CC="2" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="18" Name="createJavaHook" PC="2"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="5" Name="createNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="11" Name="decorateHook" PC="3"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="getPluginBaseObject" PC="0"/>
                <MethodMetric CC="5" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="22" Name="decorateAction" PC="2"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="4" Name="getHookMenuPositions" PC="1"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="4" Name="getInstanciationMethod" PC="1"/>
                <MethodMetric CC="5" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="30" Name="getRegistrations" PC="0"/>
                <MethodMetric CC="1" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="5" Name="getPluginBaseClass" PC="1"/>
                <MethodMetric CC="2" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="8" Name="getPluginBaseClass" PC="1"/>
                <MethodMetric CC="2" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="5" Name="getHookDescriptor" PC="1"/>
                <MethodMetric CC="2" Class="MindMapHookFactory" Component="freemind.modes.mindmapmode.hooks" LOC="9" Name="getMenuItem" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNodeHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="MindMapNodeHookAdapter" PC="0"/>
                <MethodMetric CC="1" Class="MindMapNodeHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="PermanentMindMapNodeHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="PermanentMindMapNodeHookAdapter" PC="0"/>
                <MethodMetric CC="1" Class="PermanentMindMapNodeHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="PermanentMindMapNodeHookAdapter" Component="freemind.modes.mindmapmode.hooks" LOC="5" Name="propagate" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMouseMotionManager" Component="freemind.modes.mindmapmode.listeners" LOC="4" Name="MindMapMouseMotionManager" PC="1"/>
                <MethodMetric CC="3" Class="MindMapMouseMotionManager" Component="freemind.modes.mindmapmode.listeners" LOC="16" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="3" Class="MindMapMouseMotionManager" Component="freemind.modes.mindmapmode.listeners" LOC="14" Name="mousePressed" PC="1"/>
                <MethodMetric CC="2" Class="MindMapMouseMotionManager" Component="freemind.modes.mindmapmode.listeners" LOC="14" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="3" Name="MindMapNodeDropListener" PC="1"/>
                <MethodMetric CC="3" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="9" Name="isDragAcceptable" PC="1"/>
                <MethodMetric CC="2" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="6" Name="isDropAcceptable" PC="1"/>
                <MethodMetric CC="15" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="81" Name="drop" PC="1"/>
                <MethodMetric CC="2" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="8" Name="dragEnter" PC="1"/>
                <MethodMetric CC="2" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="10" Name="dragOver" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="5" Name="dragExit" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="2" Name="dragScroll" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeDropListener" Component="freemind.modes.mindmapmode.listeners" LOC="2" Name="dropActionChanged" PC="1"/>
                <MethodMetric CC="2" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="4" Name="MindMapNodeMotionListener" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="2" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="6" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="52" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="6" Name="getVGap" PC="2"/>
                <MethodMetric CC="2" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="7" Name="getHGap" PC="3"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="6" Name="getNodeShiftY" PC="3"/>
                <MethodMetric CC="4" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="16" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="3" Name="getNodeView" PC="1"/>
                <MethodMetric CC="3" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="8" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="2" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="7" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="3" Name="stopDrag" PC="0"/>
                <MethodMetric CC="3" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="17" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="5" Name="resetPositions" PC="1"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="3" Name="isActive" PC="0"/>
                <MethodMetric CC="2" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="11" Name="setDragStartingPoint" PC="2"/>
                <MethodMetric CC="1" Class="MindMapNodeMotionListener" Component="freemind.modes.mindmapmode.listeners" LOC="3" Name="getDragStartingPoint" PC="0"/>
                <MethodMetric CC="1" Class="SchemeController" Component="freemind.modes.schememode" LOC="3" Name="SchemeController" PC="1"/>
                <MethodMetric CC="1" Class="SchemeController" Component="freemind.modes.schememode" LOC="3" Name="newModel" PC="1"/>
                <MethodMetric CC="1" Class="SchemeController" Component="freemind.modes.schememode" LOC="3" Name="newNode" PC="2"/>
                <MethodMetric CC="2" Class="SchemeController" Component="freemind.modes.schememode" LOC="11" Name="saveAs" PC="0"/>
                <MethodMetric CC="1" Class="SchemeController" Component="freemind.modes.schememode" LOC="3" Name="getPopupMenu" PC="0"/>
                <MethodMetric CC="1" Class="SchemeController" Component="freemind.modes.schememode" LOC="8" Name="updateMenus" PC="1"/>
                <MethodMetric CC="1" Class="SchemeController" Component="freemind.modes.schememode" LOC="3" Name="getHookFactory" PC="0"/>
                <MethodMetric CC="1" Class="EvaluateAction" Component="freemind.modes.schememode" LOC="3" Name="EvaluateAction" PC="0"/>
                <MethodMetric CC="1" Class="EvaluateAction" Component="freemind.modes.schememode" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SchemeEdgeModel" Component="freemind.modes.schememode" LOC="3" Name="SchemeEdgeModel" PC="2"/>
                <MethodMetric CC="1" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="4" Name="SchemeMapModel" PC="2"/>
                <MethodMetric CC="1" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="15" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="10" Name="load" PC="1"/>
                <MethodMetric CC="7" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="32" Name="loadMathStyle" PC="1"/>
                <MethodMetric CC="1" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="3" Name="getCode" PC="0"/>
                <MethodMetric CC="2" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="8" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="3" Name="getXml" PC="1"/>
                <MethodMetric CC="1" Class="SchemeMapModel" Component="freemind.modes.schememode" LOC="3" Name="getFilteredXml" PC="1"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="2" Name="SchemeMode" PC="0"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="5" Name="init" PC="1"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="SchemeMode" Component="freemind.modes.schememode" LOC="9" Name="activate" PC="0"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="2" Name="restore" PC="1"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="3" Name="getDefaultModeController" PC="0"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="SchemeMode" Component="freemind.modes.schememode" LOC="3" Name="createModeController" PC="0"/>
                <MethodMetric CC="1" Class="SchemeNodeModel" Component="freemind.modes.schememode" LOC="5" Name="SchemeNodeModel" PC="2"/>
                <MethodMetric CC="3" Class="SchemeNodeModel" Component="freemind.modes.schememode" LOC="12" Name="toString" PC="0"/>
                <MethodMetric CC="7" Class="SchemeNodeModel" Component="freemind.modes.schememode" LOC="25" Name="getCodeMathStyle" PC="0"/>
                <MethodMetric CC="7" Class="SchemeNodeModel" Component="freemind.modes.schememode" LOC="25" Name="getCodeClassicStyle" PC="0"/>
                <MethodMetric CC="1" Class="SchemeNodeModel" Component="freemind.modes.schememode" LOC="3" Name="isWriteable" PC="0"/>
                <MethodMetric CC="1" Class="SchemePopupMenu" Component="freemind.modes.schememode" LOC="4" Name="SchemePopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="SchemeToolBar" Component="freemind.modes.schememode" LOC="10" Name="SchemeToolBar" PC="1"/>
                <MethodMetric CC="1" Class="CommonToggleChildrenFoldedAction" Component="freemind.modes.viewmodes" LOC="5" Name="CommonToggleChildrenFoldedAction" PC="1"/>
                <MethodMetric CC="1" Class="CommonToggleChildrenFoldedAction" Component="freemind.modes.viewmodes" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="7" Name="ViewControllerAdapter" PC="1"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="2" Name="doubleClick" PC="1"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="2" Name="plainClick" PC="1"/>
                <MethodMetric CC="6" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="28" Name="extendSelection" PC="1"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="3" Name="setFolded" PC="2"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="10" Name="startupController" PC="0"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="2" Name="edit" PC="3"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="6" Name="shutdownController" PC="0"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="7" Name="setAllActions" PC="1"/>
                <MethodMetric CC="1" Class="ViewControllerAdapter" Component="freemind.modes.viewmodes" LOC="3" Name="createXMLElement" PC="0"/>
                <MethodMetric CC="1" Class="FreemindPropertyContributor" Component="freemind.preferences" LOC="0" Name="getControls" PC="1"/>
                <MethodMetric CC="1" Class="FreemindPropertyListener" Component="freemind.preferences" LOC="0" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="4" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="0" Name="toString" PC="1"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="GrabKeyDialog" PC="5"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="7" Name="GrabKeyDialog" PC="6"/>
                <MethodMetric CC="2" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="4" Name="getShortcut" PC="0"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="isOK" PC="0"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="isManagingFocus" PC="0"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="getFocusTraversalKeysEnabled" PC="0"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="processKeyEvent" PC="1"/>
                <MethodMetric CC="4" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="58" Name="init" PC="3"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="isManagingFocus" PC="0"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="getFocusTraversalKeysEnabled" PC="0"/>
                <MethodMetric CC="5" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="19" Name="getSymbolicName" PC="1"/>
                <MethodMetric CC="4" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="8" Name="updateAssignedTo" PC="1"/>
                <MethodMetric CC="6" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="15" Name="getKeyBinding" PC="1"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="getModifierMask" PC="0"/>
                <MethodMetric CC="1" Class="GrabKeyDialog" Component="freemind.preferences.layout" LOC="3" Name="isMacOS" PC="0"/>
                <MethodMetric CC="1" Class="Buffer" Component="freemind.preferences.layout" LOC="3" Name="getLength" PC="0"/>
                <MethodMetric CC="1" Class="Buffer" Component="freemind.preferences.layout" LOC="2" Name="insert" PC="2"/>
                <MethodMetric CC="1" Class="KeyBinding" Component="freemind.preferences.layout" LOC="6" Name="KeyBinding" PC="4"/>
                <MethodMetric CC="1" Class="KeyBinding" Component="freemind.preferences.layout" LOC="3" Name="isAssigned" PC="0"/>
                <MethodMetric CC="1" Class="InputPane" Component="freemind.preferences.layout" LOC="3" Name="getFocusTraversalKeysEnabled" PC="0"/>
                <MethodMetric CC="12" Class="InputPane" Component="freemind.preferences.layout" LOC="32" Name="processKeyEvent" PC="1"/>
                <MethodMetric CC="7" Class="ActionHandler" Component="freemind.preferences.layout" LOC="16" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="8" Class="ActionHandler" Component="freemind.preferences.layout" LOC="33" Name="canClose" PC="0"/>
                <MethodMetric CC="1" Class="KeyEventTranslator" Component="freemind.preferences.layout" LOC="3" Name="addTranslation" PC="2"/>
                <MethodMetric CC="18" Class="KeyEventTranslator" Component="freemind.preferences.layout" LOC="0" Name="translateKeyEvent" PC="1"/>
                <MethodMetric CC="11" Class="KeyEventTranslator" Component="freemind.preferences.layout" LOC="43" Name="parseKey" PC="1"/>
                <MethodMetric CC="5" Class="KeyEventTranslator" Component="freemind.preferences.layout" LOC="19" Name="setModifierMapping" PC="4"/>
                <MethodMetric CC="5" Class="KeyEventTranslator" Component="freemind.preferences.layout" LOC="7" Name="getSymbolicModifierName" PC="1"/>
                <MethodMetric CC="10" Class="KeyEventTranslator" Component="freemind.preferences.layout" LOC="25" Name="modifiersToString" PC="1"/>
                <MethodMetric CC="5" Class="KeyEventTranslator" Component="freemind.preferences.layout" LOC="8" Name="getModifierString" PC="1"/>
                <MethodMetric CC="1" Class="Key" Component="freemind.preferences.layout" LOC="5" Name="Key" PC="3"/>
                <MethodMetric CC="1" Class="Key" Component="freemind.preferences.layout" LOC="3" Name="hashCode" PC="0"/>
                <MethodMetric CC="3" Class="Key" Component="freemind.preferences.layout" LOC="9" Name="equals" PC="1"/>
                <MethodMetric CC="1" Class="Key" Component="freemind.preferences.layout" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="79" Class="KeyEventWorkaround" Component="freemind.preferences.layout" LOC="0" Name="processKeyEvent" PC="1"/>
                <MethodMetric CC="1" Class="KeyEventWorkaround" Component="freemind.preferences.layout" LOC="3" Name="numericKeypadKey" PC="0"/>
                <MethodMetric CC="3" Class="OptionPanel" Component="freemind.preferences.layout" LOC="13" Name="OptionPanel" PC="3"/>
                <MethodMetric CC="3" Class="OptionPanel" Component="freemind.preferences.layout" LOC="11" Name="setProperties" PC="0"/>
                <MethodMetric CC="4" Class="OptionPanel" Component="freemind.preferences.layout" LOC="12" Name="getOptionProperties" PC="0"/>
                <MethodMetric CC="5" Class="OptionPanel" Component="freemind.preferences.layout" LOC="56" Name="buildPanel" PC="0"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="OptionPanel" Component="freemind.preferences.layout" LOC="5" Name="getText" PC="1"/>
                <MethodMetric CC="2" Class="OptionPanel" Component="freemind.preferences.layout" LOC="5" Name="checkConnectionToFreeMindMain" PC="0"/>
                <MethodMetric CC="2" Class="OptionPanel" Component="freemind.preferences.layout" LOC="7" Name="registerTabButton" PC="3"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="3" Name="getTabButton" PC="1"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="3" Name="getAllButtons" PC="0"/>
                <MethodMetric CC="5" Class="OptionPanel" Component="freemind.preferences.layout" LOC="318" Name="getControls" PC="0"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="7" Name="closeWindow" PC="0"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="3" Name="addContributor" PC="1"/>
                <MethodMetric CC="1" Class="OptionPanel" Component="freemind.preferences.layout" LOC="3" Name="removeContributor" PC="1"/>
                <MethodMetric CC="1" Class="OptionPanelFeedback" Component="freemind.preferences.layout" LOC="0" Name="writeProperties" PC="1"/>
                <MethodMetric CC="1" Class="ChangeTabAction" Component="freemind.preferences.layout" LOC="6" Name="ChangeTabAction" PC="3"/>
                <MethodMetric CC="2" Class="ChangeTabAction" Component="freemind.preferences.layout" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NewTabProperty" Component="freemind.preferences.layout" LOC="3" Name="NewTabProperty" PC="1"/>
                <MethodMetric CC="1" Class="NewTabProperty" Component="freemind.preferences.layout" LOC="5" Name="NewTabProperty" PC="2"/>
                <MethodMetric CC="1" Class="NewTabProperty" Component="freemind.preferences.layout" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="NewTabProperty" Component="freemind.preferences.layout" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="NewTabProperty" Component="freemind.preferences.layout" LOC="2" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="NewTabProperty" Component="freemind.preferences.layout" LOC="2" Name="setEnabled" PC="1"/>
                <MethodMetric CC="2" Class="KeyProperty" Component="freemind.preferences.layout" LOC="16" Name="KeyProperty" PC="3"/>
                <MethodMetric CC="2" Class="KeyProperty" Component="freemind.preferences.layout" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="3" Name="disableModifiers" PC="0"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="3" Name="getDescription" PC="0"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="3" Name="getLabel" PC="0"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="4" Name="setValue" PC="1"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="3" Name="getValue" PC="0"/>
                <MethodMetric CC="4" Class="KeyProperty" Component="freemind.preferences.layout" LOC="19" Name="layout" PC="2"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="3" Name="setEnabled" PC="1"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="3" Name="setLabelText" PC="1"/>
                <MethodMetric CC="1" Class="KeyProperty" Component="freemind.preferences.layout" LOC="3" Name="setImageIcon" PC="1"/>
                <MethodMetric CC="1" Class="VariableSizeCardLayout" Component="freemind.preferences.layout" LOC="3" Name="VariableSizeCardLayout" PC="0"/>
                <MethodMetric CC="1" Class="VariableSizeCardLayout" Component="freemind.preferences.layout" LOC="3" Name="VariableSizeCardLayout" PC="2"/>
                <MethodMetric CC="5" Class="VariableSizeCardLayout" Component="freemind.preferences.layout" LOC="21" Name="preferredLayoutSize" PC="1"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="7" Name="MapModule" PC="4"/>
                <MethodMetric CC="2" Class="MapModule" Component="freemind.view" LOC="6" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="MapModule" Component="freemind.view" LOC="8" Name="rename" PC="0"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="getMode" PC="0"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="setName" PC="1"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="getName" PC="0"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="getDisplayName" PC="0"/>
                <MethodMetric CC="1" Class="MapModule" Component="freemind.view" LOC="3" Name="setDisplayName" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="5" Name="ArrowLinkView" PC="3"/>
                <MethodMetric CC="2" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="4" Name="getBounds" PC="0"/>
                <MethodMetric CC="18" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="66" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="isTargetVisible" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="isSourceVisible" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="calcInclination" PC="2"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="15" Name="paintArrow" PC="3"/>
                <MethodMetric CC="9" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="0" Name="detectCollision" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="4" Name="getControlPoint" PC="1"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="2" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="7" Name="getStroke" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="4" Name="getRealWidth" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="3" Name="getZoom" PC="0"/>
                <MethodMetric CC="1" Class="ArrowLinkView" Component="freemind.view.mindmapview" LOC="2" Name="changeInclination" PC="4"/>
                <MethodMetric CC="1" Class="BezierEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="BezierEdgeView" PC="0"/>
                <MethodMetric CC="2" Class="BezierEdgeView" Component="freemind.view.mindmapview" LOC="10" Name="update" PC="0"/>
                <MethodMetric CC="2" Class="BezierEdgeView" Component="freemind.view.mindmapview" LOC="15" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="BezierEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="5" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="2" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="14" Name="paint" PC="1"/>
                <MethodMetric CC="2" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="7" Name="paintSelected" PC="1"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="4" Name="paintBackground" PC="2"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="4" Name="getLeftPoint" PC="0"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="5" Name="getCenterPoint" PC="0"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="5" Name="getRightPoint" PC="0"/>
                <MethodMetric CC="2" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="8" Name="getMainViewWidthWithFoldingMark" PC="0"/>
                <MethodMetric CC="2" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="6" Name="getDeltaX" PC="0"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="3" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="3" Name="getAlignment" PC="0"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="3" Name="getTextWidth" PC="0"/>
                <MethodMetric CC="1" Class="BubbleMainView" Component="freemind.view.mindmapview" LOC="3" Name="getTextX" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getIterativeLevel" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="4" Name="CloudView" PC="2"/>
                <MethodMetric CC="7" Class="CloudView" Component="freemind.view.mindmapview" LOC="64" Name="paint" PC="1"/>
                <MethodMetric CC="2" Class="CloudView" Component="freemind.view.mindmapview" LOC="15" Name="paintClouds" PC="7"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getExteriorColor" PC="0"/>
                <MethodMetric CC="2" Class="CloudView" Component="freemind.view.mindmapview" LOC="7" Name="getStroke" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="4" Name="getRealWidth" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getDistanceToConvexHull" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="5" Name="getAdditionalHeigth" PC="2"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="CloudView" Component="freemind.view.mindmapview" LOC="3" Name="getZoom" PC="0"/>
                <MethodMetric CC="5" Class="ConvexHull" Component="freemind.view.mindmapview" LOC="13" Name="ccw" PC="3"/>
                <MethodMetric CC="7" Class="ConvexHull" Component="freemind.view.mindmapview" LOC="32" Name="doGraham" PC="1"/>
                <MethodMetric CC="2" Class="ConvexHull" Component="freemind.view.mindmapview" LOC="10" Name="calculateHull" PC="1"/>
                <MethodMetric CC="1" Class="thetaComparator" Component="freemind.view.mindmapview" LOC="3" Name="thetaComparator" PC="1"/>
                <MethodMetric CC="6" Class="thetaComparator" Component="freemind.view.mindmapview" LOC="15" Name="compare" PC="2"/>
                <MethodMetric CC="4" Class="thetaComparator" Component="freemind.view.mindmapview" LOC="15" Name="theta" PC="2"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="9" Name="paint" PC="2"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="4" Name="createEnd" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="4" Name="createStart" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="0" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="4" Name="reset" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="0" Name="getColor" PC="0"/>
                <MethodMetric CC="2" Class="EdgeView" Component="freemind.view.mindmapview" LOC="7" Name="getStroke" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="2" Class="EdgeView" Component="freemind.view.mindmapview" LOC="7" Name="getEclipsedStroke" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="3" Name="isTargetEclipsed" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getSource" PC="0"/>
                <MethodMetric CC="1" Class="EdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getTarget" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="6" Name="EditNodeBase" PC="4"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="binOptionIsTrue" PC="1"/>
                <MethodMetric CC="2" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="5" Name="closeEdit" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getClipboard" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getEditControl" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getNode" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="getTextFieldListener" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="3" Name="setTextFieldListener" PC="1"/>
                <MethodMetric CC="7" Class="EditNodeBase" Component="freemind.view.mindmapview" LOC="46" Name="redispatchKeyEvents" PC="2"/>
                <MethodMetric CC="1" Class="EditDialog" Component="freemind.view.mindmapview" LOC="8" Name="EditDialog" PC="1"/>
                <MethodMetric CC="4" Class="EditDialog" Component="freemind.view.mindmapview" LOC="11" Name="confirmedSubmit" PC="0"/>
                <MethodMetric CC="3" Class="EditDialog" Component="freemind.view.mindmapview" LOC="7" Name="confirmedCancel" PC="0"/>
                <MethodMetric CC="1" Class="EditDialog" Component="freemind.view.mindmapview" LOC="3" Name="submit" PC="0"/>
                <MethodMetric CC="1" Class="EditDialog" Component="freemind.view.mindmapview" LOC="3" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="EditDialog" Component="freemind.view.mindmapview" LOC="3" Name="split" PC="0"/>
                <MethodMetric CC="1" Class="EditDialog" Component="freemind.view.mindmapview" LOC="0" Name="isChanged" PC="0"/>
                <MethodMetric CC="1" Class="EditDialog" Component="freemind.view.mindmapview" LOC="3" Name="setBase" PC="1"/>
                <MethodMetric CC="1" Class="EditDialog" Component="freemind.view.mindmapview" LOC="3" Name="getBase" PC="0"/>
                <MethodMetric CC="2" Class="DialogWindowListener" Component="freemind.view.mindmapview" LOC="5" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="SubmitAction" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SplitAction" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CancelAction" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EditControl" Component="freemind.view.mindmapview" LOC="0" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="EditControl" Component="freemind.view.mindmapview" LOC="0" Name="ok" PC="1"/>
                <MethodMetric CC="1" Class="EditControl" Component="freemind.view.mindmapview" LOC="0" Name="split" PC="2"/>
                <MethodMetric CC="1" Class="EditCopyAction" Component="freemind.view.mindmapview" LOC="4" Name="EditCopyAction" PC="1"/>
                <MethodMetric CC="2" Class="EditCopyAction" Component="freemind.view.mindmapview" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="EditPopupMenu" Component="freemind.view.mindmapview" LOC="8" Name="EditPopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="KeyEventQueue" Component="freemind.view.mindmapview" LOC="4" Name="dispatchKeyEvent" PC="1"/>
                <MethodMetric CC="2" Class="KeyEventQueue" Component="freemind.view.mindmapview" LOC="10" Name="focusGained" PC="1"/>
                <MethodMetric CC="1" Class="KeyEventQueue" Component="freemind.view.mindmapview" LOC="2" Name="focusLost" PC="1"/>
                <MethodMetric CC="1" Class="EditNodeDialog" Component="freemind.view.mindmapview" LOC="4" Name="EditNodeDialog" PC="5"/>
                <MethodMetric CC="1" Class="EditNodeDialog" Component="freemind.view.mindmapview" LOC="7" Name="show" PC="0"/>
                <MethodMetric CC="11" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="147" Name="LongNodeDialog" PC="0"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="5" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="20" Name="keyPressed" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="2" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="2" Name="keyReleased" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="2" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="3" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="3" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="3" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="11" Name="conditionallyShowPopup" PC="1"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="4" Name="show" PC="0"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="4" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="4" Name="split" PC="0"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="4" Name="submit" PC="0"/>
                <MethodMetric CC="1" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="3" Name="isChanged" PC="0"/>
                <MethodMetric CC="2" Class="LongNodeDialog" Component="freemind.view.mindmapview" LOC="8" Name="getMostRecentFocusOwner" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeExternalApplication" Component="freemind.view.mindmapview" LOC="4" Name="EditNodeExternalApplication" PC="5"/>
                <MethodMetric CC="3" Class="EditNodeExternalApplication" Component="freemind.view.mindmapview" LOC="37" Name="show" PC="0"/>
                <MethodMetric CC="3" Class="EditNodeExternalApplication" Component="freemind.view.mindmapview" LOC="29" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeExternalApplication" Component="freemind.view.mindmapview" LOC="3" Name="getFirstEvent" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="3" Name="EditNodeTextField" PC="5"/>
                <MethodMetric CC="2" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="9" Name="EditNodeTextField" PC="7"/>
                <MethodMetric CC="12" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="101" Name="show" PC="0"/>
                <MethodMetric CC="2" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="9" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="9" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="5" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="3" Name="addTextfield" PC="0"/>
                <MethodMetric CC="1" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="3" Name="setTextfieldLoaction" PC="1"/>
                <MethodMetric CC="1" Class="EditNodeTextField" Component="freemind.view.mindmapview" LOC="12" Name="hideMe" PC="0"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="2" Name="focusGained" PC="1"/>
                <MethodMetric CC="4" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="17" Name="focusLost" PC="1"/>
                <MethodMetric CC="6" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="24" Name="keyPressed" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="2" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="2" Name="keyReleased" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="2" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="3" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="3" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="3" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="12" Name="conditionallyShowPopup" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="3" Name="componentHidden" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="3" Name="componentMoved" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="3" Name="componentResized" PC="1"/>
                <MethodMetric CC="1" Class="TextFieldListener" Component="freemind.view.mindmapview" LOC="3" Name="componentShown" PC="1"/>
                <MethodMetric CC="1" Class="EditNodeWYSIWYG" Component="freemind.view.mindmapview" LOC="4" Name="EditNodeWYSIWYG" PC="5"/>
                <MethodMetric CC="8" Class="EditNodeWYSIWYG" Component="freemind.view.mindmapview" LOC="71" Name="show" PC="0"/>
                <MethodMetric CC="2" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="52" Name="HTMLDialog" PC="1"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="7" Name="createEditorPanel" PC="0"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="3" Name="getHtmlEditorPanel" PC="0"/>
                <MethodMetric CC="2" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="10" Name="submit" PC="0"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="3" Name="removeBodyStyle" PC="0"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="5" Name="split" PC="0"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="5" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="3" Name="isChanged" PC="0"/>
                <MethodMetric CC="2" Class="HTMLDialog" Component="freemind.view.mindmapview" LOC="8" Name="getMostRecentFocusOwner" PC="0"/>
                <MethodMetric CC="2" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="17" Name="paint" PC="1"/>
                <MethodMetric CC="2" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="7" Name="getMainViewWidthWithFoldingMark" PC="0"/>
                <MethodMetric CC="2" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="7" Name="getMainViewHeightWithFoldingMark" PC="0"/>
                <MethodMetric CC="2" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="6" Name="getDeltaX" PC="0"/>
                <MethodMetric CC="1" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="3" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="3" Name="getAlignment" PC="0"/>
                <MethodMetric CC="1" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="5" Name="getLeftPoint" PC="0"/>
                <MethodMetric CC="5" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="18" Name="getEdgeWidth" PC="0"/>
                <MethodMetric CC="1" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="4" Name="getCenterPoint" PC="0"/>
                <MethodMetric CC="1" Class="ForkMainView" Component="freemind.view.mindmapview" LOC="5" Name="getRightPoint" PC="0"/>
                <MethodMetric CC="2" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="26" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="26" Name="createMapViewForFile" PC="3"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="7" Name="createModeController" PC="0"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="2" Name="init" PC="0"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="24" Name="exportFileToPng" PC="3"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="14" Name="createMapView" PC="2"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="3" Name="getNodeDragListener" PC="0"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="3" Name="getNodeDropListener" PC="0"/>
                <MethodMetric CC="1" Class="IndependantMapViewCreator" Component="freemind.view.mindmapview" LOC="2" Name="selectAsTheOnlyOneSelected" PC="2"/>
                <MethodMetric CC="2" Class="LeftNodeViewLayout" Component="freemind.view.mindmapview" LOC="19" Name="layout" PC="0"/>
                <MethodMetric CC="2" Class="LeftNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getInstance" PC="0"/>
                <MethodMetric CC="1" Class="LeftNodeViewLayout" Component="freemind.view.mindmapview" LOC="9" Name="layoutNodeMotionListenerView" PC="1"/>
                <MethodMetric CC="1" Class="LeftNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getMainViewOutPoint" PC="3"/>
                <MethodMetric CC="1" Class="LeftNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getMainViewInPoint" PC="1"/>
                <MethodMetric CC="1" Class="LinearEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="LinearEdgeView" PC="0"/>
                <MethodMetric CC="5" Class="LinearEdgeView" Component="freemind.view.mindmapview" LOC="31" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="LinearEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getZoomedFoldingSymbolHalfWidth" PC="0"/>
                <MethodMetric CC="2" Class="MainView" Component="freemind.view.mindmapview" LOC="9" Name="MainView" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getMinimumSize" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getMaximumSize" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getNodeView" PC="0"/>
                <MethodMetric CC="5" Class="MainView" Component="freemind.view.mindmapview" LOC="23" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="2" Class="MainView" Component="freemind.view.mindmapview" LOC="16" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="isCurrentlyPrinting" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="4" Name="getZoom" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="printComponent" PC="1"/>
                <MethodMetric CC="3" Class="MainView" Component="freemind.view.mindmapview" LOC="11" Name="paintSelected" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="4" Name="paintBackground" PC="2"/>
                <MethodMetric CC="4" Class="MainView" Component="freemind.view.mindmapview" LOC="16" Name="paintDragOver" PC="1"/>
                <MethodMetric CC="3" Class="MainView" Component="freemind.view.mindmapview" LOC="9" Name="getHeight" PC="0"/>
                <MethodMetric CC="3" Class="MainView" Component="freemind.view.mindmapview" LOC="9" Name="getWidth" PC="0"/>
                <MethodMetric CC="2" Class="MainView" Component="freemind.view.mindmapview" LOC="5" Name="processKeyBinding" PC="4"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="0" Name="getCenterPoint" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="0" Name="getLeftPoint" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="0" Name="getRightPoint" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getDeltaX" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getDeltaY" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getMainViewHeightWithFoldingMark" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getMainViewWidthWithFoldingMark" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="convertPointToMap" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="convertPointFromMap" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="setDraggedOver" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="setDraggedOver" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getDraggedOver" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="dropAsSibling" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="dropPosition" PC="1"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="isInVerticalRegion" PC="2"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="0" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="0" Name="getAlignment" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="3" Name="getTextWidth" PC="0"/>
                <MethodMetric CC="2" Class="MainView" Component="freemind.view.mindmapview" LOC="8" Name="getTextX" PC="0"/>
                <MethodMetric CC="2" Class="MainView" Component="freemind.view.mindmapview" LOC="7" Name="getIconWidth" PC="0"/>
                <MethodMetric CC="1" Class="MainView" Component="freemind.view.mindmapview" LOC="4" Name="isInFollowLinkRegion" PC="1"/>
                <MethodMetric CC="2" Class="MainView" Component="freemind.view.mindmapview" LOC="8" Name="updateCursor" PC="1"/>
                <MethodMetric CC="3" Class="MapView" Component="freemind.view.mindmapview" LOC="92" Name="MapView" PC="2"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getLastComponent" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getFirstComponent" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="5" Name="getDefaultComponent" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getComponentBefore" PC="2"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getComponentAfter" PC="2"/>
                <MethodMetric CC="7" Class="MapView" Component="freemind.view.mindmapview" LOC="31" Name="createPropertyChangeListener" PC="0"/>
                <MethodMetric CC="7" Class="MapView" Component="freemind.view.mindmapview" LOC="25" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="6" Name="initRoot" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="12" Name="getMaxNodeWidth" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="12" Name="centerNode" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="scrollNodeToVisible" PC="1"/>
                <MethodMetric CC="3" Class="MapView" Component="freemind.view.mindmapview" LOC="21" Name="scrollNodeToVisible" PC="2"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="5" Name="scrollBy" PC="2"/>
                <MethodMetric CC="6" Class="MapView" Component="freemind.view.mindmapview" LOC="23" Name="setViewLocation" PC="2"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="6" Name="setViewPosition" PC="1"/>
                <MethodMetric CC="5" Class="MapView" Component="freemind.view.mindmapview" LOC="20" Name="getVisibleLeft" PC="1"/>
                <MethodMetric CC="5" Class="MapView" Component="freemind.view.mindmapview" LOC="20" Name="getVisibleRight" PC="1"/>
                <MethodMetric CC="9" Class="MapView" Component="freemind.view.mindmapview" LOC="32" Name="getVisibleNeighbour" PC="1"/>
                <MethodMetric CC="3" Class="MapView" Component="freemind.view.mindmapview" LOC="11" Name="move" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="resetShiftSelectionOrigin" PC="0"/>
                <MethodMetric CC="13" Class="MapView" Component="freemind.view.mindmapview" LOC="50" Name="extendSelectionWithKeyMove" PC="2"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="6" Name="getMainViewY" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="4" Name="moveToRoot" PC="0"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="17" Name="selectAsTheOnlyOneSelected" PC="1"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="15" Name="toggleSelected" PC="1"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="10" Name="makeTheSelected" PC="1"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="6" Name="deselect" PC="1"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="12" Name="selectBranch" PC="2"/>
                <MethodMetric CC="20" Class="MapView" Component="freemind.view.mindmapview" LOC="66" Name="selectContinuous" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="6" Name="setMoveCursor" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getNodeMouseMotionListener" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getNodeMotionListener" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getNodeKeyListener" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getNodeDragListener" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getNodeDropListener" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="4" Name="getSelected" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getSelected" PC="1"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="7" Name="getSelecteds" PC="0"/>
                <MethodMetric CC="8" Class="MapView" Component="freemind.view.mindmapview" LOC="40" Name="getSelectedNodesSortedByY" PC="0"/>
                <MethodMetric CC="3" Class="MapView" Component="freemind.view.mindmapview" LOC="12" Name="compare" PC="2"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="7" Name="getSingleSelectedNodes" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="4" Name="isSelected" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getZoom" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getZoomed" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="6" Name="setZoom" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="5" Name="validateTree" PC="0"/>
                <MethodMetric CC="3" Class="MapView" Component="freemind.view.mindmapview" LOC="27" Name="setViewPositionAfterValidate" PC="0"/>
                <MethodMetric CC="6" Class="MapView" Component="freemind.view.mindmapview" LOC="30" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="11" Name="paintChildren" PC="1"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="21" Name="paintSelecteds" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="7" Name="paintSelected" PC="2"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="9" Name="collectLabels" PC="2"/>
                <MethodMetric CC="7" Class="MapView" Component="freemind.view.mindmapview" LOC="19" Name="paintLinks" PC="4"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="8" Name="detectCollision" PC="1"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="21" Name="preparePrinting" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="7" Name="repaintSelecteds" PC="0"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="18" Name="endPrinting" PC="0"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="42" Name="print" PC="3"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="isCurrentlyPrinting" PC="0"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="19" Name="getInnerBounds" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getRoot" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getMindMapLayout" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="getSiblingMaxLevel" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="setSiblingMaxLevel" PC="1"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="5" Name="getAutoscrollInsets" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="4" Name="autoscroll" PC="1"/>
                <MethodMetric CC="4" Class="MapView" Component="freemind.view.mindmapview" LOC="14" Name="getNodeView" PC="1"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="7" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="3" Name="revalidateSelecteds" PC="0"/>
                <MethodMetric CC="7" Class="MapView" Component="freemind.view.mindmapview" LOC="24" Name="validateSelecteds" PC="0"/>
                <MethodMetric CC="1" Class="MapView" Component="freemind.view.mindmapview" LOC="5" Name="getNodeContentLocation" PC="1"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="7" Name="getViewportSize" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="8" Name="getViewPosition" PC="0"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="6" Name="setScrollMode" PC="1"/>
                <MethodMetric CC="2" Class="MapView" Component="freemind.view.mindmapview" LOC="7" Name="getScrollMode" PC="0"/>
                <MethodMetric CC="1" Class="ResizeListener" Component="freemind.view.mindmapview" LOC="3" Name="ResizeListener" PC="0"/>
                <MethodMetric CC="1" Class="ResizeListener" Component="freemind.view.mindmapview" LOC="4" Name="componentResized" PC="1"/>
                <MethodMetric CC="1" Class="ScrollPane" Component="freemind.view.mindmapview" LOC="2" Name="ScrollPane" PC="0"/>
                <MethodMetric CC="2" Class="ScrollPane" Component="freemind.view.mindmapview" LOC="4" Name="processKeyBinding" PC="4"/>
                <MethodMetric CC="2" Class="ScrollPane" Component="freemind.view.mindmapview" LOC="7" Name="validateTree" PC="0"/>
                <MethodMetric CC="1" Class="Selected" Component="freemind.view.mindmapview" LOC="2" Name="Selected" PC="0"/>
                <MethodMetric CC="3" Class="Selected" Component="freemind.view.mindmapview" LOC="11" Name="clear" PC="0"/>
                <MethodMetric CC="2" Class="Selected" Component="freemind.view.mindmapview" LOC="4" Name="changeSelection" PC="2"/>
                <MethodMetric CC="1" Class="Selected" Component="freemind.view.mindmapview" LOC="3" Name="size" PC="0"/>
                <MethodMetric CC="2" Class="Selected" Component="freemind.view.mindmapview" LOC="8" Name="remove" PC="1"/>
                <MethodMetric CC="2" Class="Selected" Component="freemind.view.mindmapview" LOC="9" Name="add" PC="1"/>
                <MethodMetric CC="2" Class="Selected" Component="freemind.view.mindmapview" LOC="4" Name="removeFocusForHooks" PC="1"/>
                <MethodMetric CC="1" Class="Selected" Component="freemind.view.mindmapview" LOC="3" Name="addFocusForHooks" PC="1"/>
                <MethodMetric CC="1" Class="Selected" Component="freemind.view.mindmapview" LOC="3" Name="get" PC="1"/>
                <MethodMetric CC="1" Class="Selected" Component="freemind.view.mindmapview" LOC="3" Name="contains" PC="1"/>
                <MethodMetric CC="4" Class="Selected" Component="freemind.view.mindmapview" LOC="17" Name="moveToFirst" PC="1"/>
                <MethodMetric CC="1" Class="CheckLaterForCenterNodeTask" Component="freemind.view.mindmapview" LOC="4" Name="CheckLaterForCenterNodeTask" PC="1"/>
                <MethodMetric CC="1" Class="CheckLaterForCenterNodeTask" Component="freemind.view.mindmapview" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="5" Name="MindMapLayout" PC="0"/>
                <MethodMetric CC="1" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="2" Name="addLayoutComponent" PC="2"/>
                <MethodMetric CC="1" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="2" Name="removeLayoutComponent" PC="1"/>
                <MethodMetric CC="3" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="15" Name="layoutContainer" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="3" Name="getRoot" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="3" Name="minimumLayoutSize" PC="1"/>
                <MethodMetric CC="1" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="5" Name="preferredLayoutSize" PC="1"/>
                <MethodMetric CC="2" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="12" Name="calcYBorderSize" PC="1"/>
                <MethodMetric CC="2" Class="MindMapLayout" Component="freemind.view.mindmapview" LOC="12" Name="calcXBorderSize" PC="1"/>
                <MethodMetric CC="1" Class="MultipleImage" Component="freemind.view.mindmapview" LOC="4" Name="MultipleImage" PC="1"/>
                <MethodMetric CC="1" Class="MultipleImage" Component="freemind.view.mindmapview" LOC="3" Name="getImageCount" PC="0"/>
                <MethodMetric CC="1" Class="MultipleImage" Component="freemind.view.mindmapview" LOC="5" Name="addImage" PC="1"/>
                <MethodMetric CC="4" Class="MultipleImage" Component="freemind.view.mindmapview" LOC="23" Name="getImage" PC="0"/>
                <MethodMetric CC="2" Class="MultipleImage" Component="freemind.view.mindmapview" LOC="5" Name="paintIcon" PC="4"/>
                <MethodMetric CC="2" Class="MultipleImage" Component="freemind.view.mindmapview" LOC="7" Name="getIconWidth" PC="0"/>
                <MethodMetric CC="3" Class="MultipleImage" Component="freemind.view.mindmapview" LOC="8" Name="getIconHeight" PC="0"/>
                <MethodMetric CC="6" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="56" Name="NodeFoldingComponent" PC="1"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="2" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="2" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="5" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="5" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="2" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="4" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="3" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="3" Name="getZoomedCircleRadius" PC="0"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="3" Name="getNodeView" PC="0"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="6" Name="setCorrectedLocation" PC="1"/>
                <MethodMetric CC="2" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="6" Name="dispose" PC="0"/>
                <MethodMetric CC="1" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="4" Name="isFolded" PC="0"/>
                <MethodMetric CC="2" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="5" Name="startTimer" PC="0"/>
                <MethodMetric CC="2" Class="NodeFoldingComponent" Component="freemind.view.mindmapview" LOC="5" Name="stopTimer" PC="0"/>
                <MethodMetric CC="1" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="12" Name="installDefaults" PC="1"/>
                <MethodMetric CC="4" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="34" Name="installListeners" PC="1"/>
                <MethodMetric CC="2" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="7" Name="mousePressed" PC="1"/>
                <MethodMetric CC="2" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="7" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="2" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="10" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="7" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="56" Name="paint" PC="2"/>
                <MethodMetric CC="1" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="5" Name="getColorForCounter" PC="0"/>
                <MethodMetric CC="1" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="6" Name="getPreferredSize" PC="1"/>
                <MethodMetric CC="2" Class="RoundImageButtonUI" Component="freemind.view.mindmapview" LOC="7" Name="initShape" PC="1"/>
                <MethodMetric CC="2" Class="NodeMotionListenerView" Component="freemind.view.mindmapview" LOC="13" Name="NodeMotionListenerView" PC="1"/>
                <MethodMetric CC="1" Class="NodeMotionListenerView" Component="freemind.view.mindmapview" LOC="3" Name="getMovedView" PC="0"/>
                <MethodMetric CC="3" Class="NodeMotionListenerView" Component="freemind.view.mindmapview" LOC="22" Name="paintComponent" PC="1"/>
                <MethodMetric CC="1" Class="NodeMotionListenerView" Component="freemind.view.mindmapview" LOC="3" Name="isMouseEntered" PC="0"/>
                <MethodMetric CC="1" Class="NodeMotionListenerView" Component="freemind.view.mindmapview" LOC="4" Name="setMouseEntered" PC="0"/>
                <MethodMetric CC="1" Class="NodeMotionListenerView" Component="freemind.view.mindmapview" LOC="4" Name="setMouseExited" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="2" Name="setFocusCycleRoot" PC="1"/>
                <MethodMetric CC="4" Class="NodeView" Component="freemind.view.mindmapview" LOC="24" Name="NodeView" PC="4"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="12" Name="addFoldingListener" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="7" Name="removeFoldingListener" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="2" Name="propertyChanged" PC="3"/>
                <MethodMetric CC="4" Class="NodeView" Component="freemind.view.mindmapview" LOC="26" Name="setMainView" PC="1"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="10" Name="removeFromMap" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="addDragListener" PC="1"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="addDropListener" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="isRoot" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getIsLong" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="isSiblingOf" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="isChildOf" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="isParentOf" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getCoordinates" PC="1"/>
                <MethodMetric CC="5" Class="NodeView" Component="freemind.view.mindmapview" LOC="24" Name="getCoordinates" PC="5"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="setText" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getMainViewWidthWithFoldingMark" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getMainViewHeightWithFoldingMark" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getDeltaX" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getDeltaY" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="requestFocus" PC="0"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="12" Name="getAdditionalCloudHeigth" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="isSelected" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="isLeft" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="setModel" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="6" Name="isParentHidden" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="getParentView" PC="0"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="9" Name="getVisibleParentView" PC="0"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="12" Name="getChildrenViews" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getSiblingViews" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="getMainViewOutPoint" PC="2"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="getMainViewInPoint" PC="0"/>
                <MethodMetric CC="5" Class="NodeView" Component="freemind.view.mindmapview" LOC="35" Name="getLinkPoint" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="convertPointToMap" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getAlignment" PC="0"/>
                <MethodMetric CC="5" Class="NodeView" Component="freemind.view.mindmapview" LOC="19" Name="getNextPage" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getInPointInMap" PC="0"/>
                <MethodMetric CC="5" Class="NodeView" Component="freemind.view.mindmapview" LOC="19" Name="getPreviousPage" PC="0"/>
                <MethodMetric CC="6" Class="NodeView" Component="freemind.view.mindmapview" LOC="22" Name="getNextVisibleSibling" PC="0"/>
                <MethodMetric CC="8" Class="NodeView" Component="freemind.view.mindmapview" LOC="26" Name="getFirst" PC="3"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="isContentVisible" PC="0"/>
                <MethodMetric CC="8" Class="NodeView" Component="freemind.view.mindmapview" LOC="26" Name="getLast" PC="3"/>
                <MethodMetric CC="4" Class="NodeView" Component="freemind.view.mindmapview" LOC="10" Name="getLeft" PC="1"/>
                <MethodMetric CC="4" Class="NodeView" Component="freemind.view.mindmapview" LOC="10" Name="getRight" PC="1"/>
                <MethodMetric CC="6" Class="NodeView" Component="freemind.view.mindmapview" LOC="22" Name="getPreviousVisibleSibling" PC="0"/>
                <MethodMetric CC="6" Class="NodeView" Component="freemind.view.mindmapview" LOC="28" Name="getNextSiblingSingle" PC="0"/>
                <MethodMetric CC="6" Class="NodeView" Component="freemind.view.mindmapview" LOC="28" Name="getPreviousSiblingSingle" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="6" Name="insert" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="insert" PC="2"/>
                <MethodMetric CC="4" Class="NodeView" Component="freemind.view.mindmapview" LOC="14" Name="remove" PC="0"/>
                <MethodMetric CC="4" Class="NodeView" Component="freemind.view.mindmapview" LOC="25" Name="update" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="createAttributeView" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="4" Name="repaintSelected" PC="0"/>
                <MethodMetric CC="14" Class="NodeView" Component="freemind.view.mindmapview" LOC="65" Name="updateText" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="10" Name="updateFont" PC="0"/>
                <MethodMetric CC="7" Class="NodeView" Component="freemind.view.mindmapview" LOC="36" Name="updateIcons" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="updateIconPosition" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="8" Name="updateTextColor" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="useSelectionColors" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="7" Name="updateStyle" PC="0"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="19" Name="updateToolTip" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="11" Name="getMaxToolTipWidth" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="setIcon" PC="1"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="8" Name="updateAll" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getSelectedColor" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="8" Name="getAntiColor1" PC="1"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="8" Name="getAntiColor2" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getShift" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getVGap" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getHGap" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getMainView" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="5" Name="syncronizeAttributeView" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getTextFont" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="7" Name="getTextColor" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="7" Name="getAttributeView" PC="0"/>
                <MethodMetric CC="12" Class="NodeView" Component="freemind.view.mindmapview" LOC="54" Name="getPreferredVisibleChild" PC="1"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="10" Name="setPreferredChild" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="treeNodesChanged" PC="1"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="12" Name="treeNodesInserted" PC="1"/>
                <MethodMetric CC="13" Class="NodeView" Component="freemind.view.mindmapview" LOC="51" Name="treeNodesRemoved" PC="1"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="12" Name="treeStructureChanged" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="4" Name="getZoomedFoldingSymbolHalfWidth" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="4" Name="getFoldingMarkPosition" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getContent" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="9" Name="getContentPane" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="getMotionListenerView" PC="0"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="9" Name="setBounds" PC="4"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="9" Name="setVisible" PC="1"/>
                <MethodMetric CC="4" Class="NodeView" Component="freemind.view.mindmapview" LOC="23" Name="paintCloudsAndEdges" PC="1"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="15" Name="paint" PC="1"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="6" Name="paintCloud" PC="1"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="4" Name="getInnerBounds" PC="0"/>
                <MethodMetric CC="1" Class="NodeView" Component="freemind.view.mindmapview" LOC="4" Name="contains" PC="2"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="7" Name="getTextBackground" PC="0"/>
                <MethodMetric CC="3" Class="NodeView" Component="freemind.view.mindmapview" LOC="10" Name="getBackgroundColor" PC="0"/>
                <MethodMetric CC="2" Class="NodeView" Component="freemind.view.mindmapview" LOC="6" Name="getFoldingSymbolWidth" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="2" Name="NodeViewFactory" PC="0"/>
                <MethodMetric CC="2" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="6" Name="getInstance" PC="0"/>
                <MethodMetric CC="5" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="0" Name="getEdge" PC="1"/>
                <MethodMetric CC="2" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="6" Name="getSharpBezierEdgeView" PC="0"/>
                <MethodMetric CC="2" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="6" Name="getSharpLinearEdgeView" PC="0"/>
                <MethodMetric CC="2" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="6" Name="getBezierEdgeView" PC="0"/>
                <MethodMetric CC="2" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="6" Name="getLinearEdgeView" PC="0"/>
                <MethodMetric CC="3" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="21" Name="newNodeView" PC="4"/>
                <MethodMetric CC="4" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="15" Name="newMainView" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="3" Name="fireNodeViewCreated" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewFactory" Component="freemind.view.mindmapview" LOC="3" Name="newContentPane" PC="1"/>
                <MethodMetric CC="1" Class="ContentPane" Component="freemind.view.mindmapview" LOC="3" Name="ContentPane" PC="0"/>
                <MethodMetric CC="1" Class="ContentPaneLayout" Component="freemind.view.mindmapview" LOC="2" Name="addLayoutComponent" PC="2"/>
                <MethodMetric CC="4" Class="ContentPaneLayout" Component="freemind.view.mindmapview" LOC="19" Name="layoutContainer" PC="1"/>
                <MethodMetric CC="1" Class="ContentPaneLayout" Component="freemind.view.mindmapview" LOC="3" Name="minimumLayoutSize" PC="1"/>
                <MethodMetric CC="3" Class="ContentPaneLayout" Component="freemind.view.mindmapview" LOC="13" Name="preferredLayoutSize" PC="1"/>
                <MethodMetric CC="1" Class="ContentPaneLayout" Component="freemind.view.mindmapview" LOC="2" Name="removeLayoutComponent" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewLayout" Component="freemind.view.mindmapview" LOC="0" Name="layoutNodeMotionListenerView" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewLayout" Component="freemind.view.mindmapview" LOC="0" Name="getMainViewOutPoint" PC="3"/>
                <MethodMetric CC="1" Class="NodeViewLayout" Component="freemind.view.mindmapview" LOC="0" Name="getMainViewInPoint" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewLayout" Component="freemind.view.mindmapview" LOC="0" Name="layoutNodeFoldingComponent" PC="1"/>
                <MethodMetric CC="2" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="5" Name="NodeViewLayoutAdapter" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="2" Name="addLayoutComponent" PC="2"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="2" Name="removeLayoutComponent" PC="1"/>
                <MethodMetric CC="2" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="4" Name="minimumLayoutSize" PC="1"/>
                <MethodMetric CC="2" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="6" Name="preferredLayoutSize" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="8" Name="layoutContainer" PC="1"/>
                <MethodMetric CC="4" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="14" Name="layoutOtherItems" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="0" Name="layout" PC="0"/>
                <MethodMetric CC="3" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="19" Name="setUp" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="8" Name="shutDown" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="3" Name="getModel" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="3" Name="getChildCount" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="3" Name="getContent" PC="0"/>
                <MethodMetric CC="5" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="21" Name="getChildContentHeight" PC="1"/>
                <MethodMetric CC="6" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="24" Name="getChildVerticalShift" PC="1"/>
                <MethodMetric CC="7" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="25" Name="getChildHorizontalShift" PC="0"/>
                <MethodMetric CC="6" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="38" Name="placeRightChildren" PC="1"/>
                <MethodMetric CC="6" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="38" Name="placeLeftChildren" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="3" Name="getVGap" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="3" Name="getSpaceAround" PC="0"/>
                <MethodMetric CC="1" Class="NodeViewLayoutAdapter" Component="freemind.view.mindmapview" LOC="9" Name="layoutNodeFoldingComponent" PC="1"/>
                <MethodMetric CC="1" Class="NodeViewVisitor" Component="freemind.view.mindmapview" LOC="0" Name="visit" PC="1"/>
                <MethodMetric CC="12" Class="PathBBox" Component="freemind.view.mindmapview" LOC="73" Name="getBBox" PC="1"/>
                <MethodMetric CC="1" Class="PathBBox" Component="freemind.view.mindmapview" LOC="6" Name="accum" PC="3"/>
                <MethodMetric CC="1" Class="PathBBox" Component="freemind.view.mindmapview" LOC="3" Name="findQuadZero" PC="3"/>
                <MethodMetric CC="1" Class="PathBBox" Component="freemind.view.mindmapview" LOC="6" Name="accumQuad" PC="8"/>
                <MethodMetric CC="3" Class="PathBBox" Component="freemind.view.mindmapview" LOC="15" Name="findCubicZeros" PC="5"/>
                <MethodMetric CC="1" Class="PathBBox" Component="freemind.view.mindmapview" LOC="6" Name="accumCubic" PC="10"/>
                <MethodMetric CC="2" Class="RightNodeViewLayout" Component="freemind.view.mindmapview" LOC="20" Name="layout" PC="0"/>
                <MethodMetric CC="2" Class="RightNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getInstance" PC="0"/>
                <MethodMetric CC="1" Class="RightNodeViewLayout" Component="freemind.view.mindmapview" LOC="9" Name="layoutNodeMotionListenerView" PC="1"/>
                <MethodMetric CC="1" Class="RightNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getMainViewOutPoint" PC="3"/>
                <MethodMetric CC="1" Class="RightNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getMainViewInPoint" PC="1"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="6" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="2" Class="RootMainView" Component="freemind.view.mindmapview" LOC="12" Name="paint" PC="1"/>
                <MethodMetric CC="3" Class="RootMainView" Component="freemind.view.mindmapview" LOC="11" Name="paintDragOver" PC="1"/>
                <MethodMetric CC="2" Class="RootMainView" Component="freemind.view.mindmapview" LOC="8" Name="paintSelected" PC="1"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="4" Name="paintBackground" PC="2"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="4" Name="getLeftPoint" PC="0"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="5" Name="getCenterPoint" PC="0"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="5" Name="getRightPoint" PC="0"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="3" Name="setDraggedOver" PC="1"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="3" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="3" Name="getAlignment" PC="0"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="3" Name="getTextWidth" PC="0"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="3" Name="getTextX" PC="0"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="3" Name="dropAsSibling" PC="1"/>
                <MethodMetric CC="1" Class="RootMainView" Component="freemind.view.mindmapview" LOC="3" Name="dropPosition" PC="1"/>
                <MethodMetric CC="1" Class="SharpBezierEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="SharpBezierEdgeView" PC="0"/>
                <MethodMetric CC="2" Class="SharpBezierEdgeView" Component="freemind.view.mindmapview" LOC="20" Name="update" PC="0"/>
                <MethodMetric CC="1" Class="SharpBezierEdgeView" Component="freemind.view.mindmapview" LOC="8" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="SharpBezierEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="4" Class="SharpBezierEdgeView" Component="freemind.view.mindmapview" LOC="34" Name="createStart" PC="0"/>
                <MethodMetric CC="1" Class="SharpLinearEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="SharpLinearEdgeView" PC="0"/>
                <MethodMetric CC="1" Class="SharpLinearEdgeView" Component="freemind.view.mindmapview" LOC="9" Name="paint" PC="1"/>
                <MethodMetric CC="1" Class="SharpLinearEdgeView" Component="freemind.view.mindmapview" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="2" Class="VerticalRootNodeViewLayout" Component="freemind.view.mindmapview" LOC="31" Name="layout" PC="0"/>
                <MethodMetric CC="2" Class="VerticalRootNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getInstance" PC="0"/>
                <MethodMetric CC="1" Class="VerticalRootNodeViewLayout" Component="freemind.view.mindmapview" LOC="2" Name="layoutNodeMotionListenerView" PC="1"/>
                <MethodMetric CC="4" Class="VerticalRootNodeViewLayout" Component="freemind.view.mindmapview" LOC="22" Name="getMainViewOutPoint" PC="3"/>
                <MethodMetric CC="1" Class="VerticalRootNodeViewLayout" Component="freemind.view.mindmapview" LOC="4" Name="getMainViewInPoint" PC="1"/>
                <MethodMetric CC="2" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="12" Name="getOptimalWidth" PC="0"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="12" Name="getInsert" PC="0"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="12" Name="getDelete" PC="0"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="12" Name="getUp" PC="0"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="12" Name="getDown" PC="0"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="2" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="2" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="7" Name="maybeShowPopup" PC="1"/>
                <MethodMetric CC="7" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="25" Name="make" PC="0"/>
                <MethodMetric CC="5" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="25" Name="selectTable" PC="2"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="4" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="21" Name="firePopupMenuWillBecomeInvisible" PC="0"/>
                <MethodMetric CC="3" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="12" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="firePopupMenuWillBecomeVisible" PC="0"/>
                <MethodMetric CC="1" Class="AttributePopupMenu" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getTable" PC="0"/>
                <MethodMetric CC="3" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="26" Name="AttributeTable" PC="1"/>
                <MethodMetric CC="2" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="13" Name="getCellRenderer" PC="2"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="getCellEditor" PC="2"/>
                <MethodMetric CC="3" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="0" Name="prepareEditor" PC="3"/>
                <MethodMetric CC="2" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="8" Name="getPreferredScrollableViewportSize" PC="0"/>
                <MethodMetric CC="2" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="getDefaultComboBoxModel" PC="0"/>
                <MethodMetric CC="3" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="10" Name="changeSelection" PC="4"/>
                <MethodMetric CC="3" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="11" Name="changeSelectedRowHeight" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="updateAttributeTable" PC="0"/>
                <MethodMetric CC="2" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="7" Name="updateColumnWidths" PC="0"/>
                <MethodMetric CC="5" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="19" Name="updateRowHeights" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="getTableHeaderHeight" PC="0"/>
                <MethodMetric CC="3" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="11" Name="updateFontSize" PC="2"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getZoom" PC="0"/>
                <MethodMetric CC="3" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="13" Name="tableChanged" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="viewRemoved" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="removeNotify" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getFontSize" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="setModel" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="removeListenerFromEditor" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="removeEditor" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getAttributeTableModel" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getAttributeView" PC="0"/>
                <MethodMetric CC="3" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="13" Name="setOptimalColumnWidths" PC="0"/>
                <MethodMetric CC="4" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="11" Name="insertRow" PC="1"/>
                <MethodMetric CC="2" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="removeRow" PC="1"/>
                <MethodMetric CC="2" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="moveRowUp" PC="1"/>
                <MethodMetric CC="2" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="moveRowDown" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="8" Name="columnWidthChanged" PC="1"/>
                <MethodMetric CC="9" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="40" Name="processKeyBinding" PC="4"/>
                <MethodMetric CC="1" Class="AttributeTable" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="isVisible" PC="0"/>
                <MethodMetric CC="5" Class="MyFocusListener" Component="freemind.view.mindmapview.attributeview" LOC="24" Name="focusGained" PC="1"/>
                <MethodMetric CC="4" Class="MyFocusListener" Component="freemind.view.mindmapview.attributeview" LOC="11" Name="run" PC="0"/>
                <MethodMetric CC="5" Class="MyFocusListener" Component="freemind.view.mindmapview.attributeview" LOC="17" Name="focusLost" PC="1"/>
                <MethodMetric CC="4" Class="HeaderMouseListener" Component="freemind.view.mindmapview.attributeview" LOC="18" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="2" Class="AttributeTableCellRenderer" Component="freemind.view.mindmapview.attributeview" LOC="8" Name="getTableCellRendererComponent" PC="6"/>
                <MethodMetric CC="2" Class="AttributeTableCellRenderer" Component="freemind.view.mindmapview.attributeview" LOC="15" Name="paint" PC="1"/>
                <MethodMetric CC="3" Class="AttributeTableCellRenderer" Component="freemind.view.mindmapview.attributeview" LOC="8" Name="getHeight" PC="0"/>
                <MethodMetric CC="3" Class="AttributeTableCellRenderer" Component="freemind.view.mindmapview.attributeview" LOC="8" Name="getWidth" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="7" Name="AttributeTableModelDecoratorAdapter" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getNode" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getColumnCount" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getColumnClass" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getColumnName" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getColumnWidth" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="setColumnWidth" PC="2"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="addListeners" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="removeListeners" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="viewRemoved" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="tableChanged" PC="1"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="2" Name="editingCanceled" PC="0"/>
                <MethodMetric CC="1" Class="AttributeTableModelDecoratorAdapter" Component="freemind.view.mindmapview.attributeview" LOC="0" Name="areAttributesVisible" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="8" Name="AttributeView" PC="1"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getAttributeRegistry" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getAttributes" PC="0"/>
                <MethodMetric CC="2" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="syncronizeAttributeView" PC="0"/>
                <MethodMetric CC="2" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="12" Name="provideAttributeTable" PC="0"/>
                <MethodMetric CC="2" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="addListeners" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="4" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="15" Name="addTableModelListeners" PC="0"/>
                <MethodMetric CC="3" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="15" Name="removeListeners" PC="0"/>
                <MethodMetric CC="2" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="update" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="areAttributesVisible" PC="0"/>
                <MethodMetric CC="2" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="getExtendedAttributeTableModel" PC="0"/>
                <MethodMetric CC="3" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="16" Name="setViewType" PC="1"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getCurrentAttributeTableModel" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getNode" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="5" Name="stateChanged" PC="1"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getNodeView" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getMapView" PC="0"/>
                <MethodMetric CC="4" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="viewRemoved" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="2" Name="ancestorMoved" PC="1"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="tableChanged" PC="1"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getViewType" PC="0"/>
                <MethodMetric CC="3" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="16" Name="startEditing" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="9" Name="startEditingTable" PC="0"/>
                <MethodMetric CC="1" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="isPopupShown" PC="0"/>
                <MethodMetric CC="3" Class="AttributeView" Component="freemind.view.mindmapview.attributeview" LOC="10" Name="stopEditing" PC="0"/>
                <MethodMetric CC="1" Class="AttributeViewScrollPane" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="AttributeViewScrollPane" PC="1"/>
                <MethodMetric CC="1" Class="AttributeViewScrollPane" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="1" Class="AttributeViewScrollPane" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="getMaximumSize" PC="0"/>
                <MethodMetric CC="1" Class="AttributeViewScrollPane" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="isVisible" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="ExtendedAttributeTableModelDecorator" PC="1"/>
                <MethodMetric CC="2" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="getRowCount" PC="0"/>
                <MethodMetric CC="3" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="9" Name="getValueAt" PC="2"/>
                <MethodMetric CC="1" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="insertRow" PC="1"/>
                <MethodMetric CC="2" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="7" Name="isCellEditable" PC="2"/>
                <MethodMetric CC="1" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="removeRow" PC="1"/>
                <MethodMetric CC="4" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="17" Name="setValueAt" PC="3"/>
                <MethodMetric CC="1" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="stateChanged" PC="1"/>
                <MethodMetric CC="2" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="7" Name="editingCanceled" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="areAttributesVisible" PC="0"/>
                <MethodMetric CC="1" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="moveRowUp" PC="1"/>
                <MethodMetric CC="1" Class="ExtendedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="moveRowDown" PC="1"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="ReducedAttributeTableModelDecorator" PC="1"/>
                <MethodMetric CC="2" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="getIndex" PC="0"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getRowCount" PC="0"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="getValueAt" PC="2"/>
                <MethodMetric CC="2" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="isCellEditable" PC="2"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="calcRow" PC="1"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="4" Name="setValueAt" PC="3"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="insertRow" PC="2"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="addRow" PC="1"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="removeRow" PC="1"/>
                <MethodMetric CC="2" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="6" Name="stateChanged" PC="1"/>
                <MethodMetric CC="4" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="14" Name="rebuildTableModel" PC="0"/>
                <MethodMetric CC="2" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="7" Name="tableChanged" PC="1"/>
                <MethodMetric CC="1" Class="ReducedAttributeTableModelDecorator" Component="freemind.view.mindmapview.attributeview" LOC="3" Name="areAttributesVisible" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="3" Name="DatabaseBasics" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="0" Name="getRole" PC="0"/>
                <MethodMetric CC="2" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="7" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="6" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="5" Name="togglePermanentHook" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="3" Name="setPortProperty" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="5" Name="getPortProperty" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="3" Name="setUpdateThread" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="3" Name="getUpdateThread" PC="0"/>
                <MethodMetric CC="5" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="23" Name="getMapTitle" PC="3"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="3" Name="getPort" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseBasics" Component="plugins.collaboration.database" LOC="3" Name="getHost" PC="0"/>
                <MethodMetric CC="1" Class="ResultHandler" Component="plugins.collaboration.database" LOC="0" Name="processResults" PC="1"/>
                <MethodMetric CC="1" Class="FormDialogValidator" Component="plugins.collaboration.database" LOC="0" Name="isValid" PC="0"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="3" Name="isSuccess" PC="0"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="4" Name="FormDialog" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="8" Name="setUp" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="3" Name="isValid" PC="0"/>
                <MethodMetric CC="2" Class="FormDialog" Component="plugins.collaboration.database" LOC="57" Name="setUp" PC="2"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="3" Name="closeWindow" PC="0"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.database" LOC="4" Name="propertyChange" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="5" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="5" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="2" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="7" Name="shutdownConnection" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onAddChild" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onNewChild" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onRemoveChild" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onRemoveChildren" PC="2"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="3" Name="getRole" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="executeTransaction" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="registerFilter" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="deregisterFilter" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="3" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="processUnfinishedLinks" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnectionHook" Component="plugins.collaboration.database" LOC="2" Name="saveHtml" PC="1"/>
                <MethodMetric CC="3" Class="DatabaseConnector" Component="plugins.collaboration.database" LOC="44" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="3" Class="DatabaseConnector" Component="plugins.collaboration.database" LOC="10" Name="isConnected" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseConnector" Component="plugins.collaboration.database" LOC="3" Name="getRole" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseRegistration" Component="plugins.collaboration.database" LOC="5" Name="DatabaseRegistration" PC="2"/>
                <MethodMetric CC="1" Class="DatabaseRegistration" Component="plugins.collaboration.database" LOC="3" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseRegistration" Component="plugins.collaboration.database" LOC="3" Name="deRegister" PC="0"/>
                <MethodMetric CC="3" Class="DatabaseRegistration" Component="plugins.collaboration.database" LOC="10" Name="isSelected" PC="2"/>
                <MethodMetric CC="3" Class="DatabaseRegistration" Component="plugins.collaboration.database" LOC="10" Name="isMaster" PC="0"/>
                <MethodMetric CC="3" Class="DatabaseRegistration" Component="plugins.collaboration.database" LOC="10" Name="isSlave" PC="0"/>
                <MethodMetric CC="3" Class="DatabaseRegistration" Component="plugins.collaboration.database" LOC="10" Name="isEnabled" PC="2"/>
                <MethodMetric CC="3" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="54" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="4" Name="isValid" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="save" PC="1"/>
                <MethodMetric CC="2" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="13" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onAddChild" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onNewChild" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onRemoveChild" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onRemoveChildren" PC="2"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="3" Name="getRole" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="executeTransaction" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="registerFilter" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="deregisterFilter" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="3" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="processUnfinishedLinks" PC="0"/>
                <MethodMetric CC="1" Class="DatabaseStarter" Component="plugins.collaboration.database" LOC="2" Name="saveHtml" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="getPort" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="setPort" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="getHost" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="setHost" PC="1"/>
                <MethodMetric CC="2" Class="UpdateThread" Component="plugins.collaboration.database" LOC="8" Name="UpdateThread" PC="2"/>
                <MethodMetric CC="3" Class="UpdateThread" Component="plugins.collaboration.database" LOC="31" Name="run" PC="0"/>
                <MethodMetric CC="3" Class="UpdateThread" Component="plugins.collaboration.database" LOC="19" Name="commitSuicide" PC="0"/>
                <MethodMetric CC="2" Class="UpdateThread" Component="plugins.collaboration.database" LOC="13" Name="shutdown" PC="1"/>
                <MethodMetric CC="4" Class="UpdateThread" Component="plugins.collaboration.database" LOC="31" Name="processResults" PC="1"/>
                <MethodMetric CC="3" Class="UpdateThread" Component="plugins.collaboration.database" LOC="28" Name="createNewMap" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="14" Name="executeTransaction" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="9" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="6" Name="insertIntoActionTable" PC="1"/>
                <MethodMetric CC="2" Class="UpdateThread" Component="plugins.collaboration.database" LOC="9" Name="query" PC="2"/>
                <MethodMetric CC="2" Class="UpdateThread" Component="plugins.collaboration.database" LOC="11" Name="update" PC="1"/>
                <MethodMetric CC="2" Class="UpdateThread" Component="plugins.collaboration.database" LOC="13" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="escapeQuotations" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="4" Name="deregisterFilter" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="4" Name="registerFilter" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="11" Name="setupTables" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="insertUser" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="removeUser" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="4" Name="getUserName" PC="0"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="7" Name="createTables" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="3" Name="dropTable" PC="1"/>
                <MethodMetric CC="1" Class="UpdateThread" Component="plugins.collaboration.database" LOC="10" Name="signalEndOfSession" PC="0"/>
                <MethodMetric CC="4" Class="UpdateThread" Component="plugins.collaboration.database" LOC="21" Name="getUsers" PC="0"/>
                <MethodMetric CC="1" Class="JabberStarter" Component="plugins.collaboration.jabber" LOC="5" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="3" Class="JabberListener" Component="plugins.collaboration.jabber.mindmap" LOC="30" Name="JabberListener" PC="6"/>
                <MethodMetric CC="1" Class="JabberListener" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="getSession" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindJabberMessageListener" Component="plugins.collaboration.jabber.mindmap" LOC="4" Name="FreeMindJabberMessageListener" PC="1"/>
                <MethodMetric CC="11" Class="FreeMindJabberMessageListener" Component="plugins.collaboration.jabber.mindmap" LOC="51" Name="messageReceived" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindJabberMessageListener" Component="plugins.collaboration.jabber.mindmap" LOC="18" Name="executeRemoteCommand" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindJabberMessageListener" Component="plugins.collaboration.jabber.mindmap" LOC="10" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="14" Name="JabberSender" PC="2"/>
                <MethodMetric CC="1" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="14" Name="sendMapSharingRequest" PC="2"/>
                <MethodMetric CC="1" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="10" Name="sendMapSharingStopRequest" PC="0"/>
                <MethodMetric CC="1" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="7" Name="createCollaborationAction" PC="2"/>
                <MethodMetric CC="2" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="19" Name="sendMapSharingInvitationResponse" PC="3"/>
                <MethodMetric CC="1" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="marshal" PC="1"/>
                <MethodMetric CC="3" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="10" Name="sendMessage" PC="2"/>
                <MethodMetric CC="1" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="isMapShared" PC="1"/>
                <MethodMetric CC="1" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="setShareMapUser" PC="1"/>
                <MethodMetric CC="1" Class="JabberSender" Component="plugins.collaboration.jabber.mindmap" LOC="15" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="8" Name="MapSharingController" PC="2"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="7" Name="addListeners" PC="0"/>
                <MethodMetric CC="3" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="15" Name="setMapShareRequestAccepted" PC="2"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="7" Name="setMapSharingRequested" PC="3"/>
                <MethodMetric CC="2" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="9" Name="showMapSharingDialogue" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="5" Name="stopSharing" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="4" Name="setSharingStopped" PC="1"/>
                <MethodMetric CC="6" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="0" Name="setState" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="setSendingEnabled" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingController" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="isSendingEnabled" PC="0"/>
                <MethodMetric CC="1" Class="CloseButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="3" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="CloseButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="CloseButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="CloseButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="CloseButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="5" Class="NextButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="23" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="NextButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="NextButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="NextButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="NextButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="3" Class="BackButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="10" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="BackButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="BackButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="BackButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="BackButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="2" Class="AcceptButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="12" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="AcceptButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="AcceptButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="AcceptButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="AcceptButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="2" Class="DeclineButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="8" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="DeclineButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="DeclineButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="1" Class="DeclineButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="DeclineButtonClickListener" Component="plugins.collaboration.jabber.mindmap" LOC="2" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="4" Name="MapSharingWizardView" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="addCloseButtonMouseListener" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="addNextButtonMouseListener" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="addBackButtonMouseListener" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="addAcceptButtonMouseListener" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="addDeclineButtonMouseListener" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="22" Name="buildShareMapSelectionGui" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="27" Name="buildConnectToServerGui" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="17" Name="buildSelectUserGui" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="17" Name="buildNotificationMessageGui" PC="2"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="16" Name="buildMapShareAcceptDeclineGui" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="10" Name="addWizardButtons" PC="2"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="8" Name="addCloseButton" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="7" Name="addAcceptDeclineButtons" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="18" Name="removeUIs" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="6" Name="showMapSharingSelectionDialog" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="6" Name="showConnectToServerDialog" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="6" Name="showSelectUserDialog" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="6" Name="showAwaitMapSharingMessage" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="8" Name="showSharingAcceptedMessage" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="7" Name="showSharingDeclinedMessage" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="7" Name="showSharingStoppedMessage" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="7" Name="showMapShareAcceptDeclineMessage" PC="1"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="isShareMapSelected" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="isWaitForMapSharingSelected" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="getServername" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="getUsername" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="getPassword" PC="0"/>
                <MethodMetric CC="1" Class="MapSharingWizardView" Component="plugins.collaboration.jabber.view" LOC="3" Name="getMapShareUserName" PC="0"/>
                <MethodMetric CC="1" Class="SpringUtilities" Component="plugins.collaboration.jabber.view" LOC="5" Name="printSizes" PC="1"/>
                <MethodMetric CC="6" Class="SpringUtilities" Component="plugins.collaboration.jabber.view" LOC="49" Name="makeGrid" PC="7"/>
                <MethodMetric CC="1" Class="SpringUtilities" Component="plugins.collaboration.jabber.view" LOC="5" Name="getConstraintsForCell" PC="4"/>
                <MethodMetric CC="7" Class="SpringUtilities" Component="plugins.collaboration.jabber.view" LOC="39" Name="makeCompactGrid" PC="7"/>
                <MethodMetric CC="1" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="5" Name="ClientCommunication" PC="4"/>
                <MethodMetric CC="16" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="73" Name="processCommand" PC="1"/>
                <MethodMetric CC="2" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="10" Name="terminateSocket" PC="0"/>
                <MethodMetric CC="1" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="3" Name="toggleHook" PC="0"/>
                <MethodMetric CC="4" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="20" Name="sendLockRequest" PC="0"/>
                <MethodMetric CC="3" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="29" Name="createNewMap" PC="1"/>
                <MethodMetric CC="1" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="3" Name="setController" PC="1"/>
                <MethodMetric CC="1" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="2" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="19" Name="shutdown" PC="0"/>
                <MethodMetric CC="1" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="3" Name="getPort" PC="0"/>
                <MethodMetric CC="1" Class="ClientCommunication" Component="plugins.collaboration.socket" LOC="3" Name="getUserInfo" PC="0"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="7" Name="CommunicationBase" PC="5"/>
                <MethodMetric CC="2" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="19" Name="send" PC="1"/>
                <MethodMetric CC="5" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="47" Name="processAction" PC="0"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="8" Name="run" PC="0"/>
                <MethodMetric CC="2" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="8" Name="printCommand" PC="2"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="0" Name="processCommand" PC="1"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="5" Name="getCurrentState" PC="0"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="5" Name="setCurrentState" PC="1"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="7" Name="sendCommand" PC="3"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="3" Name="close" PC="0"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="3" Name="getActionPair" PC="1"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="3" Name="getIpToSocket" PC="0"/>
                <MethodMetric CC="1" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="3" Name="printWrongState" PC="1"/>
                <MethodMetric CC="8" Class="CommunicationBase" Component="plugins.collaboration.socket" LOC="19" Name="printState" PC="1"/>
                <MethodMetric CC="3" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="50" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="3" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="10" Name="isConnected" PC="0"/>
                <MethodMetric CC="1" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="3" Name="getRole" PC="0"/>
                <MethodMetric CC="1" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="3" Name="getPort" PC="0"/>
                <MethodMetric CC="1" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="3" Name="lock" PC="1"/>
                <MethodMetric CC="1" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="2" Name="broadcastCommand" PC="3"/>
                <MethodMetric CC="1" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="2" Name="unlock" PC="0"/>
                <MethodMetric CC="1" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="2" Name="shutdown" PC="0"/>
                <MethodMetric CC="1" Class="MindMapClient" Component="plugins.collaboration.socket" LOC="3" Name="getMasterInformation" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="6" Name="removeConnection" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="3" Name="setTitle" PC="0"/>
                <MethodMetric CC="3" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="46" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="4" Name="isValid" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="9" Name="switchMeOff" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="save" PC="1"/>
                <MethodMetric CC="3" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="17" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="2" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="18" Name="signalEndOfSession" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onAddChild" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onNewChild" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onRemoveChild" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onRemoveChildren" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="3" Name="getRole" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="3" Name="getPort" PC="0"/>
                <MethodMetric CC="2" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="14" Name="lock" PC="1"/>
                <MethodMetric CC="2" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="7" Name="broadcastCommand" PC="3"/>
                <MethodMetric CC="2" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="9" Name="unlock" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="5" Name="clearLock" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="shutdown" PC="0"/>
                <MethodMetric CC="2" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="8" Name="getLockId" PC="0"/>
                <MethodMetric CC="2" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="11" Name="getUsers" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="8" Name="getMasterInformation" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="processUnfinishedLinks" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMaster" Component="plugins.collaboration.socket" LOC="2" Name="saveHtml" PC="1"/>
                <MethodMetric CC="1" Class="MasterThread" Component="plugins.collaboration.socket" LOC="3" Name="MasterThread" PC="0"/>
                <MethodMetric CC="4" Class="MasterThread" Component="plugins.collaboration.socket" LOC="39" Name="processAction" PC="0"/>
                <MethodMetric CC="1" Class="ServerCommunication" Component="plugins.collaboration.socket" LOC="7" Name="ServerCommunication" PC="3"/>
                <MethodMetric CC="11" Class="ServerCommunication" Component="plugins.collaboration.socket" LOC="85" Name="processCommand" PC="1"/>
                <MethodMetric CC="1" Class="ServerCommunication" Component="plugins.collaboration.socket" LOC="5" Name="terminateSocket" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="4" Name="SocketBasics" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="0" Name="getRole" PC="0"/>
                <MethodMetric CC="2" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="7" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="6" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="5" Name="togglePermanentHook" PC="2"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="3" Name="setPortProperty" PC="1"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="5" Name="getPortProperty" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="0" Name="getPort" PC="0"/>
                <MethodMetric CC="3" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="10" Name="getMapTitle" PC="3"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="0" Name="getMasterInformation" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="3" Name="getPassword" PC="0"/>
                <MethodMetric CC="5" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="18" Name="visit" PC="2"/>
                <MethodMetric CC="4" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="27" Name="filterAction" PC="1"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="3" Name="getEmptyActionPair" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="0" Name="lock" PC="1"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="3" Name="getUserName" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="0" Name="broadcastCommand" PC="3"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="0" Name="unlock" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="4" Name="registerFilter" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="4" Name="deregisterFilter" PC="0"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="9" Name="executeTransaction" PC="1"/>
                <MethodMetric CC="1" Class="SocketBasics" Component="plugins.collaboration.socket" LOC="0" Name="shutdown" PC="0"/>
                <MethodMetric CC="1" Class="FormDialogValidator" Component="plugins.collaboration.socket" LOC="0" Name="isValid" PC="0"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="3" Name="isSuccess" PC="0"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="4" Name="FormDialog" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="8" Name="setUp" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="3" Name="isValid" PC="0"/>
                <MethodMetric CC="2" Class="FormDialog" Component="plugins.collaboration.socket" LOC="57" Name="setUp" PC="2"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="3" Name="closeWindow" PC="0"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="FormDialog" Component="plugins.collaboration.socket" LOC="4" Name="propertyChange" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="5" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="save" PC="1"/>
                <MethodMetric CC="2" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="8" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onAddChild" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onAddChildren" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onNewChild" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onRemoveChild" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onRemoveChildren" PC="2"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onUpdateChildrenHook" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onUpdateNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="getRole" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="getPort" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="lock" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="broadcastCommand" PC="3"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="unlock" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="setClientCommunication" PC="1"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="shutdown" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="getClientCommunication" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="3" Name="getMasterInformation" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="processUnfinishedLinks" PC="0"/>
                <MethodMetric CC="1" Class="SocketConnectionHook" Component="plugins.collaboration.socket" LOC="2" Name="saveHtml" PC="1"/>
                <MethodMetric CC="1" Class="SocketRegistration" Component="plugins.collaboration.socket" LOC="5" Name="SocketRegistration" PC="2"/>
                <MethodMetric CC="1" Class="SocketRegistration" Component="plugins.collaboration.socket" LOC="3" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="SocketRegistration" Component="plugins.collaboration.socket" LOC="3" Name="deRegister" PC="0"/>
                <MethodMetric CC="3" Class="SocketRegistration" Component="plugins.collaboration.socket" LOC="10" Name="isSelected" PC="2"/>
                <MethodMetric CC="3" Class="SocketRegistration" Component="plugins.collaboration.socket" LOC="10" Name="isMaster" PC="0"/>
                <MethodMetric CC="3" Class="SocketRegistration" Component="plugins.collaboration.socket" LOC="10" Name="isSlave" PC="0"/>
                <MethodMetric CC="3" Class="SocketRegistration" Component="plugins.collaboration.socket" LOC="10" Name="isEnabled" PC="2"/>
                <MethodMetric CC="2" Class="TerminateableThread" Component="plugins.collaboration.socket" LOC="7" Name="TerminateableThread" PC="1"/>
                <MethodMetric CC="3" Class="TerminateableThread" Component="plugins.collaboration.socket" LOC="20" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="TerminateableThread" Component="plugins.collaboration.socket" LOC="0" Name="processAction" PC="0"/>
                <MethodMetric CC="3" Class="TerminateableThread" Component="plugins.collaboration.socket" LOC="19" Name="commitSuicide" PC="0"/>
                <MethodMetric CC="1" Class="FreemindHelpStarter" Component="plugins.help" LOC="19" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="2" Class="JZoomedHotEqn" Component="plugins.latex" LOC="10" Name="JZoomedHotEqn" PC="1"/>
                <MethodMetric CC="1" Class="JZoomedHotEqn" Component="plugins.latex" LOC="6" Name="getPreferredSize" PC="0"/>
                <MethodMetric CC="2" Class="JZoomedHotEqn" Component="plugins.latex" LOC="12" Name="paint" PC="1"/>
                <MethodMetric CC="2" Class="JZoomedHotEqn" Component="plugins.latex" LOC="8" Name="setBounds" PC="4"/>
                <MethodMetric CC="2" Class="JZoomedHotEqn" Component="plugins.latex" LOC="8" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="JZoomedHotEqn" Component="plugins.latex" LOC="16" Name="edit" PC="0"/>
                <MethodMetric CC="1" Class="JZoomedHotEqn" Component="plugins.latex" LOC="6" Name="setModel" PC="1"/>
                <MethodMetric CC="1" Class="LatexNodeHook" Component="plugins.latex" LOC="5" Name="LatexNodeHook" PC="0"/>
                <MethodMetric CC="1" Class="LatexNodeHook" Component="plugins.latex" LOC="4" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="LatexNodeHook" Component="plugins.latex" LOC="4" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="4" Class="LatexNodeHook" Component="plugins.latex" LOC="15" Name="deleteViewer" PC="1"/>
                <MethodMetric CC="2" Class="LatexNodeHook" Component="plugins.latex" LOC="8" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="LatexNodeHook" Component="plugins.latex" LOC="5" Name="createViewer" PC="1"/>
                <MethodMetric CC="1" Class="LatexNodeHook" Component="plugins.latex" LOC="3" Name="getContent" PC="1"/>
                <MethodMetric CC="2" Class="LatexNodeHook" Component="plugins.latex" LOC="9" Name="setContent" PC="2"/>
                <MethodMetric CC="1" Class="LatexNodeHook" Component="plugins.latex" LOC="4" Name="loadFrom" PC="1"/>
                <MethodMetric CC="1" Class="LatexNodeHook" Component="plugins.latex" LOC="4" Name="save" PC="1"/>
                <MethodMetric CC="2" Class="LatexNodeHook" Component="plugins.latex" LOC="8" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="4" Class="AddLinkToMapAction" Component="plugins.map" LOC="13" Name="invoke" PC="1"/>
                <MethodMetric CC="3" Class="AddMapImageToNodeAction" Component="plugins.map" LOC="11" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="6" Name="addMapPictureToNode" PC="0"/>
                <MethodMetric CC="3" Class="FreeMindMapController" Component="plugins.map" LOC="11" Name="addPictureToNode" PC="2"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="92" Name="FreeMindMapController" PC="4"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="5" Name="addAccelerator" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="6" Name="placeNode" PC="1"/>
                <MethodMetric CC="3" Class="FreeMindMapController" Component="plugins.map" LOC="14" Name="placeNodeAt" PC="4"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="4" Name="getTileSourceAsString" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getTileSource" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="6" Name="removeNodePosition" PC="1"/>
                <MethodMetric CC="7" Class="FreeMindMapController" Component="plugins.map" LOC="48" Name="showSelectedNodes" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getMaxZoom" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="5" Name="showNode" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="10" Name="setCursorPosition" PC="2"/>
                <MethodMetric CC="3" Class="FreeMindMapController" Component="plugins.map" LOC="11" Name="setCursorPosition" PC="1"/>
                <MethodMetric CC="3" Class="FreeMindMapController" Component="plugins.map" LOC="9" Name="setZoom" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="9" Name="changeTileSource" PC="2"/>
                <MethodMetric CC="3" Class="FreeMindMapController" Component="plugins.map" LOC="10" Name="getTileSourceByName" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getTileSourceName" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="7" Name="addHookToNode" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="9" Class="FreeMindMapController" Component="plugins.map" LOC="31" Name="mouseDragged" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="9" Name="moveMapOnDrag" PC="1"/>
                <MethodMetric CC="4" Class="FreeMindMapController" Component="plugins.map" LOC="12" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="5" Name="setMouseControl" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="14" Name="newNode" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="15" Name="insertNewNode" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="15" Name="editNode" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="4" Name="setCursorPosition" PC="1"/>
                <MethodMetric CC="6" Class="FreeMindMapController" Component="plugins.map" LOC="29" Name="mousePressed" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="4" Name="correctPointByMapCenter" PC="1"/>
                <MethodMetric CC="4" Class="FreeMindMapController" Component="plugins.map" LOC="16" Name="checkHit" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="4" Name="getCoordinateFromMouseEvent" PC="1"/>
                <MethodMetric CC="5" Class="FreeMindMapController" Component="plugins.map" LOC="27" Name="showPopupMenu" PC="1"/>
                <MethodMetric CC="14" Class="FreeMindMapController" Component="plugins.map" LOC="67" Name="mouseReleased" PC="1"/>
                <MethodMetric CC="5" Class="FreeMindMapController" Component="plugins.map" LOC="22" Name="storeMapPosition" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="5" Name="setCursor" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getGlassPane" PC="0"/>
                <MethodMetric CC="4" Class="FreeMindMapController" Component="plugins.map" LOC="12" Name="mouseWheelMoved" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="isMovementEnabled" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="setMovementEnabled" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getMovementMouseButton" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getPopupMenu" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="7" Name="getContextPopupMenu" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="7" Name="getSearchPopupMenu" PC="0"/>
                <MethodMetric CC="4" Class="FreeMindMapController" Component="plugins.map" LOC="0" Name="setMovementMouseButton" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="isWheelZoomEnabled" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="setWheelZoomEnabled" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="2" Name="mouseEntered" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="2" Name="mouseExited" PC="1"/>
                <MethodMetric CC="5" Class="FreeMindMapController" Component="plugins.map" LOC="17" Name="mouseMoved" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="5" Name="setCursorPosition" PC="1"/>
                <MethodMetric CC="5" Class="FreeMindMapController" Component="plugins.map" LOC="37" Name="search" PC="4"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="20" Name="getReverseLookup" PC="2"/>
                <MethodMetric CC="6" Class="FreeMindMapController" Component="plugins.map" LOC="56" Name="getSearchResults" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="21" Name="wget" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="9" Name="getErrorPlace" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="isClickEnabled" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="setClickEnabled" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getmTileSources" PC="0"/>
                <MethodMetric CC="3" Class="FreeMindMapController" Component="plugins.map" LOC="19" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="4" Name="selectContextMenuNode" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="selectNode" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="7" Name="getLink" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="9" Name="getLink" PC="4"/>
                <MethodMetric CC="3" Class="FreeMindMapController" Component="plugins.map" LOC="11" Name="keyTyped" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="2" Name="keyReleased" PC="1"/>
                <MethodMetric CC="8" Class="FreeMindMapController" Component="plugins.map" LOC="32" Name="keyPressed" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getPositionHolderVector" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getPositionHolderIndex" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="checkPositionHolderIndex" PC="1"/>
                <MethodMetric CC="2" Class="FreeMindMapController" Component="plugins.map" LOC="6" Name="setPositionHolderIndex" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="addCursorPositionListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="addNode" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="6" Name="addNode" PC="4"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="4" Name="addSearchResultsToMap" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMapController" Component="plugins.map" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="CursorPositionListener" Component="plugins.map" LOC="0" Name="cursorPositionChanged" PC="1"/>
                <MethodMetric CC="1" Class="TileSourceStore" Component="plugins.map" LOC="5" Name="TileSourceStore" PC="2"/>
                <MethodMetric CC="1" Class="TransportMap" Component="plugins.map" LOC="3" Name="TransportMap" PC="0"/>
                <MethodMetric CC="1" Class="TransportMap" Component="plugins.map" LOC="5" Name="getBaseUrl" PC="0"/>
                <MethodMetric CC="1" Class="TransportMap" Component="plugins.map" LOC="3" Name="getMaxZoom" PC="0"/>
                <MethodMetric CC="1" Class="TransportMap" Component="plugins.map" LOC="3" Name="getTileUpdate" PC="0"/>
                <MethodMetric CC="1" Class="MapQuestOpenMap" Component="plugins.map" LOC="3" Name="MapQuestOpenMap" PC="0"/>
                <MethodMetric CC="1" Class="MapQuestOpenMap" Component="plugins.map" LOC="5" Name="getBaseUrl" PC="0"/>
                <MethodMetric CC="1" Class="MapQuestOpenMap" Component="plugins.map" LOC="3" Name="getMaxZoom" PC="0"/>
                <MethodMetric CC="1" Class="MapQuestOpenMap" Component="plugins.map" LOC="3" Name="getTileUpdate" PC="0"/>
                <MethodMetric CC="1" Class="MapEditTextFieldControl" Component="plugins.map" LOC="6" Name="MapEditTextFieldControl" PC="4"/>
                <MethodMetric CC="2" Class="MapEditTextFieldControl" Component="plugins.map" LOC="8" Name="cancel" PC="0"/>
                <MethodMetric CC="1" Class="MapEditTextFieldControl" Component="plugins.map" LOC="5" Name="ok" PC="1"/>
                <MethodMetric CC="1" Class="MapEditTextFieldControl" Component="plugins.map" LOC="5" Name="endEdit" PC="0"/>
                <MethodMetric CC="1" Class="MapEditTextFieldControl" Component="plugins.map" LOC="2" Name="split" PC="2"/>
                <MethodMetric CC="1" Class="MapEditNoteTextField" Component="plugins.map" LOC="4" Name="MapEditNoteTextField" PC="7"/>
                <MethodMetric CC="1" Class="MapEditNoteTextField" Component="plugins.map" LOC="3" Name="setTextfieldLoaction" PC="1"/>
                <MethodMetric CC="1" Class="MapEditNoteTextField" Component="plugins.map" LOC="3" Name="addTextfield" PC="0"/>
                <MethodMetric CC="1" Class="ChangeTileSource" Component="plugins.map" LOC="4" Name="ChangeTileSource" PC="1"/>
                <MethodMetric CC="1" Class="ChangeTileSource" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ChangeTileSource" Component="plugins.map" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="PlaceNodeAction" Component="plugins.map" LOC="3" Name="PlaceNodeAction" PC="0"/>
                <MethodMetric CC="1" Class="PlaceNodeAction" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ShowNodeAction" Component="plugins.map" LOC="3" Name="ShowNodeAction" PC="0"/>
                <MethodMetric CC="1" Class="ShowNodeAction" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MoveAction" Component="plugins.map" LOC="3" Name="MoveAction" PC="1"/>
                <MethodMetric CC="2" Class="MoveAction" Component="plugins.map" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="6" Class="MoveAction" Component="plugins.map" LOC="32" Name="searchForNearestNode" PC="1"/>
                <MethodMetric CC="1" Class="MoveAction" Component="plugins.map" LOC="8" Name="destinationQuadrantCheck" PC="3"/>
                <MethodMetric CC="1" Class="MoveAction" Component="plugins.map" LOC="0" Name="destinationQuadrantCheck" PC="5"/>
                <MethodMetric CC="1" Class="MoveAction" Component="plugins.map" LOC="3" Name="safeEquals" PC="2"/>
                <MethodMetric CC="1" Class="MoveAction" Component="plugins.map" LOC="3" Name="dist" PC="2"/>
                <MethodMetric CC="1" Class="MoveLeftAction" Component="plugins.map" LOC="3" Name="MoveLeftAction" PC="0"/>
                <MethodMetric CC="2" Class="MoveLeftAction" Component="plugins.map" LOC="4" Name="destinationQuadrantCheck" PC="5"/>
                <MethodMetric CC="1" Class="MoveRightAction" Component="plugins.map" LOC="3" Name="MoveRightAction" PC="0"/>
                <MethodMetric CC="2" Class="MoveRightAction" Component="plugins.map" LOC="4" Name="destinationQuadrantCheck" PC="5"/>
                <MethodMetric CC="1" Class="MoveUpAction" Component="plugins.map" LOC="3" Name="MoveUpAction" PC="0"/>
                <MethodMetric CC="2" Class="MoveUpAction" Component="plugins.map" LOC="4" Name="destinationQuadrantCheck" PC="5"/>
                <MethodMetric CC="1" Class="MoveDownAction" Component="plugins.map" LOC="3" Name="MoveDownAction" PC="0"/>
                <MethodMetric CC="2" Class="MoveDownAction" Component="plugins.map" LOC="4" Name="destinationQuadrantCheck" PC="5"/>
                <MethodMetric CC="1" Class="MoveForwardAction" Component="plugins.map" LOC="3" Name="MoveForwardAction" PC="0"/>
                <MethodMetric CC="2" Class="MoveForwardAction" Component="plugins.map" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MoveForwardAction" Component="plugins.map" LOC="3" Name="isEnabledCheck" PC="0"/>
                <MethodMetric CC="1" Class="MoveForwardAction" Component="plugins.map" LOC="3" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="MoveBackwardAction" Component="plugins.map" LOC="3" Name="MoveBackwardAction" PC="0"/>
                <MethodMetric CC="2" Class="MoveBackwardAction" Component="plugins.map" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MoveBackwardAction" Component="plugins.map" LOC="3" Name="isEnabledCheck" PC="0"/>
                <MethodMetric CC="1" Class="MoveBackwardAction" Component="plugins.map" LOC="3" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="PositionHolder" Component="plugins.map" LOC="6" Name="PositionHolder" PC="3"/>
                <MethodMetric CC="1" Class="PositionHolder" Component="plugins.map" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="PositionHolder" Component="plugins.map" LOC="3" Name="getCoordinate" PC="0"/>
                <MethodMetric CC="1" Class="PositionHolder" Component="plugins.map" LOC="11" Name="hashCode" PC="0"/>
                <MethodMetric CC="7" Class="PositionHolder" Component="plugins.map" LOC="10" Name="equals" PC="1"/>
                <MethodMetric CC="1" Class="MoveHomeAction" Component="plugins.map" LOC="3" Name="MoveHomeAction" PC="0"/>
                <MethodMetric CC="2" Class="MoveHomeAction" Component="plugins.map" LOC="9" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="3" Class="MoveHomeAction" Component="plugins.map" LOC="20" Name="getPosHolder" PC="0"/>
                <MethodMetric CC="1" Class="MoveHomeAction" Component="plugins.map" LOC="3" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="SetHomeAction" Component="plugins.map" LOC="3" Name="SetHomeAction" PC="0"/>
                <MethodMetric CC="1" Class="SetHomeAction" Component="plugins.map" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SetDisplayToFitMapMarkers" Component="plugins.map" LOC="3" Name="SetDisplayToFitMapMarkers" PC="0"/>
                <MethodMetric CC="1" Class="SetDisplayToFitMapMarkers" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ShowMapMarker" Component="plugins.map" LOC="3" Name="ShowMapMarker" PC="0"/>
                <MethodMetric CC="1" Class="ShowMapMarker" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ShowMapMarker" Component="plugins.map" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="TileGridVisible" Component="plugins.map" LOC="3" Name="TileGridVisible" PC="0"/>
                <MethodMetric CC="1" Class="TileGridVisible" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="TileGridVisible" Component="plugins.map" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="ZoomControlsVisible" Component="plugins.map" LOC="3" Name="ZoomControlsVisible" PC="0"/>
                <MethodMetric CC="1" Class="ZoomControlsVisible" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ZoomControlsVisible" Component="plugins.map" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="HideFoldedNodes" Component="plugins.map" LOC="3" Name="HideFoldedNodes" PC="0"/>
                <MethodMetric CC="1" Class="HideFoldedNodes" Component="plugins.map" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="HideFoldedNodes" Component="plugins.map" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="SearchControlVisible" Component="plugins.map" LOC="3" Name="SearchControlVisible" PC="0"/>
                <MethodMetric CC="1" Class="SearchControlVisible" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SearchControlVisible" Component="plugins.map" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="LimitSearchToRegionAction" Component="plugins.map" LOC="3" Name="LimitSearchToRegionAction" PC="0"/>
                <MethodMetric CC="1" Class="LimitSearchToRegionAction" Component="plugins.map" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="LimitSearchToRegionAction" Component="plugins.map" LOC="3" Name="isSelected" PC="2"/>
                <MethodMetric CC="1" Class="GotoSearch" Component="plugins.map" LOC="3" Name="GotoSearch" PC="0"/>
                <MethodMetric CC="2" Class="GotoSearch" Component="plugins.map" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="AddMapPictureToNode" Component="plugins.map" LOC="3" Name="AddMapPictureToNode" PC="0"/>
                <MethodMetric CC="1" Class="AddMapPictureToNode" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NewNodeAction" Component="plugins.map" LOC="3" Name="NewNodeAction" PC="0"/>
                <MethodMetric CC="1" Class="NewNodeAction" Component="plugins.map" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NewNodeReverseLookupAction" Component="plugins.map" LOC="3" Name="NewNodeReverseLookupAction" PC="0"/>
                <MethodMetric CC="3" Class="NewNodeReverseLookupAction" Component="plugins.map" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="EditNodeInContextMenu" Component="plugins.map" LOC="3" Name="EditNodeInContextMenu" PC="0"/>
                <MethodMetric CC="4" Class="EditNodeInContextMenu" Component="plugins.map" LOC="17" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="MaxmimalZoomToCursorAction" Component="plugins.map" LOC="3" Name="MaxmimalZoomToCursorAction" PC="0"/>
                <MethodMetric CC="2" Class="MaxmimalZoomToCursorAction" Component="plugins.map" LOC="8" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ZoomAction" Component="plugins.map" LOC="4" Name="ZoomAction" PC="1"/>
                <MethodMetric CC="3" Class="ZoomAction" Component="plugins.map" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CopyLinkToClipboardAction" Component="plugins.map" LOC="3" Name="CopyLinkToClipboardAction" PC="0"/>
                <MethodMetric CC="2" Class="CopyLinkToClipboardAction" Component="plugins.map" LOC="13" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CopyCoordinatesToClipboardAction" Component="plugins.map" LOC="3" Name="CopyCoordinatesToClipboardAction" PC="0"/>
                <MethodMetric CC="2" Class="CopyCoordinatesToClipboardAction" Component="plugins.map" LOC="10" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CopyCoordinatesToClipboardAction" Component="plugins.map" LOC="3" Name="getCoordinates" PC="1"/>
                <MethodMetric CC="1" Class="ShowNodeMapInContextMenu" Component="plugins.map" LOC="3" Name="ShowNodeMapInContextMenu" PC="0"/>
                <MethodMetric CC="2" Class="ShowNodeMapInContextMenu" Component="plugins.map" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SelectNodeInContextMenu" Component="plugins.map" LOC="3" Name="SelectNodeInContextMenu" PC="0"/>
                <MethodMetric CC="2" Class="SelectNodeInContextMenu" Component="plugins.map" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SelectNodeAndCloseInContextMenu" Component="plugins.map" LOC="3" Name="SelectNodeAndCloseInContextMenu" PC="0"/>
                <MethodMetric CC="2" Class="SelectNodeAndCloseInContextMenu" Component="plugins.map" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="RemoveNodeLocationInContextMenu" Component="plugins.map" LOC="3" Name="RemoveNodeLocationInContextMenu" PC="0"/>
                <MethodMetric CC="2" Class="RemoveNodeLocationInContextMenu" Component="plugins.map" LOC="6" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ExportMapAction" Component="plugins.map" LOC="3" Name="ExportMapAction" PC="0"/>
                <MethodMetric CC="2" Class="ExportMapAction" Component="plugins.map" LOC="22" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ControllerPopupMenuListener" Component="plugins.map" LOC="3" Name="popupMenuWillBecomeVisible" PC="1"/>
                <MethodMetric CC="1" Class="ControllerPopupMenuListener" Component="plugins.map" LOC="3" Name="popupMenuWillBecomeInvisible" PC="1"/>
                <MethodMetric CC="1" Class="ControllerPopupMenuListener" Component="plugins.map" LOC="3" Name="popupMenuCanceled" PC="1"/>
                <MethodMetric CC="2" Class="AddSearchResultsToMapTask" Component="plugins.map" LOC="7" Name="AddSearchResultsToMapTask" PC="1"/>
                <MethodMetric CC="1" Class="AddSearchResultsToMapTask" Component="plugins.map" LOC="13" Name="processAction" PC="0"/>
                <MethodMetric CC="1" Class="AddSearchResultsToMapTask" Component="plugins.map" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="14" Name="JCursorMapViewer" PC="4"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="3" Name="getFreeMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="3" Name="isUseCursor" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="4" Name="setUseCursor" PC="1"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="3" Name="getCursorPosition" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="4" Name="setCursorPosition" PC="1"/>
                <MethodMetric CC="6" Class="JCursorMapViewer" Component="plugins.map" LOC="28" Name="paintComponent" PC="1"/>
                <MethodMetric CC="2" Class="JCursorMapViewer" Component="plugins.map" LOC="13" Name="getRectangle" PC="2"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="3" Name="getTileController" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="6" Name="initializeZoomSlider" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="4" Name="setHideFoldedNodes" PC="1"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="3" Name="isHideFoldedNodes" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="4" Name="setRectangular" PC="2"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="3" Name="isDrawRectangular" PC="0"/>
                <MethodMetric CC="1" Class="JCursorMapViewer" Component="plugins.map" LOC="3" Name="setDrawRectangular" PC="1"/>
                <MethodMetric CC="15" Class="MapDialog" Component="plugins.map" LOC="195" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="8" Name="keyPressed" PC="1"/>
                <MethodMetric CC="4" Class="MapDialog" Component="plugins.map" LOC="22" Name="keyPressed" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="12" Name="valueChanged" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="6" Name="clearIndexes" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="5" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="6" Name="mouseClicked" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="7" Name="propertyChange" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="8" Name="addMarkersToMap" PC="0"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="8" Name="changeVisibilityOfNode" PC="2"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getRegistration" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="4" Name="toggleSearchBar" PC="0"/>
                <MethodMetric CC="4" Class="MapDialog" Component="plugins.map" LOC="33" Name="toggleSearchBar" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="4" Name="focusSearchTerm" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getAllMapNodePositionHolders" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getMapNodePositionHolders" PC="0"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="11" Name="addMapMarker" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="6" Name="removeMapMarker" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getFreeMindMapController" PC="0"/>
                <MethodMetric CC="4" Class="MapDialog" Component="plugins.map" LOC="44" Name="disposeDialog" PC="0"/>
                <MethodMetric CC="3" Class="MapDialog" Component="plugins.map" LOC="4" Name="updateZoomParameters" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="format" PC="2"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="5" Name="processCommand" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="isMapModuleChangeAllowed" PC="4"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="2" Name="beforeMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="afterMapClose" PC="2"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="afterMapModuleChange" PC="4"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="2" Name="numberOfOpenMapInformation" PC="2"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="registerMapNode" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="deregisterMapNode" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="8" Name="onUpdateNodeHook" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="2" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="3" Class="MapDialog" Component="plugins.map" LOC="10" Name="selectMapPosition" PC="2"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="2" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="2" Name="onSaveNode" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="onSelectionChange" PC="2"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getCloseAction" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="isSearchBarVisible" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getMarkerMap" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="8" Name="displaySearchItem" PC="1"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="8" Name="getPlace" PC="1"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getMapDialog" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="nodeVisibilityChanged" PC="2"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="getStatusLabel" PC="0"/>
                <MethodMetric CC="6" Class="MapDialog" Component="plugins.map" LOC="24" Name="search" PC="2"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="setSingleSearch" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="3" Name="isLimitSearchToRegion" PC="0"/>
                <MethodMetric CC="2" Class="MapDialog" Component="plugins.map" LOC="10" Name="toggleLimitSearchToRegion" PC="0"/>
                <MethodMetric CC="1" Class="MapDialog" Component="plugins.map" LOC="5" Name="addSearchResultsToMap" PC="0"/>
                <MethodMetric CC="1" Class="CloseAction" Component="plugins.map" LOC="3" Name="CloseAction" PC="0"/>
                <MethodMetric CC="1" Class="CloseAction" Component="plugins.map" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ResultTableModel" Component="plugins.map" LOC="5" Name="ResultTableModel" PC="2"/>
                <MethodMetric CC="3" Class="ResultTableModel" Component="plugins.map" LOC="0" Name="getColumnClass" PC="1"/>
                <MethodMetric CC="1" Class="ResultTableModel" Component="plugins.map" LOC="8" Name="addPlace" PC="1"/>
                <MethodMetric CC="2" Class="ResultTableModel" Component="plugins.map" LOC="7" Name="getMapSearchMarkerLocation" PC="1"/>
                <MethodMetric CC="1" Class="ResultTableModel" Component="plugins.map" LOC="3" Name="getPlace" PC="1"/>
                <MethodMetric CC="1" Class="ResultTableModel" Component="plugins.map" LOC="3" Name="getColumnName" PC="1"/>
                <MethodMetric CC="1" Class="ResultTableModel" Component="plugins.map" LOC="3" Name="getRowCount" PC="0"/>
                <MethodMetric CC="1" Class="ResultTableModel" Component="plugins.map" LOC="3" Name="getColumnCount" PC="0"/>
                <MethodMetric CC="4" Class="ResultTableModel" Component="plugins.map" LOC="14" Name="getValueAt" PC="2"/>
                <MethodMetric CC="2" Class="ResultTableModel" Component="plugins.map" LOC="10" Name="clear" PC="0"/>
                <MethodMetric CC="1" Class="ResultTableModel" Component="plugins.map" LOC="4" Name="cursorPositionChanged" PC="1"/>
                <MethodMetric CC="2" Class="MapMarkerBase" Component="plugins.map" LOC="7" Name="MapMarkerBase" PC="1"/>
                <MethodMetric CC="2" Class="MapMarkerBase" Component="plugins.map" LOC="26" Name="paint" PC="2"/>
                <MethodMetric CC="1" Class="MapMarkerBase" Component="plugins.map" LOC="6" Name="paintCenter" PC="2"/>
                <MethodMetric CC="1" Class="MapMarkerBase" Component="plugins.map" LOC="6" Name="adjustToTextfieldLocation" PC="1"/>
                <MethodMetric CC="2" Class="MapMarkerBase" Component="plugins.map" LOC="8" Name="checkHit" PC="2"/>
                <MethodMetric CC="1" Class="MapMarkerBase" Component="plugins.map" LOC="3" Name="setSelected" PC="1"/>
                <MethodMetric CC="1" Class="MapMarkerBase" Component="plugins.map" LOC="3" Name="isSelected" PC="0"/>
                <MethodMetric CC="1" Class="MapMarkerBase" Component="plugins.map" LOC="3" Name="getCoordinate" PC="0"/>
                <MethodMetric CC="1" Class="MapMarkerLocation" Component="plugins.map" LOC="5" Name="MapMarkerLocation" PC="2"/>
                <MethodMetric CC="1" Class="MapMarkerLocation" Component="plugins.map" LOC="6" Name="update" PC="0"/>
                <MethodMetric CC="1" Class="MapMarkerLocation" Component="plugins.map" LOC="3" Name="getLat" PC="0"/>
                <MethodMetric CC="1" Class="MapMarkerLocation" Component="plugins.map" LOC="3" Name="getLon" PC="0"/>
                <MethodMetric CC="1" Class="MapMarkerLocation" Component="plugins.map" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="MapMarkerLocation" Component="plugins.map" LOC="3" Name="getNodePositionHolder" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="4" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getRegistration" PC="0"/>
                <MethodMetric CC="4" Class="MapNodePositionHolder" Component="plugins.map" LOC="16" Name="showTooltip" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="4" Name="shutdownMapHook" PC="0"/>
                <MethodMetric CC="3" Class="MapNodePositionHolder" Component="plugins.map" LOC="16" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="toString" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="toString" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="10" Name="loadFrom" PC="1"/>
                <MethodMetric CC="2" Class="MapNodePositionHolder" Component="plugins.map" LOC="12" Name="fromString" PC="1"/>
                <MethodMetric CC="2" Class="MapNodePositionHolder" Component="plugins.map" LOC="12" Name="intFromString" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="changePosition" PC="4"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getPosition" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getHook" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="setTileSource" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getTileSource" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="setPosition" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getMapCenter" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="setMapCenter" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getZoom" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="setZoom" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getNode" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="6" Name="getImageHtml" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="10" Name="getImageTag" PC="0"/>
                <MethodMetric CC="6" Class="MapNodePositionHolder" Component="plugins.map" LOC="29" Name="getTooltipFile" PC="1"/>
                <MethodMetric CC="2" Class="MapNodePositionHolder" Component="plugins.map" LOC="22" Name="createToolTip" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getNodeId" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="getMindMapController" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="5" Name="recreateTooltip" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="hasFoldedParents" PC="0"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="5" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="5" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionHolder" Component="plugins.map" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="2" Class="MapNodePositionHolder" Component="plugins.map" LOC="8" Name="saveHtml" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionListener" Component="plugins.map" LOC="0" Name="registerMapNode" PC="1"/>
                <MethodMetric CC="1" Class="MapNodePositionListener" Component="plugins.map" LOC="0" Name="deregisterMapNode" PC="1"/>
                <MethodMetric CC="1" Class="MapSearchMarkerLocation" Component="plugins.map" LOC="6" Name="MapSearchMarkerLocation" PC="2"/>
                <MethodMetric CC="1" Class="MapSearchMarkerLocation" Component="plugins.map" LOC="5" Name="update" PC="0"/>
                <MethodMetric CC="1" Class="MapSearchMarkerLocation" Component="plugins.map" LOC="3" Name="getLat" PC="0"/>
                <MethodMetric CC="1" Class="MapSearchMarkerLocation" Component="plugins.map" LOC="3" Name="getLon" PC="0"/>
                <MethodMetric CC="2" Class="MapSearchMarkerLocation" Component="plugins.map" LOC="17" Name="paintCenter" PC="2"/>
                <MethodMetric CC="1" Class="MapSearchMarkerLocation" Component="plugins.map" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="MapSearchMarkerLocation" Component="plugins.map" LOC="3" Name="getPlace" PC="0"/>
                <MethodMetric CC="2" Class="Registration" Component="plugins.map" LOC="17" Name="Registration" PC="2"/>
                <MethodMetric CC="6" Class="Registration" Component="plugins.map" LOC="37" Name="getImageForTooltip" PC="3"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="4" Name="deRegister" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="4" Name="register" PC="0"/>
                <MethodMetric CC="2" Class="Registration" Component="plugins.map" LOC="12" Name="registerMapNode" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="getMapNodePositionHolders" PC="0"/>
                <MethodMetric CC="2" Class="Registration" Component="plugins.map" LOC="12" Name="deregisterMapNode" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="registerMapNodePositionListener" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="deregisterMapNodePositionListener" PC="1"/>
                <MethodMetric CC="3" Class="Registration" Component="plugins.map" LOC="24" Name="createTileLoader" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="4" Name="getCacheMaxAge" PC="0"/>
                <MethodMetric CC="2" Class="Registration" Component="plugins.map" LOC="9" Name="getCacheDirectory" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="7" Name="changePosition" PC="5"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="12" Name="createPlaceNodeXmlActionAction" PC="5"/>
                <MethodMetric CC="3" Class="Registration" Component="plugins.map" LOC="18" Name="act" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="getDoActionClass" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="getTileCache" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="2" Name="tileLoadingFinished" PC="2"/>
                <MethodMetric CC="5" Class="Registration" Component="plugins.map" LOC="17" Name="isEnabled" PC="2"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="getMapDialog" PC="0"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="setMapDialog" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="registerNodeVisibilityListener" PC="1"/>
                <MethodMetric CC="1" Class="Registration" Component="plugins.map" LOC="3" Name="deregisterNodeVisibilityListener" PC="1"/>
                <MethodMetric CC="2" Class="Registration" Component="plugins.map" LOC="11" Name="fireNodeVisibilityChanged" PC="2"/>
                <MethodMetric CC="1" Class="CachePurger" Component="plugins.map" LOC="4" Name="CachePurger" PC="2"/>
                <MethodMetric CC="4" Class="CachePurger" Component="plugins.map" LOC="22" Name="run" PC="0"/>
                <MethodMetric CC="3" Class="CachePurger" Component="plugins.map" LOC="20" Name="purgeDirectory" PC="1"/>
                <MethodMetric CC="1" Class="AgeFilter" Component="plugins.map" LOC="3" Name="AgeFilter" PC="1"/>
                <MethodMetric CC="1" Class="AgeFilter" Component="plugins.map" LOC="3" Name="accept" PC="1"/>
                <MethodMetric CC="1" Class="MapDialogPropertyContributor" Component="plugins.map" LOC="3" Name="MapDialogPropertyContributor" PC="1"/>
                <MethodMetric CC="1" Class="MapDialogPropertyContributor" Component="plugins.map" LOC="8" Name="getControls" PC="1"/>
                <MethodMetric CC="1" Class="NodeVisibilityListener" Component="plugins.map" LOC="0" Name="nodeVisibilityChanged" PC="2"/>
                <MethodMetric CC="3" Class="RemoveMapToNodeAction" Component="plugins.map" LOC="12" Name="invoke" PC="1"/>
                <MethodMetric CC="8" Class="SearchInMapForNodeTextAction" Component="plugins.map" LOC="46" Name="invoke" PC="1"/>
                <MethodMetric CC="2" Class="SearchInMapForNodeTextAction" Component="plugins.map" LOC="9" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="SearchInMapForNodeTextAction" Component="plugins.map" LOC="3" Name="getRegistration" PC="0"/>
                <MethodMetric CC="4" Class="ShowMapToNodeAction" Component="plugins.map" LOC="20" Name="invoke" PC="1"/>
                <MethodMetric CC="1" Class="ShowMapToNodeAction" Component="plugins.map" LOC="3" Name="getRegistration" PC="0"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="2" Name="TileImage" PC="0"/>
                <MethodMetric CC="6" Class="TileImage" Component="plugins.map" LOC="18" Name="isLoaded" PC="0"/>
                <MethodMetric CC="5" Class="TileImage" Component="plugins.map" LOC="20" Name="createImage" PC="0"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="3" Name="isDrawingDone" PC="0"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="8" Name="drawCross" PC="0"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="10" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="10" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="12" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="3" Name="getImage" PC="0"/>
                <MethodMetric CC="3" Class="TileImage" Component="plugins.map" LOC="12" Name="setTiles" PC="8"/>
                <MethodMetric CC="2" Class="TileImage" Component="plugins.map" LOC="7" Name="imageUpdate" PC="6"/>
                <MethodMetric CC="5" Class="TileImage" Component="plugins.map" LOC="13" Name="hasErrors" PC="0"/>
                <MethodMetric CC="1" Class="TileImage" Component="plugins.map" LOC="3" Name="isImageCreated" PC="0"/>
                <MethodMetric CC="3" Class="ScriptEditor" Component="plugins.script" LOC="14" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="AttributeHolder" Component="plugins.script" LOC="5" Name="AttributeHolder" PC="2"/>
                <MethodMetric CC="1" Class="NodeScriptModel" Component="plugins.script" LOC="5" Name="NodeScriptModel" PC="3"/>
                <MethodMetric CC="1" Class="NodeScriptModel" Component="plugins.script" LOC="3" Name="decorateDialog" PC="2"/>
                <MethodMetric CC="1" Class="NodeScriptModel" Component="plugins.script" LOC="5" Name="executeScript" PC="3"/>
                <MethodMetric CC="1" Class="NodeScriptModel" Component="plugins.script" LOC="3" Name="getAmountOfScripts" PC="0"/>
                <MethodMetric CC="1" Class="NodeScriptModel" Component="plugins.script" LOC="4" Name="getScript" PC="1"/>
                <MethodMetric CC="3" Class="NodeScriptModel" Component="plugins.script" LOC="11" Name="setScript" PC="2"/>
                <MethodMetric CC="1" Class="NodeScriptModel" Component="plugins.script" LOC="3" Name="storeDialogPositions" PC="3"/>
                <MethodMetric CC="5" Class="NodeScriptModel" Component="plugins.script" LOC="16" Name="endDialog" PC="1"/>
                <MethodMetric CC="1" Class="NodeScriptModel" Component="plugins.script" LOC="3" Name="isDirty" PC="0"/>
                <MethodMetric CC="4" Class="NodeScriptModel" Component="plugins.script" LOC="22" Name="addNewScript" PC="0"/>
                <MethodMetric CC="4" Class="ScriptEditorPanel" Component="plugins.script" LOC="89" Name="ScriptEditorPanel" PC="3"/>
                <MethodMetric CC="1" Class="ScriptEditorPanel" Component="plugins.script" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorPanel" Component="plugins.script" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="2" Class="ScriptEditorPanel" Component="plugins.script" LOC="4" Name="valueChanged" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorPanel" Component="plugins.script" LOC="10" Name="caretUpdate" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorPanel" Component="plugins.script" LOC="5" Name="addAction" PC="2"/>
                <MethodMetric CC="2" Class="ScriptEditorPanel" Component="plugins.script" LOC="7" Name="updateFields" PC="0"/>
                <MethodMetric CC="3" Class="ScriptEditorPanel" Component="plugins.script" LOC="15" Name="select" PC="1"/>
                <MethodMetric CC="2" Class="ScriptEditorPanel" Component="plugins.script" LOC="6" Name="storeCurrent" PC="0"/>
                <MethodMetric CC="5" Class="ScriptEditorPanel" Component="plugins.script" LOC="19" Name="disposeDialog" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorPanel" Component="plugins.script" LOC="3" Name="getPrintStream" PC="0"/>
                <MethodMetric CC="3" Class="ScriptEditorPanel" Component="plugins.script" LOC="15" Name="getErrorHandler" PC="0"/>
                <MethodMetric CC="3" Class="ScriptEditorPanel" Component="plugins.script" LOC="10" Name="gotoLine" PC="1"/>
                <MethodMetric CC="1" Class="ResultFieldStream" Component="plugins.script" LOC="3" Name="write" PC="1"/>
                <MethodMetric CC="1" Class="ResultFieldStream" Component="plugins.script" LOC="3" Name="write" PC="1"/>
                <MethodMetric CC="1" Class="RunAction" Component="plugins.script" LOC="3" Name="RunAction" PC="1"/>
                <MethodMetric CC="2" Class="RunAction" Component="plugins.script" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="SignAction" Component="plugins.script" LOC="3" Name="SignAction" PC="1"/>
                <MethodMetric CC="2" Class="SignAction" Component="plugins.script" LOC="11" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="CancelAction" Component="plugins.script" LOC="3" Name="CancelAction" PC="1"/>
                <MethodMetric CC="1" Class="CancelAction" Component="plugins.script" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ExitAction" Component="plugins.script" LOC="3" Name="ExitAction" PC="1"/>
                <MethodMetric CC="1" Class="ExitAction" Component="plugins.script" LOC="4" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="NewScriptAction" Component="plugins.script" LOC="3" Name="NewScriptAction" PC="1"/>
                <MethodMetric CC="1" Class="NewScriptAction" Component="plugins.script" LOC="7" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="ScriptHolder" Component="plugins.script" LOC="5" Name="ScriptHolder" PC="2"/>
                <MethodMetric CC="1" Class="ScriptHolder" Component="plugins.script" LOC="3" Name="getScript" PC="0"/>
                <MethodMetric CC="1" Class="ScriptHolder" Component="plugins.script" LOC="3" Name="getScriptName" PC="0"/>
                <MethodMetric CC="1" Class="ScriptHolder" Component="plugins.script" LOC="4" Name="setScript" PC="1"/>
                <MethodMetric CC="1" Class="ScriptHolder" Component="plugins.script" LOC="4" Name="setScriptName" PC="1"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="getAmountOfScripts" PC="0"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="getScript" PC="1"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="setScript" PC="2"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="executeScript" PC="3"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="storeDialogPositions" PC="3"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="decorateDialog" PC="2"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="endDialog" PC="1"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="isDirty" PC="0"/>
                <MethodMetric CC="1" Class="ScriptModel" Component="plugins.script" LOC="0" Name="addNewScript" PC="0"/>
                <MethodMetric CC="2" Class="ScriptingEngine" Component="plugins.script" LOC="17" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="2" Class="ScriptingEngine" Component="plugins.script" LOC="12" Name="performExternalScript" PC="3"/>
                <MethodMetric CC="1" Class="ScriptingEngine" Component="plugins.script" LOC="2" Name="gotoLine" PC="1"/>
                <MethodMetric CC="6" Class="ScriptingEngine" Component="plugins.script" LOC="24" Name="performScriptOperation" PC="2"/>
                <MethodMetric CC="1" Class="ScriptingEngine" Component="plugins.script" LOC="2" Name="gotoLine" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingEngine" Component="plugins.script" LOC="8" Name="findLineNumberInString" PC="2"/>
                <MethodMetric CC="15" Class="ScriptingEngine" Component="plugins.script" LOC="130" Name="executeScript" PC="7"/>
                <MethodMetric CC="2" Class="ScriptingEngine" Component="plugins.script" LOC="14" Name="evaluate" PC="2"/>
                <MethodMetric CC="1" Class="ErrorHandler" Component="plugins.script" LOC="0" Name="gotoLine" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingRegistration" Component="plugins.script" LOC="5" Name="ScriptingRegistration" PC="2"/>
                <MethodMetric CC="1" Class="ScriptingRegistration" Component="plugins.script" LOC="17" Name="register" PC="0"/>
                <MethodMetric CC="1" Class="ScriptingRegistration" Component="plugins.script" LOC="7" Name="startEditor" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingRegistration" Component="plugins.script" LOC="5" Name="deRegister" PC="0"/>
                <MethodMetric CC="2" Class="ScriptingRegistration" Component="plugins.script" LOC="7" Name="act" PC="2"/>
                <MethodMetric CC="1" Class="ScriptingRegistration" Component="plugins.script" LOC="7" Name="executeScript" PC="2"/>
                <MethodMetric CC="1" Class="ScriptingRegistration" Component="plugins.script" LOC="2" Name="gotoLine" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingRegistration" Component="plugins.script" LOC="3" Name="getScriptCookies" PC="0"/>
                <MethodMetric CC="3" Class="ScriptingRegistration" Component="plugins.script" LOC="20" Name="startupDone" PC="0"/>
                <MethodMetric CC="1" Class="ScriptingPluginPropertyContributor" Component="plugins.script" LOC="3" Name="ScriptingPluginPropertyContributor" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingPluginPropertyContributor" Component="plugins.script" LOC="11" Name="getControls" PC="1"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="4" Name="PatternScriptModel" PC="1"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="decorateDialog" PC="2"/>
                <MethodMetric CC="2" Class="PatternScriptModel" Component="plugins.script" LOC="5" Name="endDialog" PC="1"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="executeScript" PC="3"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="getAmountOfScripts" PC="0"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="getScript" PC="1"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="isDirty" PC="0"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="setScript" PC="2"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="storeDialogPositions" PC="3"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="getScript" PC="0"/>
                <MethodMetric CC="1" Class="PatternScriptModel" Component="plugins.script" LOC="3" Name="addNewScript" PC="0"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="8" Name="ScriptingSecurityManager" PC="3"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkAccept" PC="2"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkConnect" PC="3"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkConnect" PC="2"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkListen" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkMulticast" PC="2"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkMulticast" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkSetFactory" PC="0"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkExec" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="9" Name="checkLink" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkDelete" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkRead" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkRead" PC="2"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkRead" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkWrite" PC="1"/>
                <MethodMetric CC="2" Class="ScriptingSecurityManager" Component="plugins.script" LOC="4" Name="checkWrite" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="3" Name="getException" PC="2"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkAccess" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkAccess" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkAwtEventQueueAccess" PC="0"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkCreateClassLoader" PC="0"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkExit" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkMemberAccess" PC="2"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkPackageAccess" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkPackageDefinition" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="3" Name="checkPermission" PC="2"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="3" Name="checkPermission" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkPrintJobAccess" PC="0"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkPropertiesAccess" PC="0"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkPropertyAccess" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkSecurityAccess" PC="1"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="2" Name="checkSystemClipboardAccess" PC="0"/>
                <MethodMetric CC="1" Class="ScriptingSecurityManager" Component="plugins.script" LOC="3" Name="checkTopLevelWindow" PC="1"/>
                <MethodMetric CC="1" Class="SignedScriptHandler" Component="plugins.script" LOC="2" Name="SignedScriptHandler" PC="0"/>
                <MethodMetric CC="3" Class="SignedScriptHandler" Component="plugins.script" LOC="22" Name="initializeKeystore" PC="1"/>
                <MethodMetric CC="4" Class="SignedScriptHandler" Component="plugins.script" LOC="33" Name="signScript" PC="3"/>
                <MethodMetric CC="4" Class="SignedScriptHandler" Component="plugins.script" LOC="39" Name="isScriptSigned" PC="2"/>
                <MethodMetric CC="2" Class="ScriptContents" Component="plugins.script" LOC="3" Name="ScriptContents" PC="0"/>
                <MethodMetric CC="3" Class="ScriptContents" Component="plugins.script" LOC="23" Name="ScriptContents" PC="1"/>
                <MethodMetric CC="2" Class="ScriptContents" Component="plugins.script" LOC="6" Name="toString" PC="0"/>
                <MethodMetric CC="8" Class="ExportPdf" Component="plugins.svg" LOC="46" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="4" Class="ExportPdf" Component="plugins.svg" LOC="33" Name="choosePaper" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdf" Component="plugins.svg" LOC="3" Name="exportAsPdf" PC="3"/>
                <MethodMetric CC="5" Class="ExportPdf" Component="plugins.svg" LOC="31" Name="exportAsPdf" PC="4"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="3" Name="getFormat" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="3" Name="getOrientation" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="3" Name="setOrientation" PC="1"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="6" Name="ExportPdfDialog" PC="3"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="64" Name="initialize" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="4" Class="ExportPdfDialog" Component="plugins.svg" LOC="15" Name="initDefaults" PC="0"/>
                <MethodMetric CC="3" Class="ExportPdfDialog" Component="plugins.svg" LOC="5" Name="storeDefaults" PC="0"/>
                <MethodMetric CC="2" Class="ExportPdfDialog" Component="plugins.svg" LOC="11" Name="okPressed" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="4" Name="dispose" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfDialog" Component="plugins.svg" LOC="3" Name="getResult" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfPapers" Component="plugins.svg" LOC="3" Name="ExportPdfPapers" PC="0"/>
                <MethodMetric CC="2" Class="ExportPdfPapers" Component="plugins.svg" LOC="8" Name="getPaperNames" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfPapers" Component="plugins.svg" LOC="10" Name="initPapers" PC="0"/>
                <MethodMetric CC="1" Class="ExportPdfPapers" Component="plugins.svg" LOC="6" Name="addPaper" PC="2"/>
                <MethodMetric CC="2" Class="ExportPdfPapers" Component="plugins.svg" LOC="10" Name="determinePaper" PC="1"/>
                <MethodMetric CC="3" Class="ExportSvg" Component="plugins.svg" LOC="25" Name="startupMapHook" PC="0"/>
                <MethodMetric CC="1" Class="ExportVectorGraphic" Component="plugins.svg" LOC="14" Name="fillSVGGraphics2D" PC="1"/>
                <MethodMetric CC="4" Class="ExportVectorGraphic" Component="plugins.svg" LOC="27" Name="fillSVGGraphics2D" PC="2"/>
                <MethodMetric CC="1" Class="ExportVectorGraphic" Component="plugins.svg" LOC="15" Name="createSvgGraphics2D" PC="0"/>
                <MethodMetric CC="1" Class="ExportVectorGraphic" Component="plugins.svg" LOC="17" Name="transForm" PC="4"/>
                <MethodMetric CC="2" Class="AllTests" Component="tests.freemind" LOC="4" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="AllTests" Component="tests.freemind" LOC="17" Name="suite" PC="0"/>
                <MethodMetric CC="1" Class="Base64Tests" Component="tests.freemind" LOC="9" Name="testDifferentBase64ers" PC="0"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="64" Name="testDialog" PC="0"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getProperty" PC="0"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="setProperty" PC="1"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getProperty" PC="0"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="setProperty" PC="1"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getProperty" PC="0"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="setProperty" PC="1"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="getProperty" PC="0"/>
                <MethodMetric CC="1" Class="DontShowAgainDialogTests" Component="tests.freemind" LOC="3" Name="setProperty" PC="1"/>
                <MethodMetric CC="1" Class="ExportTests" Component="tests.freemind" LOC="6" Name="testExportPng" PC="0"/>
                <MethodMetric CC="1" Class="ExportTests" Component="tests.freemind" LOC="32" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="ExportTests" Component="tests.freemind" LOC="5" Name="paintChildren" PC="1"/>
                <MethodMetric CC="1" Class="ExportTests" Component="tests.freemind" LOC="3" Name="windowClosing" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="5" Name="FreeMindMainMock" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getJFrame" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="isApplet" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="setView" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="setWaitingCursor" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getPatternsFile" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getFreeMindMenuBar" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getResources" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getResourceString" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getResourceString" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getContentPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="out" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="err" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="openDocument" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="repaint" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="8" Name="getIntProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getProperties" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="setProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="saveProperties" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getFreemindDirectory" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getLayeredPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="setTitle" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getWinHeight" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getWinWidth" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getWinState" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getWinX" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getWinY" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getFreemindVersion" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getLogger" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getFreeMindClassLoader" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getFreemindBaseDir" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getAdjustableProperty" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="setDefaultProperty" PC="2"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="insertComponentIntoSplitPane" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="removeSplitPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getContentComponent" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getScrollPane" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="2" Name="registerStartupDoneListener" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindMainMock" Component="tests.freemind" LOC="3" Name="getLoggerList" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTaskTests" Component="tests.freemind" LOC="3" Name="setUp" PC="0"/>
                <MethodMetric CC="2" Class="FreeMindTaskTests" Component="tests.freemind" LOC="30" Name="testTestTask" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTaskTests" Component="tests.freemind" LOC="3" Name="actionPerformed" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindTaskTests" Component="tests.freemind" LOC="3" Name="run" PC="0"/>
                <MethodMetric CC="1" Class="TestTask" Component="tests.freemind" LOC="3" Name="TestTask" PC="1"/>
                <MethodMetric CC="1" Class="TestTask" Component="tests.freemind" LOC="6" Name="processAction" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTestBase" Component="tests.freemind" LOC="3" Name="FreeMindTestBase" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTestBase" Component="tests.freemind" LOC="3" Name="FreeMindTestBase" PC="1"/>
                <MethodMetric CC="1" Class="FreeMindTestBase" Component="tests.freemind" LOC="4" Name="setUp" PC="0"/>
                <MethodMetric CC="1" Class="FreeMindTestBase" Component="tests.freemind" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="13" Name="testSetHtml" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="6" Name="testEndContentMatcher" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="3" Name="matchingTest" PC="1"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="5" Name="testNanoXmlContent" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="4" Name="testXHtmlToHtmlConversion" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="5" Name="testWellFormedXml" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="5" Name="testBr" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="4" Name="testSpaceHandling" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="9" Name="testSpaceHandlingInShtmlIdempotency" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="11" Name="testSpaceRemovalInShtml" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="5" Name="getInputStringWithManySpaces" PC="1"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="4" Name="getHtmlBody" PC="1"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="10" Name="testUnicodeHandling" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="6" Name="testHtmlBodyExtraction" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="3" Name="testIllegalXmlChars" PC="0"/>
                <MethodMetric CC="1" Class="HtmlConversionTests" Component="tests.freemind" LOC="5" Name="testSpaceReplacements" PC="0"/>
                <MethodMetric CC="1" Class="LastOpenedTests" Component="tests.freemind" LOC="9" Name="testStrangeCharsInList" PC="0"/>
                <MethodMetric CC="1" Class="LastStorageManagementTests" Component="tests.freemind" LOC="4" Name="setUp" PC="0"/>
                <MethodMetric CC="1" Class="LastStorageManagementTests" Component="tests.freemind" LOC="3" Name="testGetXml" PC="0"/>
                <MethodMetric CC="2" Class="LastStorageManagementTests" Component="tests.freemind" LOC="10" Name="testChangeOrAdd" PC="0"/>
                <MethodMetric CC="3" Class="LastStorageManagementTests" Component="tests.freemind" LOC="19" Name="testGetList" PC="0"/>
                <MethodMetric CC="2" Class="LastStorageManagementTests" Component="tests.freemind" LOC="19" Name="testChangeOrAdd2" PC="0"/>
                <MethodMetric CC="1" Class="LastStorageManagementTests" Component="tests.freemind" LOC="8" Name="waitOneMilli" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="49" Name="setUp" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="7" Name="createModeController" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="2" Name="init" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="3" Name="getNodeDragListener" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="3" Name="getNodeDropListener" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="2" Name="selectAsTheOnlyOneSelected" PC="2"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="10" Name="testYShift" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="13" Name="testYShiftNegative" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="17" Name="testYShiftNegativeWith3Childs" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="10" Name="testScrollMap" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="18" Name="testYShiftNegativeWith3ChildsWithRootMovement" PC="0"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="16" Name="testYShiftNegativeWith3ChildsYCalcToRoot" PC="0"/>
                <MethodMetric CC="2" Class="LayoutTests" Component="tests.freemind" LOC="17" Name="layout" PC="1"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="7" Name="getYCoordinate" PC="1"/>
                <MethodMetric CC="1" Class="LayoutTests" Component="tests.freemind" LOC="7" Name="getYCoordinateToViewport" PC="1"/>
                <MethodMetric CC="1" Class="MarshallerTests" Component="tests.freemind" LOC="14" Name="testNewLines" PC="0"/>
                <MethodMetric CC="1" Class="MarshallerTests" Component="tests.freemind" LOC="7" Name="testStringEncoder" PC="0"/>
                <MethodMetric CC="1" Class="MarshallerTests" Component="tests.freemind" LOC="5" Name="testOsmNominatimConversion" PC="0"/>
                <MethodMetric CC="1" Class="MarshallerTests" Component="tests.freemind" LOC="10" Name="testNominatimReverse" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="4" Name="MindMapControllerMock" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="centerNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="close" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="createNodeTreeFromXml" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="deregisterNodeLifetimeListener" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="deregisterNodeSelectionListener" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="displayNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="doubleClick" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="extendSelection" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="fireNodePreDeleteEvent" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="firePreSaveEvent" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getAttributeController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getFrame" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getHookFactory" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getLeftToolBar" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getLinkShortText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getMode" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getModeToolBar" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getNodeFromID" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getNodeID" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getPopupForModel" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getPopupMenu" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getResource" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getSelected" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getSelecteds" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getSelectedsByDepth" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getSelectionColor" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getView" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="isBlocked" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="loadURL" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="newMap" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="cut" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="copy" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="copy" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="copy" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="copySingle" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="copy" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="onFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="onLostFocusNode" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="open" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="plainClick" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="registerNodeLifetimeListener" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="registerNodeSelectionListener" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="save" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="saveAs" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="select" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="select" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="setFolded" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="setModel" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="setVisible" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="showPopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="shutdownController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="sortNodesByDepth" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="startupController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="updateMenus" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="updatePopupMenu" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getSelectedView" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getNodeView" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="refreshMap" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="onViewCreatedHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="onViewRemovedHook" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="setBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getFileChooser" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="select" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="selectBranch" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="setView" PC="1"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="3" Name="getMapModule" PC="0"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="changeSelection" PC="2"/>
                <MethodMetric CC="1" Class="MindMapControllerMock" Component="tests.freemind" LOC="2" Name="setToolTip" PC="3"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="4" Name="MindMapMock" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getModeController" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="nodeChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="nodeRefresh" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getAsPlainText" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getAsRTF" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getAsHTML" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="insertNodeInto" PC="3"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getFile" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getURL" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="getXml" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="4" Name="getFilteredXml" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getRestorable" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getPathToRoot" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getBackgroundColor" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="setBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getLinkRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="destroy" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="isReadOnly" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getRegistry" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getFilter" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="setFilter" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getRoot" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getChild" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getChildCount" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="isLeaf" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="valueForPathChanged" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getIndexOfChild" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="addTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="removeTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="getRootNode" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="insertNodeInto" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="nodeStructureChanged" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="setSaved" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="isSaved" PC="0"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="save" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="load" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="registerMapSourceChangedObserver" PC="2"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="3" Name="deregisterMapSourceChangedObserver" PC="1"/>
                <MethodMetric CC="1" Class="MindMapMock" Component="tests.freemind" LOC="2" Name="changeRoot" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="PrintGraphics" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="create" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="create" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="4" Name="drawRoundRect" PC="6"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="logMe" PC="5"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="4" Name="drawOval" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="hashCode" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="equals" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="4" Name="setColor" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setPaintMode" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setXORMode" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getFont" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setFont" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getFontMetrics" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getFontMetrics" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getClipBounds" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="clipRect" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setClip" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getClip" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setClip" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="copyArea" PC="6"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawLine" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fillRect" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawRect" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="draw3DRect" PC="5"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="clearRect" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fill3DRect" PC="5"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fillRoundRect" PC="6"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="draw" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawRenderedImage" PC="2"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fillOval" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawArc" PC="6"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawRenderableImage" PC="2"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawString" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fillArc" PC="6"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawString" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawPolyline" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawString" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawPolygon" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawString" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawPolygon" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fillPolygon" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawGlyphVector" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fillPolygon" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="fill" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="hit" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawChars" PC="5"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getDeviceConfiguration" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setComposite" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawBytes" PC="5"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setPaint" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setStroke" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setRenderingHint" PC="2"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getRenderingHint" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="6"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setRenderingHints" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="addRenderingHints" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getRenderingHints" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="5"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="translate" PC="2"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="translate" PC="2"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="rotate" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="7"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="rotate" PC="3"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="scale" PC="2"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="shear" PC="2"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="10"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="transform" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setTransform" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getTransform" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="drawImage" PC="11"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getPaint" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getComposite" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="setBackground" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getBackground" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getStroke" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="clip" PC="1"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getFontRenderContext" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="dispose" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="finalize" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="toString" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getClipRect" PC="0"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="hitClip" PC="4"/>
                <MethodMetric CC="1" Class="PrintGraphics" Component="tests.freemind" LOC="3" Name="getClipBounds" PC="1"/>
                <MethodMetric CC="1" Class="ScriptEditorPanelTest" Component="tests.freemind" LOC="4" Name="_testPanel" PC="0"/>
                <MethodMetric CC="1" Class="ScriptEditorPanelTest" Component="tests.freemind" LOC="4" Name="testErrorLineNumbers" PC="0"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="3" Name="getAmountOfScripts" PC="0"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="3" Name="getScript" PC="1"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="3" Name="setScript" PC="2"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="17" Name="executeScript" PC="3"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="2" Name="storeDialogPositions" PC="3"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="9" Name="decorateDialog" PC="2"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="2" Name="endDialog" PC="1"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="3" Name="isDirty" PC="0"/>
                <MethodMetric CC="1" Class="TestScriptModel" Component="tests.freemind" LOC="3" Name="addNewScript" PC="0"/>
                <MethodMetric CC="1" Class="SignedScriptTests" Component="tests.freemind" LOC="8" Name="testSignedInitialization" PC="0"/>
                <MethodMetric CC="1" Class="SignedScriptTests" Component="tests.freemind" LOC="10" Name="testScriptContents" PC="0"/>
                <MethodMetric CC="2" Class="SplashTests" Component="tests.freemind" LOC="9" Name="testLightBuldSplash" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="3" Name="setUp" PC="0"/>
                <MethodMetric CC="2" Class="ToolsTests" Component="tests.freemind" LOC="10" Name="testArgsToUrlConversion" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="8" Name="testRichContentConversion" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="10" Name="testUrlConversion" PC="0"/>
                <MethodMetric CC="2" Class="ToolsTests" Component="tests.freemind" LOC="9" Name="testRelativeUrlsWindows" PC="0"/>
                <MethodMetric CC="2" Class="ToolsTests" Component="tests.freemind" LOC="8" Name="testGetPrefix" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="6" Name="testRelativeUrls" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="6" Name="testRelativeUrls2" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="6" Name="testRelativeUrls3" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="6" Name="testRelativeUrls4" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="6" Name="testRelativeUrlsSpaces" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="7" Name="testCorrectRelativism" PC="3"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="4" Name="testOccurrences" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="3" Name="testUpdate" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="4" Name="testUpdateWithSecurityManager" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="6" Name="doUpdate" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="3" Name="main" PC="1"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="14" Name="testPageFormatStorage" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="3" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="3" Name="visit" PC="1"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="8" Name="testVisitor" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="4" Name="testKeyDocumentationPathConversion" PC="0"/>
                <MethodMetric CC="1" Class="ToolsTests" Component="tests.freemind" LOC="16" Name="testChangedProperties" PC="0"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="2" Name="TransformTest" PC="0"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="6" Name="testExportHtml" PC="0"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="6" Name="testExportHtmlWithImage" PC="0"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="6" Name="testExportHtmlApplet" PC="0"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="6" Name="testExportHtmlFlash" PC="0"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="6" Name="testExportOoo" PC="0"/>
                <MethodMetric CC="6" Class="TransformTest" Component="tests.freemind" LOC="25" Name="getProperties" PC="2"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="12" Name="doExportWithExportPlugin" PC="3"/>
                <MethodMetric CC="1" Class="TransformTest" Component="tests.freemind" LOC="12" Name="doExportWithOooPlugin" PC="3"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="4" Name="testTagRemoval" PC="0"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="4" Name="testTagRemovalWithNewlines" PC="0"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="4" Name="testTagRemovalOnlyForHtmlText" PC="0"/>
                <MethodMetric CC="2" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="27" Name="testFlatNodeTableFilter" PC="0"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="3" Name="getRowCount" PC="0"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="3" Name="getColumnCount" PC="0"/>
                <MethodMetric CC="2" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="10" Name="getValueAt" PC="2"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="17" Name="testPositions" PC="0"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="5" Name="testDirectReplace" PC="0"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="6" Name="testGetPureRegularExpression" PC="0"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="4" Name="executeRegExpRemovalAndTest" PC="2"/>
                <MethodMetric CC="1" Class="FindTextTests" Component="tests.freemind.findreplace" LOC="16" Name="testReplaceNodeText" PC="0"/>
                <MethodMetric CC="1" Class="TestReplaceInputInfo" Component="tests.freemind.findreplace" LOC="5" Name="TestReplaceInputInfo" PC="2"/>
                <MethodMetric CC="1" Class="TestReplaceInputInfo" Component="tests.freemind.findreplace" LOC="3" Name="getLength" PC="0"/>
                <MethodMetric CC="1" Class="TestReplaceInputInfo" Component="tests.freemind.findreplace" LOC="5" Name="getNodeHolderAt" PC="1"/>
                <MethodMetric CC="1" Class="TestReplaceInputInfo" Component="tests.freemind.findreplace" LOC="3" Name="changeString" PC="2"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getText" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="setText" PC="1"/>
                <MethodMetric CC="3" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="7" Name="hasFoldedParents" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getObjectId" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="childrenFolded" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="childrenUnfolded" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="hasChildren" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getFilterInfo" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getChildPosition" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getPreferredChild" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setPreferredChild" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getNodeLevel" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getLink" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getShortText" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getEdge" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getColor" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getStyle" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setStyle" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="hasStyle" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getParentNode" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isBold" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isItalic" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isUnderlined" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getFont" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getFontSize" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getFontFamilyName" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getViewers" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="addViewer" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getPlainTextContent" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getPath" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isDescendantOf" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isRoot" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isFolded" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isLeft" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isOnLeftSideOfRoot" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setLeft" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setFolded" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setFont" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setShiftY" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getShiftY" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="calcShiftY" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setVGap" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getVGap" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="calcVGap" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setHGap" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getHGap" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setLink" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setFontSize" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setColor" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getIcons" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="addIcon" PC="2"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="removeIcon" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getCloud" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setCloud" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getBackgroundColor" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setBackgroundColor" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getHooks" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getActivatedHooks" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="addHook" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="invokeHook" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="removeHook" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setToolTip" PC="2"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getToolTip" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setAdditionalInfo" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAdditionalInfo" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="shallowCopy" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="save" PC="4"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getStateIcons" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setStateIcon" PC="2"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getHistoryInformation" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setHistoryInformation" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isVisible" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="hasExactlyOneVisibleChild" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getMap" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAttributes" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="addTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="removeTreeModelListener" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="insert" PC="2"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="remove" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setUserObject" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="removeFromParent" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setParent" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getChildAt" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getChildCount" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getParent" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getIndex" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAllowsChildren" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isLeaf" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="children" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getXmlText" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setXmlText" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getXmlNoteText" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setXmlNoteText" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getChildren" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getNoteText" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setNoteText" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAttribute" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAttributeKeyList" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAttributePosition" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="setAttribute" PC="2"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAttributeTableLength" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="removeViewer" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="acceptViewVisitor" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getListeners" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isNewChildLeft" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="createAttributeTableModel" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="getAttribute" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isWriteable" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="isDescendantOfOrEqual" PC="1"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="2" Name="removeAllHooks" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="sortedChildrenUnfolded" PC="0"/>
                <MethodMetric CC="1" Class="TestMindMapNode" Component="tests.freemind.findreplace" LOC="3" Name="hasVisibleChilds" PC="0"/>
            </MethodMetrics>
            <DesignSmells>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ApplyFormatPlugin</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>AutomaticLayout</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StylePatternProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StylePatternListProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>BlinkingNodeHook</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>TimerColorChanger</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChangeNodeLevelAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChangeRootNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ClonePasteAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: CloneProperties; ClonePropertiesObserver</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ClonePropertiesObserver</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 21 public methods</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CLONE_ITSELF_FALSE; CLONE_ITSELF_TRUE; PLUGIN_LABEL; XML_STORAGE_CLONES; XML_STORAGE_CLONE_ID; XML_STORAGE_CLONE_ITSELF; mCloneNodeIds; mCloneNodes; mCloneId; mDisabled; mCloneItself</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ClonePlugin</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>CreationModificationPlugin</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>EncryptNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportToImage</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FitToPage</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FormatNewNodes</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FormatPaste</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FormularEditor</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StringEntity</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>CheckBoxEntity</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChoiceEntity</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: enumStr; displayValue; possibles</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChoiceEntity</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: enumStr; displayValue</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChoiceElement</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>HierarchicalIcons</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>IconSelectionPlugin</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ImportMindmanagerFiles</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>JumpLastEditLocation</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SetLogLevelAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ManagePatterns</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NewParentNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: sNodeVector; sCurrentPosition; sPreventRegistration; mNodeId; mMapModuleName; controller; mMap; logger</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeHistory</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: mNodeId; mMapModuleName</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NODE_NOTE_PLUGIN; EMPTY_EDITOR_STRING; EMPTY_EDITOR_STRING_ALTERNATIVE; EMPTY_EDITOR_STRING_ALTERNATIVE2</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeNote</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: NotesManager; NodeNote; NodeNoteRegistration</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeNote</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SimplyHtmlResources</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because onFocusNode is more interested in members of the type: MindMapNode</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NotesManager</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>RemoveNote</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>RevisionPlugin</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SaveAll</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ShowCloneNodes</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SortNodes</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeTextComparator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SplitNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ArrayListTransferable</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CANCEL; OK; WINDOW_PREFERENCE_STORAGE_PROPERTY; result; jContentPane; mController; jCancelButton; jOKButton; mStylePatternFrame</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CANCEL; OK; result; jContentPane; jLabel; jLabel1; jPasswordField; jPasswordField1; jLabel2; jOKButton; jCancelButton; caller; controller; password; enterTwoPasswords</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: sLastSelectedPattern; STACK_PATTERN_FRAME; EMPTY_FRAME; mLastSelectedPattern; mPatternList; WINDOW_PREFERENCE_STORAGE_PROPERTY; CANCEL; OK; result; jContentPane; mController; jCancelButton; jOKButton; mCardLayout; mRightStack; mPatternListModel; popupMenu; mStylePatternFrame; mList; mIsDragging; mArrayListHandler; mSplitPane; logger</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 22 public methods</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>PatternListSelectionListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: DATE_PROPERTY; serialVersionUID; calendar; dayChooser; initialized; weekOfYearVisible; locale; monthChooser; monthYearPanel; yearChooser; minSelectableDate; maxSelectableDate</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JCalendar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 44 public methods</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JCalendar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: DAY_PROPERTY; serialVersionUID; days; weeks; selectedDay; weekPanel; dayPanel; day; oldDayBackgroundColor; selectedColor; sundayForeground; weekdayForeground; decorationBackgroundColor; dayNames; calendar; today; locale; initialized; weekOfYearVisible; decorationBackgroundVisible; decorationBordersVisible; dayBordersVisible; alwaysFireDayProperty; minSelectableDate; maxSelectableDate; defaultMinSelectableDate; defaultMaxSelectableDate; maxDayCharacters; monthChooser; yearChooser; serialVersionUID; serialVersionUID</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: JDayChooser; JMonthChooser; JYearChooser</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 51 public methods</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: MONTH_PROPERTY; serialVersionUID; hasSpinner; locale; month; oldSpinnerValue; dayChooser; yearChooser; comboBox; spinner; initialized; localInitialize; serialVersionUID; textField</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JMonthChooser</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 21 public methods</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JSpinField</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: YEAR_PROPERTY; serialVersionUID; dayChooser; oldYear; startYear; endYear</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JYearChooser</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>ReminderHook</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>RemoveReminderHook</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: tableModel; DESCENDING; NOT_SORTED; ASCENDING; EMPTY_DIRECTIVE; COMPARABLE_COMAPRATOR; LEXICAL_COMPARATOR; viewToModel; modelToView; tableHeader; mouseListener; tableModelListener; columnComparators; sortingColumns; modelIndex; descending; size; priority; tableCellRenderer; column; direction</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TableSorter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 21 public methods</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TableSorter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TableModelHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>SortableHeaderRenderer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TYPE_DELAY_TIME; COLUMN_MODIFIED; COLUMN_CREATED; COLUMN_ICONS; COLUMN_TEXT; COLUMN_DATE; COLUMN_NOTES; DATE_COLUMN; NODE_TEXT_COLUMN; NODE_ICON_COLUMN; NODE_CREATED_COLUMN; NODE_MODIFIED_COLUMN; NODE_NOTES_COLUMN; dialog; timePanel; timeTable; timeTableModel; sorter; dateRenderer; nodeRenderer; iconsRenderer; showAllNodes; WINDOW_PREFERENCE_STORAGE_PROPERTY; mFlatNodeTableFilterModel; mFilterTextSearchField; mFilterTextReplaceField; notesRenderer; mTreeLabel; mMyMindMapController; mViewFoldedNodes; mTypeDelayTimer; event; formatter; node; untaggedNodeText; originalNodeText; node; untaggedNotesText; originalNotesText; icons; iconNames; modeController</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 22 public methods</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>ReplaceAllInfo</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>ReplaceSelectedInfo</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>FilterTextDocumentListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>DelayedTextEntry</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>FlatNodeTableMouseAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>FlatNodeTableKeyListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MissingHierarchy">
                    <Name>Missing Hierarchy</Name>
                    <Description>The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: NodeHolder; NotesHolder; IconsHolder in method getCellRenderer</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>FlatNodeTable</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: mFactory; REMINDER_HOOK_NAME; lastDate; calendar; dialog; timePanel; hourField; minuteField; mController; sCurrentlyOpenTimeManagement</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>AppendDateAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): AppendDateAbstractAction</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>AppendDateAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>AppendDateToChildAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): AppendDateAbstractAction</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>AppendDateToChildAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>AppendDateToSiblingAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): AppendDateAbstractAction</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>AppendDateToSiblingAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TodayAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnnecessaryAbstraction">
                    <Name>Unnecessary Abstraction</Name>
                    <Description>The tool detected the smell in this class because the class contains only a few data members without any method implementation, that indicates that the abstraction might not be required. Following fields are declared in this class: shape; href; alt; title; coordinates</Description>
                    <Entity>
                        <Component>accessories.plugins.util.html</Component>
                        <Class>AreaHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenModularization">
                    <Name>Broken Modularization</Name>
                    <Description>The tool detected the smell in this class because it contains only data members without any method implementation. Following fields are declared in this class: shape; href; alt; title; coordinates</Description>
                    <Entity>
                        <Component>accessories.plugins.util.html</Component>
                        <Class>AreaHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.util.window</Component>
                        <Class>WindowClosingAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="ImperativeAbstraction">
                    <Name>Imperative Abstraction</Name>
                    <Description>The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: ExportDialog</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>FileChooseListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>CompileXsdStart</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FREEMIND_PACKAGE; DESTINATION_DIR; FREEMIND_ACTIONS_XSD; KEY_PACKAGE; FILE_START; KEY_IMPORT_ARRAY_LIST; KEY_CLASS_START; KEY_CLASS_EXTENSION; KEY_CLASS_START2; KEY_CLASS_MIXED; KEY_CLASS_PRIVATE_MEMBERS; KEY_CLASS_GETTERS; KEY_CLASS_SETTERS; KEY_CLASS_SINGLE_CHOICE; KEY_CLASS_MULTIPLE_CHOICES_MEMBERS; KEY_CLASS_MULTIPLE_CHOICES_SETGET; KEY_CLASS_SEQUENCE; KEY_CLASS_END; mInputStream; mCurrentHandler; mKeyOrder; mClassMap; mBindingXml; mElementMap; mTypeMap; mEnumerationId; Schema_Id; ComplexType_Id; Sequence_Id; Choice_Id; Attribute_Id; ComplexContent_Id; Element_Id; Extension_Id; SimpleType_Id; Restriction_Id; Enumeration_Id; Group_Id; Schema; ComplexType; Sequence; Choice; Attribute; ComplexContent; Element; Extension; SimpleType; Restriction; Enumeration; Group; mParent; mClassName; mExtendsClassName; isSingleChoice; mIsSingle; mIsClassDefinedHere; mRawName; mMixed</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>CompileXsdStart</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="CyclicHierarchy">
                    <Name>Cyclic Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: ExtensionHandler</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>XsdHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: GroupHandler; XsdHandler; ComplexTypeHandler; ComplexContentHandler; SchemaHandler; SequenceHandler; ChoiceHandler; ExtensionHandler; AttributeHandler</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>XsdHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): XsdHandler</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SchemaHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ChoiceElementHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): XsdHandler</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SequenceHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SequenceElementHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): XsdHandler</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ComplexContentHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FALSE_VALUE; TRUE_VALUE; mFalseValue; mTrueValue; description; label; mCheckBox</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>BooleanProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>DontShowNotificationProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): BooleanProperty</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>DontShowNotificationProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindTask</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TIME_TO_DISPLAY_PROGRESS_BAR_IN_MILLIS; mInterrupted; mFinished; mAmountOfSteps; mProgressMonitor; mRounds; mProgressDescription; mFrame; mGlass; mOldGlassPane; mProgressString; mProgressParameters</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindTask</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: mProgressString; mProgressParameters</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ProgressDescription</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>NextLineProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ONLY_OK_SELECTION_IS_STORED; BOTH_OK_AND_CANCEL_OPTIONS_ARE_STORED; mTitleId; mMessageId; mTextTranslator; mParent; mResult; mDialog; mDontShowAgainBox; mDontShowPropertyHandler; mMessageType; mComponent; logger; mController; mPropertyName</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>StandardPropertyHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>PasswordProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="WideHierarchy">
                    <Name>Wide Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: BooleanProperty; ColorProperty; ComboProperty; FontProperty; IconProperty; NextLineProperty; NumberProperty; ScriptEditorProperty; SeparatorProperty; StringProperty; ThreeCheckBoxProperty</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>PropertyControl</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>RemindValueProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): ThreeCheckBoxProperty</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>RemindValueProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>SeparatorProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: mFalseValue; mTrueValue; mDontTouchValue; FALSE_VALUE; TRUE_VALUE; DON_T_TOUCH_VALUE; DON_T_TOUCH_VALUE_INT; TRUE_VALUE_INT; FALSE_VALUE_INT; PLUS_IMAGE; MINUS_IMAGE; NO_IMAGE; description; label; state; mButton</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ThreeCheckBoxProperty</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>BlindIcon</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: PAGE_FORMAT_PROPERTY; mMapTitleChangeListenerSet; mZoomListenerSet; mMapTitleContributorSet; logger; localDocumentationLinkConverter; colorChooser; lastOpened; mapModuleManager; mMode; frame; toolbar; filterToolbar; northToolbarPanel; nodeMouseMotionListener; nodeMotionListener; nodeKeyListener; nodeDragListener; nodeDropListener; mapMouseMotionListener; mapMouseWheelListener; mModescreator; pageFormat; printerJob; bswatch; antialiasEdges; antialiasAll; fontMap; mFilterController; isPrintingAllowed; menubarVisible; toolbarVisible; leftToolbarVisible; close; print; printDirect; printPreview; page; quit; showAllAttributes; showSelectedAttributes; hideAllAttributes; optionAntialiasAction; optionHTMLExportFoldingAction; optionSelectionMechanismAction; about; faq; keyDocumentation; webDocu; documentation; license; showFilterToolbarAction; showAttributeManagerAction; navigationPreviousMap; navigationNextMap; navigationMoveMapLeftAction; navigationMoveMapRightAction; moveToRoot; toggleMenubar; toggleToolbar; toggleLeftToolbar; zoomIn; zoomOut; showSelectionAsRectangle; propertyAction; freemindUrl; zoomValues; propertyChangeListeners; attributeDialog; mTabbedPaneMapModules; mTabbedPane; mTabbedPaneSelectionUpdate; JAVA_VERSION; chooser; color; controller; controller; isDlg; controller; controller; controller; controller; controller; controller; c; controller; c; c; url</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 81 public methods</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Hub-likeModularization">
                    <Name>Hub-like Modularization</Name>
                    <Description>The tool detected the smell in this class because this class has high number of incoming as well as outgoing dependencies. Incoming dependecies: Registration; NodeHistory; NodeHolder; SaveAll; ColorProperty; OptionalDontShowMeAgainDialog; StandardPropertyHandler; XmlBindingTools; QuitAction; CloseAction; PrintAction; PrintPreviewAction; PageAction; DocumentationAction; KeyDocumentationAction; AboutAction; LicenseAction; NavigationPreviousMapAction; ShowAttributeDialogAction; ShowFilterToolbarAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; MoveToRootAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; PropertyAction; OptionAntialiasAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; OpenURLAction; LastOpenedList; MainToolBar; MapModuleManager; MapMouseMotionListener; MapMouseWheelListener; MenuBar; NodeDragListener; NodeDropListener; NodeKeyListener; NodeMotionListener; NodeMouseMotionListener; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; Condition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; IconContainedCondition; IconNotContainedCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; NodeContainsCondition; NoFilteringCondition; SelectedViewCondition; DefaultFilter; Filter; FilterComposerDialog; FilterController; FilterToolbar; FreeMind; FreeMindApplet; CloudAdapter; EdgeAdapter; LinkAdapter; Mode; ModesCreator; NodeAdapter; BrowseMode; MindMapMouseWheelEventHandler; FileMode; CloudColorAction; ColorArrowLinkAction; EdgeColorAction; NodeBackgroundColorAction; NodeColorAction; ActionFactory; AttributeManagerDialog; ImportAttributesDialog; MindMapMode; SchemeMode; IndependantMapViewCreator; MapView; NodeMotionListenerView; NodeView; DatabaseBasics; SocketBasics; ExportPdf; ExportPdfDialog; LayoutTests. Outgoing dependencies: LocalLinkConverter; LastOpenedList; MapModuleManager; Mode; FreeMindMain; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; CloseAction; OptionAntialiasAction; PropertyAction; OpenURLAction; AttributeManagerDialog; PrintAction; PrintPreviewAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; FreemindPropertyListener; ColorTracker; MapModule; ModeController; MenuBar; ZoomListener; MindMap; LastStateStorageManagement; FreeMindCommon; BrowseMode; AttributeTableLayoutModel; FreeMind; BooleanProperty; Tools; Resources</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Closer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>DisposeOnClose</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>DocumentationAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ShowAllAttributesAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>HideAllAttributesAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ShowSelectedAttributesAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PropertyAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because writeProperties is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PropertyAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>BackgroundSwatch</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because changeSelection is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>OptionSelectionMechanismAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>OpenURLAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): StructuredMenuHolder</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>FreeMindPopupMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because open is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>LastOpenedList</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: LIST_AMOUNT_LIMIT; mLastStatesMap; logger</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>LastStateStorageManagement</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindToolBar</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MainToolBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MapTitleChangeListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MapTitleContributor</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because handlePopup is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MapMouseMotionListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because mouseClicked is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MapMouseMotionListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because updateModeMenu is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because updateFileMenu is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because updateEditMenu is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because updateViewMenu is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because addOptionSet is more interested in members of the type: Controller</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: logger; MENU_BAR_PREFIX; GENERAL_POPUP_PREFIX; POPUP_MENU; INSERT_MENU; NAVIGATE_MENU; VIEW_MENU; HELP_MENU; MINDMAP_MENU; MENU_MINDMAP_CATEGORY; MODES_MENU; EDIT_MENU; FILE_MENU; FORMAT_MENU; EXTRAS_MENU; menuHolder; mapsPopupMenu; filemenu; editmenu; mapsmenu; c; mapsMenuActionListener; formatmenu; mKey</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MapsMenuActionListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>LastOpenedActionListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: nodesContent; stringContent; imageContent; rtfContent; htmlContent; dropActionContent; fileList; nodeIdsContent; mindMapNodesFlavor; rtfFlavor; htmlFlavor; fileListFlavor; dropActionFlavor; copyNodeIdsFlavor</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MindMapNodesSelection</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnnecessaryAbstraction">
                    <Name>Unnecessary Abstraction</Name>
                    <Description>The tool detected the smell in this class because the class contains only a few data members without any method implementation, that indicates that the abstraction might not be required. Following fields are declared in this class: </Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>NodeMotionAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: AMOUNT_OF_VISIBLE_MENU_ITEMS; ICON_SIZE; mOutputString; blindIcon; SELECTED_ICON_PATH; SEPARATOR_TEXT; ORDER_NAME; menuMap; logger; mIndent; sSelectedIcon; map; token; order; listener; mAmountOfVisibleMenuItems; mItemCounter; mMenuCounter; mBaseMenuItem; myMenuItem; listener; menuItemHolder</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>StructuredMenuHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MissingHierarchy">
                    <Name>Missing Hierarchy</Name>
                    <Description>The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: SeparatorHolder; StructuredMenuItemHolder in method updateMenus</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>StructuredMenuHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 21 public methods</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>StructuredMenuHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PrintMenuAdder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuItemAdder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>DefaultMenuAdderCreator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>SeparatorHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PrintMenuAdderCreator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MissingHierarchy">
                    <Name>Missing Hierarchy</Name>
                    <Description>The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: MenuItemEnabledListener; MenuItemSelectedListener in method setAction</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>StructuredMenuItemHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): CompareConditionAdapter</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeCompareCondition</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeCompareCondition</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeCondition</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeExistsCondition</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeCondition</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeNotExistsCondition</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SELECTED_BACKGROUND</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionRenderer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeCondition</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>IgnoreCaseNodeContainsCondition</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): CompareConditionAdapter</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>NodeCompareCondition</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeCondition</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>NodeContainsCondition</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>DefaultFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FILTER_INITIAL_VALUE; FILTER_SHOW_MATCHED; FILTER_SHOW_ANCESTOR; FILTER_SHOW_DESCENDANT; FILTER_SHOW_ECLIPSED; FILTER_SHOW_HIDDEN</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>Filter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>AddConditionAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>DeleteConditionAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>CreateNotSatisfiedConditionAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>CreateConjunctConditionAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>CreateDisjunctConditionAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>ConditionListMouseListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>SimpleConditionChangeListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>SelectedAttributeChangeListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because addSortedElement is more interested in members of the type: SortedListModel</Description>
                    <Entity>
                        <Component>freemind.controller.filter.util</Component>
                        <Class>ExtendedComboBoxModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): SortedMapListModel; SortedListModel</Description>
                    <Entity>
                        <Component>freemind.controller.filter.util</Component>
                        <Class>SortedComboBoxModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MultipathHierarchy">
                    <Name>Multipath Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the class inherits another class directly as well as indirectly. The redundant inherited supertype is: SortedListModel</Description>
                    <Entity>
                        <Component>freemind.controller.filter.util</Component>
                        <Class>SortedComboBoxModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.controller.printpreview</Component>
                        <Class>BrowseAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.controller.printpreview</Component>
                        <Class>ZoomAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>DontSaveMarker</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because createBufferedImage is more interested in members of the type: MapView</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ExportHook</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): ModeControllerHookAdapter</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ExportHook</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FREEMIND_BASE_DIR_STRING; logger; pluginBase; frame; mXmlPluginFile; classLoaderCache</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookDescriptorBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: properties; menuPositions; modes; pluginAction</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookDescriptorPluginAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): HookDescriptorBase</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookDescriptorPluginAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookDescriptorPluginAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): HookDescriptorBase</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookDescriptorRegistration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: hookRegistrationClass; isPluginBase; correspondingPlugin</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookFactory</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: hookRegistrationClass; isPluginBase; correspondingPlugin</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>RegistrationContainer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookFactoryAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: isSingleton; getter; isPermanent; isUndoable; Once; OnceForRoot; OnceForAllNodes; Other; ApplyToRoot</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookInstanciationMethod</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>DefaultDestinationNodesGetter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>RootDestinationNodesGetter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>AllDestinationNodesGetter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: lookFor; CLASS_LIST; mFrame; logger</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ImportWizard</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): HookAdapter; ModeControllerHook</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ModeControllerHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): HookAdapter; NodeHook</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>NodeHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: PARAMETERS</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>PermanentNodeHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeHookAdapter; PermanentNodeHook</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>PermanentNodeHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 20 public methods</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>PermanentNodeHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>PermanentNodeHookSubstituteUnknown</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>UndoEventReceiver</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>EditServer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: J_SPLIT_PANE_SPLIT_TYPE; VERTICAL_SPLIT_BELOW; HORIZONTAL_SPLIT_RIGHT; LOG_FILE_NAME; PORT_FILE; FREE_MIND_PROGRESS_LOAD_MAPS; FREE_MIND_PROGRESS_LOAD_MAPS_NAME; SPLIT_PANE_POSITION; SPLIT_PANE_LAST_POSITION; RESOURCE_LOOKANDFEEL; RESOURCES_SELECTION_METHOD; RESOURCES_NODE_STYLE; RESOURCES_ROOT_NODE_STYLE; RESOURCES_NODE_TEXT_COLOR; RESOURCES_SELECTED_NODE_COLOR; RESOURCES_SELECTED_NODE_RECTANGLE_COLOR; RESOURCE_DRAW_RECTANGLE_FOR_SELECTION; RESOURCES_EDGE_COLOR; RESOURCES_EDGE_STYLE; RESOURCES_CLOUD_COLOR; RESOURCES_LINK_COLOR; RESOURCES_BACKGROUND_COLOR; RESOURCE_PRINT_ON_WHITE_BACKGROUND; RESOURCES_WHEEL_VELOCITY; RESOURCES_USE_TABBED_PANE; RESOURCES_USE_SPLIT_PANE; RESOURCES_DELETE_NODES_WITHOUT_QUESTION; RESOURCES_RELOAD_FILES_WITHOUT_QUESTION; logger; VERSION; XML_VERSION; RESOURCES_REMIND_USE_RICH_TEXT_IN_NEW_LONG_NODES; RESOURCES_EXECUTE_SCRIPTS_WITHOUT_ASKING; RESOURCES_EXECUTE_SCRIPTS_WITHOUT_FILE_RESTRICTION; RESOURCES_EXECUTE_SCRIPTS_WITHOUT_NETWORK_RESTRICTION; RESOURCES_EXECUTE_SCRIPTS_WITHOUT_EXEC_RESTRICTION; RESOURCES_SCRIPT_USER_KEY_NAME_FOR_SIGNING; RESOURCES_CONVERT_TO_CURRENT_VERSION; RESOURCES_CUT_NODES_WITHOUT_QUESTION; RESOURCES_DON_T_SHOW_NOTE_ICONS; RESOURCES_REMOVE_NOTES_WITHOUT_QUESTION; RESOURCES_SAVE_FOLDING_STATE; RESOURCES_SIGNED_SCRIPT_ARE_TRUSTED; RESOURCES_USE_DEFAULT_FONT_FOR_NOTES_TOO; RESOURCES_USE_MARGIN_TOP_ZERO_FOR_NOTES; RESOURCES_DON_T_SHOW_CLONE_ICONS; RESOURCES_DON_T_OPEN_PORT; KEYSTROKE_MOVE_MAP_LEFT; KEYSTROKE_MOVE_MAP_RIGHT; KEYSTROKE_PREVIOUS_MAP; KEYSTROKE_NEXT_MAP; RESOURCES_SEARCH_IN_NOTES_TOO; RESOURCES_DON_T_SHOW_NOTE_TOOLTIPS; RESOURCES_SEARCH_FOR_NODE_TEXT_WITHOUT_QUESTION; RESOURCES_COMPLETE_CLONING; RESOURCES_CLONE_TYPE_COMPLETE_CLONE; TOOLTIP_DISPLAY_TIME; PROXY_PORT; PROXY_HOST; PROXY_PASSWORD; PROXY_USER; PROXY_IS_AUTHENTICATED; PROXY_USE_SETTINGS; RESOURCES_DISPLAY_FOLDING_BUTTONS; props; defProps; menuBar; status; filetypes; autoPropertiesFile; patternsFile; controller; mFreeMindCommon; mFileHandler; mFileHandlerError; mScrollPane; mSplitPane; mContentComponent; mTabbedPane; mWindowIcon; mStartupDone; mStartupDoneListeners; mEditServer; mLoggerList; sLogFileHandler; value</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 49 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>MyEventQueue</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindApplet</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: version; defaultPropsURL; defaultProps; userProps; scrollPane; menuBar; status; c; mFreeMindCommon; southPanel; mComponentInSplitPane; iMaxNodeWidth</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindApplet</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 44 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindApplet</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FREEMIND_FILE_EXTENSION_WITHOUT_DOT; FREEMIND_FILE_EXTENSION; POSTFIX_TRANSLATE_ME; languageResources; defaultResources; RESOURCE_LANGUAGE; CHECK_SPELLING; RESOURCE_ANTIALIAS; DEFAULT_LANGUAGE; LOCAL_PROPERTIES; mFreeMindMain; baseDir; resources; ON_START_IF_NOT_SPECIFIED; LOAD_LAST_MAP; LOAD_LAST_MAPS_AND_LAYOUT; SAVE_ONLY_INTRISICALLY_NEEDED_IDS; LOAD_NEW_MAP; LOAD_EVENT_DURING_STARTUP; MINDMAP_LAST_STATE_MAP_STORAGE; logger</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindCommon</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: VERSION_TYPE_ALPHA; VERSION_TYPE_BETA; VERSION_TYPE_RC; VERSION_TYPE_RELEASE; ENABLE_NODE_MOVEMENT; mMaj; mMid; mMin; mType; mNum</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindMain</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 41 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindMain</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: mMaj; mMid; mMin; mType; mNum</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 34 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSecurityManager</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>ProxyAuthenticator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NBSP; logger; sInstance; HTML_PATTERN; FIND_TAGS_PATTERN; SLASHED_TAGS_PATTERN; TAGS_PATTERN; SP; originalStart; originalEnd; replacedStart; replacedEnd; mIsTag; mIsAlreadyAppended</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 24 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: originalStart; originalEnd; replacedStart; replacedEnd; mIsTag; mIsAlreadyAppended</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>IndexPair</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 20 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Resources</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>StdOutErrLevel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FREEMIND_LIB_FREEMIND_JAR; logger; CONTENTS_JAVA_FREEMIND_JAR; FREE_MIND_APP_CONTENTS_RESOURCES_JAVA; executableExtensions; availableFontFamilyNames; sEnvFonts; ran; value; value; object; first; second; SALT_PRESENT_INDICATOR; SALT_LENGTH; ecipher; dcipher; salt; iterationCount; passPhrase; mAlgorithm; successful; errorMessage; serialVersionUID; btn; action; first; second; JAVA_VERSION</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 108 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>ObjectHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): DesEncrypter</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>SingleDesEncrypter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>TripleDesEncrypter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): DesEncrypter</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>TripleDesEncrypter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>EscapeAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>ButtonHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>ActionHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>MindMapNodePair</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FixedHTMLWriter</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLWriter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLFilterWriter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: XML_NODE_XHTML_CONTENT_TAG; XML_NODE_XHTML_CONTENT_END_TAG_REGEXP; sContentEndTagPattern; serialVersionUID; NANOXML_MAJOR_VERSION; NANOXML_MINOR_VERSION; attributes; children; name; contents; dontEncodeContents; entities; lineNr; ignoreCase; ignoreWhitespace; charReadTooMuch; reader; parserLineNr</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 67 public methods</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NO_LINE; lineNr</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLParseException</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): LinkAdapter; MindMapArrowLink</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ArrowLinkAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="CyclicHierarchy">
                    <Name>Cyclic Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: ArrowLinkTarget</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ArrowLinkAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ArrowLinkAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: RESOURCES_STANDARDCLOUDSTYLE; standardColor; standardStyle; listener; DEF_STROKE; iterativeLevel</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>CloudAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 92 public methods</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>nodesDepthComparator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>OpenAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>SaveAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>SaveAsAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>EditAttributesAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: EDGE_WIDTH_THIN_STRING; standardColor; standardStyle; listener; WIDTH_PARENT; WIDTH_THIN; EDGESTYLE_LINEAR; EDGESTYLE_BEZIER; EDGESTYLE_SHARP_LINEAR; EDGESTYLE_SHARP_BEZIER; INT_EDGESTYLE_LINEAR; INT_EDGESTYLE_BEZIER; INT_EDGESTYLE_SHARP_LINEAR; INT_EDGESTYLE_SHARP_BEZIER</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>EdgeAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="RebelliousHierarchy">
                    <Name>Rebellious Hierarchy</Name>
                    <Description>The tool detected the smell in this class because method(s) of this class reject the methods provided by its supertypes. The method(s) that reject the suptertype's method are: setFileSelectionMode</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FreeMindAwtFileDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NullFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>DirFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FileOnlyFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FileAndDirFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: frame; target; DEFAULT_WIDTH; NORMAL_WIDTH; color; style; width</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>LineAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: RESOURCES_STANDARDLINKSTYLE; standardColor; standardStyle; listener; destinationLabel; referenceText; source; uniqueId</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>LinkAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): LineAdapter; MindMapLink</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>LinkAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LinkAdapter; LinkAdapterListener</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>LinkAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 26 public methods</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FileChangeInspectorTimerTask</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: PROPERTY_STRING_ICONS_LIST; name; description; number; associatedIcon; mAllIconNames; iconNotFound; createdIcons; UNKNOWN; LAST; nextNumber; component</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindIcon</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): MindMapLink</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapArrowLink</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): MindMapLine</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapCloud</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): MindMapLine</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapEdge</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 20 public methods</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapLinkRegistry</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: STYLE_BUBBLE; STYLE_FORK; STYLE_COMBINED; STYLE_AS_PARENT; NODE_STYLES</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 97 methods</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NODESEPARATOR</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ModeController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 72 methods</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ModeController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SHIFT; HGAP; VGAP; LEFT_POSITION; RIGHT_POSITION; UNKNOWN_POSITION; activatedHooks; hooks; userObject; xmlText; link; toolTip; style; icons; stateIcons; cloud; color; backgroundColor; folded; position; vGap; hGap; shiftY; children; preferredChild; font; underlined; filterInfo; parent; edge; views; frame; ALLOWSCHILDREN; ISLEAF; EMTPY_ATTRIBUTES; historyInformation; logger; map; attributes; noteText; xmlNoteText; sSaveIdPropertyChangeListener; sSaveOnlyIntrinsicallyNeededIds; listenerList</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 127 public methods</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Hub-likeModularization">
                    <Name>Hub-like Modularization</Name>
                    <Description>The tool detected the smell in this class because this class has high number of incoming as well as outgoing dependencies. Incoming dependecies: Registration; Registration; RevisionPlugin; ControllerAdapter; ModeController; XMLElementAdapter; BrowseXMLElement; EncryptedBrowseNode; ApplyPatternAction; BoldAction; EditAction; ItalicAction; MindMapActions; MoveNodeAction; NewChildAction; SetLinkByTextFieldAction; UnderlinedAction; InsertAttributeActor; RemoveAttributeActor; SetAttributeNameActor; SetAttributeValueActor; MindMapMapModel; MindMapXMLElement; MindMapNodeMotionListener. Outgoing dependencies: MindMapCloud; MindMapNode; FilterInfo; MindMapEdge; FreeMindMain; NodeAttributeTableModel; HistoryInformation; MindMap; FreemindPropertyListener; Attribute; ModeController; NodeView; MindIcon; PermanentNodeHook; NodeHook; MindMapLinkRegistry; XMLElement; Filter; NodeViewVisitor; FreeMindCommon; FreeMind; XMLElementAdapter; Controller; HtmlTools; Resources; Tools</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeViewEventListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 41 public methods</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FALSE_VALUE; TRUE_VALUE; PATTERN_DUMMY; PATTERNS_DUMMY</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: logger; userObject; frame; mapChild; nodeAttributes; fontName; fontStyle; fontSize; iconName; mArrowLinkAdapters; mIdToTarget; XML_NODE_TEXT; XML_NODE; XML_NODE_ATTRIBUTE; XML_NODE_ATTRIBUTE_LAYOUT; XML_NODE_ATTRIBUTE_REGISTRY; XML_NODE_REGISTERED_ATTRIBUTE_NAME; XML_NODE_REGISTERED_ATTRIBUTE_VALUE; XML_NODE_CLASS; XML_NODE_ADDITIONAL_INFO; XML_NODE_ENCRYPTED_CONTENT; XML_NODE_HISTORY_CREATED_AT; XML_NODE_HISTORY_LAST_MODIFIED_AT; XML_NODE_XHTML_TYPE_TAG; XML_NODE_XHTML_TYPE_NODE; XML_NODE_XHTML_TYPE_NOTE; attributeName; attributeValue; attributeNameWidth; attributeValueWidth; mModeController</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnexploitedEncapsulation">
                    <Name>Unexploited Encapsulation</Name>
                    <Description>The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: NodeAdapter; EdgeAdapter; CloudAdapter; ArrowLinkTarget; ArrowLinkAdapter; XMLElementAdapter in method addChild</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MissingHierarchy">
                    <Name>Missing Hierarchy</Name>
                    <Description>The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: NodeAdapter; EdgeAdapter; CloudAdapter; ArrowLinkTarget; ArrowLinkAdapter; XMLElementAdapter in method addChild</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class because the class is highly complex. The sum of cyclomatic complexity of all methods of this class (i.e. WMC) is: 139</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CAPACITY_INCREMENT; visibleElementsNumber; registry; elements; myComboBoxColumnModel; myTableModel; listenerList; restrictionModel; isRestricted; GLOBAL; TABLE_FONT_SIZE; fontSize; isAttributeLayoutChanged; changeEvent; attributesEvent; attributeViewType</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistry</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 42 public methods</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistry</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because add is more interested in members of the type: AttributeRegistry</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryComboBoxColumnModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because getValueAt is more interested in members of the type: AttributeRegistry</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because setValueAt is more interested in members of the type: AttributeRegistry</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SHOW_SELECTED; SHOW_ALL; HIDE_ALL; DEFAULT_COLUMN_WIDTH; width; listenerList; changeEvent; layoutChangeEvent</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeTableLayoutModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 26 public methods</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>NodeAttributeTableModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseArrowLinkModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseCloudModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: popupmenu; toolbar; followLink; nodeUp; nodeDown; mBrowseHookFactory; noteIcon; followMapLink; modeController; logger</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseEdgeModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseMapModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: c; modecontroller; MODENAME; isRunning</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseMode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: BROWSE_URL_STORAGE_KEY; c; urlfield</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseToolBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseXMLElement</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>EncryptedBrowseNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): BrowseNodeModel</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>EncryptedBrowseNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>NodeNoteViewer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>NewMapAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.common</Component>
                        <Class>CommonNodeKeyListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.common</Component>
                        <Class>CommonToggleFoldedAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CANCEL; OK; result; jContentPane; jLabel; jLabel1; jPasswordField; jPasswordField1; jLabel2; jOKButton; jCancelButton; password; enterTwoPasswords; mTranslator</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>PersistentEditableComboBox</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonMouseMotionManager</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>timeDelayedSelection</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because run is more interested in members of the type: ModeController</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>timeDelayedSelection</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because run is more interested in members of the type: ModeController</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>timeDelayedSelection</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NODE_MAP_HOOK_NAME; NODE_MAP_LOCATION_ICON; XML_STORAGE_POS_LON; XML_STORAGE_POS_LAT; XML_STORAGE_MAP_LON; XML_STORAGE_MAP_LAT; XML_STORAGE_ZOOM; XML_STORAGE_TILE_SOURCE; XML_STORAGE_MAP_TOOLTIP_LOCATION; NODE_MAP_STORE_TOOLTIP; NODE_MAP_SHOW_TOOLTIP; TILE_SOURCE_MAP_QUEST_OPEN_MAP; TILE_SOURCE_TRANSPORT_MAP; TILE_SOURCE_CYCLE_MAP; TILE_SOURCE_MAPNIK; SHORT_MAP_QUEST_OPEN_MAP; SHORT_TRANSPORT_MAP; SHORT_CYCLE_MAP; SHORT_MAPNIK; sMapLocationIcon; mTooltipLocation; mTooltipFile; mValues</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>MapNodePositionHolderBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>MapNodePositionHolderBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnnecessaryAbstraction">
                    <Name>Unnecessary Abstraction</Name>
                    <Description>The tool detected the smell in this class because the class contains only a few data members without any method implementation, that indicates that the abstraction might not be required. Following fields are declared in this class: NODE_NOTE_ICON</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>NodeNoteBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NODE_NOTE_ICON</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>NodeNoteBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: PLUGIN_LABEL; CLOCK_INVISIBLE; CLOCK_VISIBLE; REMOVE_CLOCK; REMINDUSERAT; BLINK_INTERVAL_IN_MILLIES; remindUserAt; timer; clockIcon; bellIcon; flagIcon; stateAdded; STATE_TOOLTIP; mStateTooltipName</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>ReminderHookBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>TimerBlinkTask</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>CenterAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>OpenPathAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>FileEdgeModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>FileMode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>FileNodeModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>FilePopupMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because FileToolBar is more interested in members of the type: FileController</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>FileToolBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>AddArrowLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>AddArrowLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>AddLocalLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeGeneralAction; SingleNodeOperation</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ApplyPatternAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ChangeArrowLinkEndPoints</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ChangeArrowsInArrowLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because act is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CloudColorAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CloudColorAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ColorArrowLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CopyAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CopySingleAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CopySingleAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CutAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because cancel is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 20 public methods</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ExportBranchAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ExportBranchAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="WideHierarchy">
                    <Name>Wide Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: AddArrowLinkAction; AddLocalLinkAction; ChangeArrowLinkEndPoints; ChangeArrowsInArrowLinkAction; CloudColorAction; ColorArrowLinkAction; IconAction; NodeBackgroundColorAction; NodeColorAction; NodeHookAction; RemoveArrowLinkAction; RevertAction; SelectBranchAction; SetLinkByTextFieldAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>FreemindAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: icon; modeController; removeLastIconAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>IconAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>IconAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because addNode is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ImportExplorerFavoritesAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because addNode is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ImportFolderStructureAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MindMapActions</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: NEW_CHILD_WITHOUT_FOCUS; NEW_CHILD; NEW_SIBLING_BEHIND; NEW_SIBLING_BEFORE</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MindMapActions</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 46 public methods</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MindMapActions</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ModeControllerActionHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because act is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NewChildAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NewPreviousSiblingAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NewSiblingAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="WideHierarchy">
                    <Name>Wide Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: BoldAction; CloudAction; EdgeStyleAction; EdgeWidthAction; FontFamilyAction; FontSizeAction; ItalicAction; MoveNodeAction; NodeStyleAction; RemoveAllIconsAction; RemoveIconAction; UnderlinedAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeActorXml</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeBackgroundColorAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeGeneralAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>RemoveNodeBackgroundColorAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeColorAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeGeneralAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeColorBlendAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="WideHierarchy">
                    <Name>Wide Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: ApplyPatternAction; BoldAction; CloudAction; EdgeStyleAction; EdgeWidthAction; FontFamilyAction; FontSizeAction; ItalicAction; MoveNodeAction; RemoveNodeBackgroundColorAction; NodeColorBlendAction; NodeStyleAction; RemoveAllIconsAction; RemoveIconAction; SelectAllAction; UnderlinedAction; UsePlainTextAction; UseRichFormattingAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeGeneralAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction; HookAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeHookAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because moveNodeTo is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeUpAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: logger; mMindMapController; mUndoPasteHandler; target; asSibling; isLeft; HREF_PATTERN; nonLinkCharacter</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: target; asSibling; isLeft</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeCoordinate</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>FileListFlavorHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MindMapNodesFlavorHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DirectHtmlFlavorHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>HtmlFlavorHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>StringFlavorHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ImageFlavorHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because actionPerformed is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAsPlainTextAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): UndoAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>RedoAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>RemoveArrowLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>RevertAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeGeneralAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>SelectAllAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>SelectBranchAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreemindAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>SetLinkByTextFieldAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeGeneralAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>UsePlainTextAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeGeneralAction</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>UseRichFormattingAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Class>AbstractActorXml</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Class>AbstractXmlAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnexploitedEncapsulation">
                    <Name>Unexploited Encapsulation</Name>
                    <Description>The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: FinalActionFilter; FirstActionFilter in method registerFilter</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Class>ActionFactory</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MissingHierarchy">
                    <Name>Missing Hierarchy</Name>
                    <Description>The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: FinalActionFilter; FirstActionFilter in method registerFilter</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Class>ActionFactory</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Class>ActionFactory</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Class>FinalActionFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Class>FirstActionFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ClonedComboBoxModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>DeleteAttributeAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>DeleteValueAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ReplaceValueAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ApplyAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>OKAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>CancelAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>EditListAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ClosingListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ToggleAllAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): TreeNodeInfo</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeTreeNodeInfo</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>TextChangeListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListSelectionChangeListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AddAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>RenameAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>DeleteAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>CloseAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: WITHOUT_NAME_AND_CHILDS; WITH_NAME_AND_CHILDS; EDGE_STYLES; EDGE_WIDTHS; NODE_BACKGROUND_COLOR; SET_RESOURCE; SET_NODE_BACKGROUND_COLOR; NODE_COLOR; SET_NODE_COLOR; SET_NODE_STYLE; NODE_STYLE; NODE_FONT_NAME; SET_NODE_FONT_NAME; NODE_FONT_SIZE; SET_NODE_FONT_SIZE; NODE_FONT_BOLD; SET_NODE_FONT_BOLD; NODE_FONT_ITALIC; SET_NODE_FONT_ITALIC; SET_NODE_TEXT; NODE_TEXT; SET_EDGE_WIDTH; EDGE_WIDTH; SET_EDGE_STYLE; EDGE_STYLE; SET_EDGE_COLOR; EDGE_COLOR; CLEAR_ALL_SETTERS; SET_ICON; ICON; NODE_NAME; SET_CHILD_PATTERN; CHILD_PATTERN; SET_SCRIPT; SCRIPT; mTranslator; mControls; mSetNodeColor; mNodeColor; mSetNodeBackgroundColor; mNodeBackgroundColor; mSetNodeStyle; mNodeStyle; mSetNodeFontName; mNodeFontName; mSetNodeFontBold; mNodeFontBold; mSetNodeFontItalic; mNodeFontItalic; mSetNodeFontSize; mNodeFontSize; mSetNodeText; mNodeText; mSetEdgeWidth; mEdgeWidth; mSetEdgeStyle; mEdgeStyle; mSetEdgeColor; mEdgeColor; mSetIcon; mIcon; mSetChildPattern; mChildPattern; mSetScriptPattern; mScriptPattern; mName; mIconInformationVector; mPropertyChangePropagation; mClearSetters; mMindMapController; mType; sizes; mPatternList</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: WITHOUT_NAME_AND_CHILDS; WITH_NAME_AND_CHILDS</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrameType</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>EdgeWidthTransformer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>EdgeWidthBackTransformer</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 22 public methods</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>EncryptedMindMapNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapCloudModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because updateToolbar is more interested in members of the type: MindMapToolBar</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ACCESSORIES_PLUGINS_NODE_NOTE; mReturnValue; RESOURCE_UNFOLD_ON_PASTE; logger; mRegisteredMouseWheelEventHandler; actionFactory; hookActions; popupmenu; toolbar; addAsChildMode; clipboard; selection; nodeHookFactory; compound; patterns; newMap; open; save; saveAs; exportToHTML; exportBranchToHTML; editLong; editAttributes; assignAttributeDialog; assignAttributes; newSibling; newPreviousSibling; setLinkByFileChooser; setImageByFileChooser; followLink; openLinkDirectory; exportBranch; importBranch; importLinkedBranch; importLinkedBranchWithoutRoot; showAttributeManagerAction; propertyAction; increaseNodeFont; decreaseNodeFont; undo; redo; copy; copySingle; cut; paste; pasteAsPlainText; bold; italic; underlined; fontSize; fontFamily; nodeColor; edit; newChild; deleteChild; toggleFolded; toggleChildrenFolded; useRichFormatting; usePlainText; nodeUp; nodeDown; edgeColor; EdgeWidth_WIDTH_PARENT; EdgeWidth_WIDTH_THIN; EdgeWidth_1; EdgeWidth_2; EdgeWidth_4; EdgeWidth_8; edgeWidths; EdgeStyle_linear; EdgeStyle_bezier; EdgeStyle_sharp_linear; EdgeStyle_sharp_bezier; edgeStyles; nodeColorBlend; fork; bubble; cloud; cloudColor; addArrowLinkAction; removeArrowLinkAction; colorArrowLinkAction; changeArrowsInArrowLinkAction; nodeBackgroundColor; removeNodeBackgroundColor; unknownIconAction; removeLastIconAction; removeAllIconsAction; setLinkByTextField; addLocalLinkAction; gotoLinkNodeAction; joinNodes; moveNodeAction; importExplorerFavorites; importFolderStructure; changeArrowLinkEndPoints; find; findNext; nodeHookAction; revertAction; selectBranchAction; selectAllAction; iconActions; filefilter; mMenuStructure; mRegistrations; mPatternsList; mGetEventIfChangedAfterThisTimeInMillies; myNewNodeCreator; attributeController; mPlugins; c; c</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 113 public methods</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Hub-likeModularization">
                    <Name>Hub-like Modularization</Name>
                    <Description>The tool detected the smell in this class because this class has high number of incoming as well as outgoing dependencies. Incoming dependecies: AutomaticLayout; Registration; StylePropertyTranslator; StylePatternProperty; StylePatternListProperty; AutomaticLayoutPropertyContributor; ChangeRootNode; Registration; ClonePasteAction; Registration; EncryptNode; FormatNewNodes; IconSelectionPlugin; JumpLastEditLocation; JumpLastEditLocationRegistration; LogFileViewer; Registration; NodeHistory; NodeHolder; Registration; NodeNoteRegistration; RemoveNote; Registration; ShowCloneNodes; SplitNode; UnfoldAll; Registration; ChooseFormatPopupDialog; ManagePatternsPopupDialog; TimeList; TimeManagement; ScriptEditorProperty; Tools; NodeDownAction; AddArrowLinkAction; AddLocalLinkAction; ApplyPatternAction; BoldAction; ChangeArrowLinkEndPoints; ChangeArrowsInArrowLinkAction; CloudAction; CloudColorAction; ColorArrowLinkAction; CompoundActionHandler; CopyAction; CopySingleAction; CutAction; DeleteChildAction; EdgeColorAction; EdgeStyleAction; EdgeWidthAction; EditAction; ExportBranchAction; FontFamilyAction; FontSizeAction; FreemindAction; IconAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ItalicAction; JoinNodesAction; MindMapControllerHookAction; MoveNodeAction; NewChildAction; NewPreviousSiblingAction; NewSiblingAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; NodeColorAction; NodeColorBlendAction; NodeGeneralAction; NodeHookAction; NodeStyleAction; NodeUpAction; PasteAction; PasteAsPlainTextAction; RedoAction; RemoveAllIconsAction; RemoveArrowLinkAction; RemoveIconAction; RevertAction; SelectAllAction; SelectBranchAction; SetLinkByTextFieldAction; ToggleChildrenFoldedAction; ToggleFoldedAction; UnderlinedAction; UndoAction; UndoPasteHandler; UsePlainTextAction; UseRichFormattingAction; AbstractActorXml; AbstractXmlAction; PrintActionHandler; UndoActionHandler; InsertAttributeActor; MindMapModeAttributeController; RegistryAttributeActor; RegistryAttributeValueActor; RemoveAttributeActor; ReplaceAttributeValueActor; SetAttributeColumnWidthActor; SetAttributeFontSizeActor; SetAttributeNameActor; SetAttributeRestrictedActor; SetAttributeValueActor; SetAttributeVisibleActor; UnregistryAttributeActor; UnregistryAttributeValueActor; StylePatternFrame; ExportToHTMLAction; ExportBranchToHTMLAction; MindMapMapModel; MindMapMode; MindMapPopupMenu; MindMapToolBar; MindMapMouseMotionManager; MindMapNodeDropListener; MindMapNodeMotionListener; OptionPanel; IndependantMapViewCreator; DatabaseBasics; FormDialog; DatabaseConnector; DatabaseRegistration; DatabaseStarter; UpdateThread; JabberListener; MapSharingController; ClientCommunication; CommunicationBase; MindMapClient; MindMapMaster; ServerCommunication; SocketBasics; FormDialog; SocketRegistration; FreeMindMapController; JCursorMapViewer; MapDialog; Registration; MapDialogPropertyContributor; ScriptEditor; NodeScriptModel; ScriptingEngine; ScriptingRegistration; ScriptingPluginPropertyContributor; LayoutTests. Outgoing dependencies: ActionFactory; MindMapPopupMenu; MindMapToolBar; HookFactory; CompoundActionHandler; ApplyPatternAction; AssignAttributeDialog; UndoAction; RedoAction; CopyAction; CutAction; PasteAction; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; NewChildAction; DeleteChildAction; ToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; MindMapMapModel; MindMapNodeModel; Mode; RegistrationContainer; HookRegistration; ModeController; MindIcon; MindMapHookFactory; MindMapControllerHookAction; MindMapNode; MapModule; NodeView; MindMap; DefaultMindMapNodeCreator; StructuredMenuHolder; MindMapArrowLinkModel; MindMapLink; MindMapArrowLink; ExampleFileFilter; FreeMindFileDialog; MainView; NodeHook; PermanentNodeHook; ModeControllerHook; MindMapHTMLWriter; MouseWheelEventHandler; Attribute; NodeAttributeTableModel; MindMapControllerPlugin; MapSourceChangeDialog; ActionPair; FreeMind; OptionalDontShowMeAgainDialog; EdgeAdapter; FreeMindCommon; MenuBar; MapView; Resources; Tools; StylePatternFactory; XmlBindingTools; HtmlTools</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>AssignAttributesAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ExportToHTMLAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ExportBranchToHTMLAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ImportBranchAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ImportLinkedBranchAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ImportLinkedBranchWithoutRootAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapFilter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>SetLinkByFileChooserAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>SetImageByFileChooserAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>FollowLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): LinkActionBase</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>FollowLinkAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>OpenLinkDirectoryAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): LinkActionBase</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>OpenLinkDirectoryAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>EditLongAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapEdgeModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because tryToLock is more interested in members of the type: LockManager</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: MAP_INITIAL_START; RESTORE_MODE_MIND_MAP; FREEMIND_VERSION_UPDATER_XSLT; lockManager; linkRegistry; timerForAutomaticSaving; EXPECTED_START_STRINGS; mString; mFile; lockedSemaphoreFile; lockTimer; lockUpdatePeriod; lockSafetyPeriod; lockingUserOfOldLock; model; tempFileStack; numberOfFiles; filesShouldBeDeletedAfterShutdown; pathToStore; changeState</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 22 public methods</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>StringReaderCreator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>FileReaderCreator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DummyLockManager</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DoAutomaticSave</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Class>MindMapHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Class>MindMapHookFactory</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Class>MindMapNodeHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Class>PermanentMindMapNodeHookAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapMouseMotionManager</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because drop is more interested in members of the type: MindMapController</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeMotionListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>EvaluateAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeEdgeModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMapModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemePopupMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because SchemeToolBar is more interested in members of the type: SchemeController</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeToolBar</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.modes.viewmodes</Component>
                        <Class>CommonToggleChildrenFoldedAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: toggleFolded; toggleChildrenFolded; find; findNext</Description>
                    <Entity>
                        <Component>freemind.modes.viewmodes</Component>
                        <Class>ViewControllerAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: fmMain; shortcut; assignedTo; ok; remove; cancel; clear; isOK; binding; allBindings; debugBuffer; modifierMask; MODIFIER_SEPARATOR; name; label; shortcut; isPrefix</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: name; label; shortcut; isPrefix</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyBinding</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>ActionHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: c; a; m; s; transMap; modifiers; key; input</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: modifiers; key; input</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>Key</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: ALT_KEY_PRESSED_DISABLED; ALTERNATIVE_DISPATCHER; lastKeyTime; modifiers; last; LAST_NOTHING; LAST_NUMKEYPAD; LAST_ALT</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: TOOLTIP_EXT; MARKED_BUTTON_COLOR; controls; frame; tabButtonMap; tabActionMap; selectedPanel; colorChooser; feedback; fmMain; PREFERENCE_STORAGE_PROPERTY; DEFAULT_LAYOUT_FORMAT; changeListeners; lastKey; cardLayout; centralPanel; tabName; label; layoutFormat; modifierMask; description; label; mButton; labelText; icon; rowSpec; sContributors</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.view</Component>
                        <Class>MapModule</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SubmitAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SplitAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CancelAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): EditNodeBase</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): EditDialog</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LongNodeDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): EditNodeBase</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeExternalApplication</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): EditNodeBase</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): EditNodeBase</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeWYSIWYG</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): EditDialog</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>HTMLDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeViewLayoutAdapter</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LeftNodeViewLayout</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: minimumSize; maximumSize; logger; MIN_HOR_NODE_SIZE; isPainting; isDraggedOver; ZOOM_CORRECTION_FACTOR</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 21 public methods</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because getSelected is more interested in members of the type: Selected</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: mSize; mPaintingTime; mPaintingAmount; printOnWhiteBackground; standardMapBackgroundColor; standardSelectColor; standardSelectRectangleColor; standardNodeTextColor; standardDrawRectangleForSelection; standardSelectionStroke; propertyChangeListener; mySelected; logger; model; rootView; selected; controller; zoom; disableMoveCursor; siblingMaxLevel; isPrinting; shiftSelectionOrigin; maxNodeWidth; background; boundingRectangle; fitToPage; mArrowLinkViews; rootContentLocation; nodeToBeVisible; extraWidth; selectedsValid; NEED_PREF_SIZE_BUG_FIX; mNode; margin; mCenterNodeTimer</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 53 public methods</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ResizeListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CheckLaterForCenterNodeTask</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: BORDER; MINIMAL_LEAF_WIDTH; logger</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FOLDING_SYMBOL_WIDTH; model; map; mainView; attributeView; dragColor; left; isLong; DRAGGED_OVER_NO; DRAGGED_OVER_SON; DRAGGED_OVER_SIBLING; DRAGGED_OVER_SON_LEFT; ALIGN_BOTTOM; ALIGN_CENTER; ALIGN_TOP; zeroPoint; logger; sListener; viewDeletionEvent; maxToolTipWidth; preferredChild; contentPane; motionListenerView; SPACE_AROUND; mFoldingListener</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 55 public methods</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Hub-likeModularization">
                    <Name>Hub-like Modularization</Name>
                    <Description>The tool detected the smell in this class because this class has high number of incoming as well as outgoing dependencies. Incoming dependecies: TimerColorChanger; Registration; Registration; FormularEditor; IconSelectionPlugin; NodeHistory; Registration; NotesManager; ClickableImageCreator; SelectedViewCondition; DefaultFilter; PermanentNodeHook; PermanentNodeHookAdapter; Tools; ControllerAdapter; MindMapNode; ModeController; NodeSelectionListener; NodeAdapter; NodeNoteViewer; CommonNodeMouseMotionListener; DeleteChildAction; EditAction; NewChildAction; IteratingAction; MindMapArrowLinkModel; MindMapController; MindMapNodeDropListener; MindMapNodeMotionListener; CommonToggleChildrenFoldedAction; ViewControllerAdapter; ArrowLinkView; BubbleMainView; CloudView; EdgeView; EditNodeBase; EditNodeDialog; EditNodeExternalApplication; EditNodeTextField; EditNodeWYSIWYG; ForkMainView; IndependantMapViewCreator; LeftNodeViewLayout; MainView; MapView; Selected; CheckLaterForCenterNodeTask; MindMapLayout; NodeFoldingComponent; NodeMotionListenerView; NodeViewFactory; NodeViewLayout; NodeViewLayoutAdapter; NodeViewVisitor; RightNodeViewLayout; RootMainView; VerticalRootNodeViewLayout; MyFocusListener; AttributeView; DatabaseConnectionHook; DatabaseStarter; MindMapMaster; SocketConnectionHook; LatexNodeHook; FreeMindMapController; MapEditTextFieldControl; MapEditNoteTextField; MapDialog; MapNodePositionHolder; ExportVectorGraphic; LayoutTests; MindMapControllerMock; TestMindMapNode. Outgoing dependencies: MindMapNode; MapView; MainView; AttributeView; FreemindPropertyListener; NodeMotionListenerView; NodeFoldingComponent; MindMapCloud; NodeViewLayout; MultipleImage; FreeMindMain; MindIcon; EdgeView; CloudView; FreeMind; BubbleMainView; Tools; Resources; Controller; NodeViewFactory; HtmlTools</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ContentPane</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ContentPaneLayout</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MissingHierarchy">
                    <Name>Missing Hierarchy</Name>
                    <Description>The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: NodeMotionListenerView; NodeFoldingComponent in method layoutOtherItems</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="ImperativeAbstraction">
                    <Name>Imperative Abstraction</Name>
                    <Description>The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: getBBox</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeViewLayoutAdapter</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RightNodeViewLayout</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): NodeViewLayoutAdapter</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>VerticalRootNodeViewLayout</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: AttributeViewScrollPane; AttributeTable; MyFocusListener; NodeView; MindMapNode; ModeController; MindMap; MindMapLinkRegistry; SynchronousVector; MindMapLink; Resources; FreeMindMain; MapView; Selected; Controller; LastOpenedList; MapModule; Mode; Tools; TransformerRunnable; MindMapController; ActionFactory; UndoActionHandler; UndoAction; RedoAction; MindMapPopupMenu; StructuredMenuHolder; StructuredMenuListener; HtmlTools; XHTMLWriter; MindMapToolBar; HookFactory; NodeHook; PermanentNodeHook; HookInstanciationMethod; DestinationNodesGetter; CompoundActionHandler; ApplyPatternAction; MindMapMapModel; LockManager; MindMapNodeModel; MindMapXMLElement; NodeAdapter; FilterInfo; Filter; NodeAttributeTableModel; AttributeController; AttributeRegistry; MapRegistry; MindIcon; AttributeRegistryComboBoxColumnModel; AttributeRegistryTableModel; AttributeRegistryElement; RegisteredAttributeValues; XMLElementAdapter; EdgeAdapter; EdgeAdapterListener; FreeMind; MenuBar; FreeMindPopupMenu; MapModuleManager; MapModuleChangeObserverCompound; MapModuleChangeObserver; FreeMindCommon; FreeMindResourceBundle; EditServer; FreeMindSplashModern; LastStateStorageManagement; CloudAdapter; CloudAdapterListener; ArrowLinkAdapter; ArrowLinkTarget; NodeViewVisitor; OptionalDontShowMeAgainDialog; ExternalPatternAction; AssignAttributeDialog; CopyAction; CutAction; NodeCoordinate; PasteAction; UndoPasteHandler; DataFlavorHandler; ControllerAdapter; MapAdapter; MapSourceChangedObserver; NoFilteringCondition; Condition; NodeSelectionListener; NodeLifetimeListener; FreeMindJFileDialog; FreeMindAwtFileDialog; PasteAsPlainTextAction; BoldAction; ItalicAction; UnderlinedAction; FontSizeAction; FontFamilyAction; NodeColorAction; EditAction; EditNodeBase; EditNodeWYSIWYG; HTMLDialog; EditNodeExternalApplication; EditNodeDialog; EditDialog; LongNodeDialog; EditNodeTextField; TextFieldListener; MainView; NewChildAction; DeleteChildAction; ToggleFoldedAction; CommonToggleFoldedAction; ToggleChildrenFoldedAction; UseRichFormattingAction; UsePlainTextAction; NodeUpAction; NodeDownAction; EdgeColorAction; EdgeWidthAction; EdgeStyleAction; NodeColorBlendAction; NodeStyleAction; CloudAction; CloudColorAction; AddArrowLinkAction; RemoveArrowLinkAction; MindMapArrowLinkModel; MindMapArrowLink; ColorArrowLinkAction; ChangeArrowsInArrowLinkAction; NodeBackgroundColorAction; RemoveNodeBackgroundColorAction; IconAction; RemoveIconAction; IconContainedCondition; RemoveAllIconsAction; SetLinkByTextFieldAction; AddLocalLinkAction; GotoLinkNodeAction; JoinNodesAction; MoveNodeAction; ImportExplorerFavoritesAction; ImportFolderStructureAction; ChangeArrowLinkEndPoints; FindAction; FindNextAction; NodeHookAction; PermanentNodeHookAdapter; RevertAction; SelectBranchAction; SelectAllAction; NewNodeCreator; MindMapModeAttributeController; Visitor; SetAttributeNameActor; SetAttributeValueActor; RemoveAttributeActor; InsertAttributeActor; SetAttributeColumnWidthActor; RegistryAttributeActor; UnregistryAttributeActor; RegistryAttributeValueActor; UnregistryAttributeValueActor; ReplaceAttributeValueActor; SetAttributeFontSizeActor; SetAttributeVisibleActor; SetAttributeRestrictedActor; Iterator; AttributeValueRemover; AttributeChanger; AttributeRenamer; AttributeRemover; MindMapHookFactory; ImportWizard; HookDescriptorPluginAction; MindMapHook; HookDescriptorRegistration; XmlBindingTools; MindMapControllerHookAction; DefaultMindMapNodeCreator; MindMapHTMLWriter; MapSourceChangeDialog; StylePatternFactory; MainToolBar; NodeMouseMotionListener; NodeMotionListener; NodeKeyListener; NodeDragListener; NodeDropListener; MapMouseMotionListener; MapMouseWheelListener; ModesCreator; FilterController; FilterToolbar; FilterComposerDialog; SaveAction; LoadAction; MindMapFilterFileFilter; FilterChangeListener; DefaultFilter; EditFilterAction; UnfoldAncestorsAction; SelectedViewCondition; ConditionFactory; NodeContainsCondition; IgnoreCaseNodeContainsCondition; NodeCompareCondition; AttributeCompareCondition; AttributeExistsCondition; AttributeNotExistsCondition; IconNotContainedCondition; ConditionNotSatisfiedDecorator; ConjunctConditions; DisjunctConditions; ConditionRenderer; CloseAction; OptionAntialiasAction; PropertyAction; OptionPanel; KeyProperty; GrabKeyDialog; InputPane; KeyEventTranslator; OpenURLAction; AttributeManagerDialog; ImportAttributesDialog; AttributeRegistryTable; PrintAction; PrintPreviewAction; PreviewDialog; Preview; BrowseAction; PageAction; QuitAction; AboutAction; KeyDocumentationAction; DocumentationAction; BrowseMode; BrowseController; FollowMapLink; ViewControllerAdapter; CommonToggleChildrenFoldedAction; MapNodePositionHolderBase; BrowseHookFactory; BrowseReminderHook; ReminderHookBase; BrowsePopupMenu; BrowseToolBar; PersistentEditableComboBox; BrowseArrowLinkModel; LicenseAction; NavigationPreviousMapAction; NavigationNextMapAction; NavigationMoveMapLeftAction; NavigationMoveMapRightAction; ShowFilterToolbarAction; ShowAttributeDialogAction; ToggleMenubarAction; ToggleToolbarAction; ToggleLeftToolbarAction; OptionHTMLExportFoldingAction; OptionSelectionMechanismAction; ZoomInAction; ZoomOutAction; ShowSelectionAsRectangleAction; MoveToRootAction; DefaultLocalLinkConverter; ArrowLinkView; MindMapLayout; NodeViewFactory; EdgeView; SharpBezierEdgeView; BezierEdgeView; VerticalRootNodeViewLayout; NodeMotionListenerView; RootMainView; LeftNodeViewLayout; RightNodeViewLayout; AttributeView; ReducedAttributeTableModelDecorator; ExtendedAttributeTableModelDecorator; AttributeTableModelDecoratorAdapter; AttributePopupMenu; NodeFoldingComponent; BubbleMainView; NodeViewLayout; CloudView; AttributeTableCellRenderer</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributePopupMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 31 methods</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because focusLost is more interested in members of the type: AttributeTable</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>MyFocusListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>HeaderMouseListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because update is more interested in members of the type: AttributeTable</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SLAVE_HOOK_NAME; SLAVE_STARTER_NAME; ROW_PK; ROW_ACTION; TABLE_XML_ACTIONS; TABLE_USERS; ROW_UNDOACTION; ROW_MAP; ROW_USER; ROLE_MASTER; ROLE_SLAVE; PORT_PROPERTY; DATABASE_BASICS_CLASS; PASSWORD; PASSWORD_DESCRIPTION; PASSWORD_VERIFICATION; PASSWORD_VERIFICATION_DESCRIPTION; HOST; HOST_DESCRIPTION; PORT; PORT_DESCRIPTION; TITLE; logger; mUpdateThread; mController2; mSuccess; mOkButton; mFormDialogValidator</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseBasics</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: UpdateThread; DatabaseBasics</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseBasics</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 22 public methods</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseConnectionHook</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseRegistration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseStarter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 23 public methods</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseStarter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber</Component>
                        <Class>JabberStarter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: MapSharingController; JabberListener; JabberSender</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because messageReceived is more interested in members of the type: MapSharingController</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because executeRemoteCommand is more interested in members of the type: MapSharingController</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because run is more interested in members of the type: MapSharingController</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: REQUEST_MAP_SHARING; ACCEPT_MAP_SHARING; DECLINE_MAP_SHARING; STOP_MAP_SHARING; logger; chat; session; sendToUser; mapShared; controller</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberSender</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because addListeners is more interested in members of the type: MapSharingWizardView</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>MapSharingController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>CloseButtonClickListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>NextButtonClickListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>BackButtonClickListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>AcceptButtonClickListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>DeclineButtonClickListener</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 20 public methods</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: SocketBasics; SocketConnectionHook; ClientCommunication</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>ClientCommunication</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SOCKET_TIMEOUT_IN_MILLIES; mListener; mServer; mConnections; mLockEnabled; mLockMutex; mPort; mLockId; mLockedAt; mLockUserName; mMasterStarted; TIME_BETWEEN_USER_INFORMATION_IN_MILLIES; TIME_FOR_ORPHANED_LOCK; mLastTimeUserInformationSent</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MindMapMaster</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: MindMapMaster; MasterThread; ServerCommunication</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MindMapMaster</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 28 public methods</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MindMapMaster</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because processCommand is more interested in members of the type: MindMapMaster</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>ServerCommunication</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: PLUGINS_COLLABORATION_SOCKET; MASTER_HOOK_LABEL; SLAVE_HOOK_LABEL; SLAVE_STARTER_LABEL; ROLE_MASTER; ROLE_SLAVE; PORT_PROPERTY; SOCKET_BASICS_CLASS; PASSWORD; PASSWORD_DESCRIPTION; PASSWORD_VERIFICATION; PASSWORD_VERIFICATION_DESCRIPTION; HOST; HOST_DESCRIPTION; PORT; PORT_DESCRIPTION; TITLE; UNKNWON_HOST_EXCEPTION_MESSAGE; CONNECT_EXCEPTION_MESSAGE; SOCKET_CREATION_EXCEPTION_MESSAGE; logger; mPassword; mFilterEnabled; mUserName; mController2; mSuccess; mOkButton; mFormDialogValidator</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketBasics</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="CyclicHierarchy">
                    <Name>Cyclic Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: MindMapMaster</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketBasics</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnnecessaryAbstraction">
                    <Name>Unnecessary Abstraction</Name>
                    <Description>The tool detected the smell in this class because the class contains only a few data members without any method implementation, that indicates that the abstraction might not be required. Following fields are declared in this class: </Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>UnableToGetLockException</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 23 public methods</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketConnectionHook</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketRegistration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.help</Component>
                        <Class>FreemindHelpStarter</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: LatexNodeHook; JZoomedHotEqn</Description>
                    <Entity>
                        <Component>plugins.latex</Component>
                        <Class>JZoomedHotEqn</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: RemoveMapToNodeAction; MapNodePositionHolder; Registration; MapDialog; JCursorMapViewer; FreeMindMapController; PlaceNodeAction; CopyLinkToClipboardAction; MapMarkerBase; MapSearchMarkerLocation; MapMarkerLocation; ResultTableModel; MapNodePositionListener; NodeVisibilityListener; SearchInMapForNodeTextAction; ShowMapToNodeAction; AddLinkToMapAction; AddMapImageToNodeAction</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>AddLinkToMapAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnexploitedEncapsulation">
                    <Name>Unexploited Encapsulation</Name>
                    <Description>The tool detected the smell because a set of type checks are performed while those types belong to the same hierarchy. The participating types that were checked are: MapMarkerLocation; MapSearchMarkerLocation in method showPopupMenu</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="MissingHierarchy">
                    <Name>Missing Hierarchy</Name>
                    <Description>The tool detected the smell because a set of type checks are performed to explicitly manage variation in behavior where a hierarchy could have been formed consisting of these participating types. The participating types that were checked are: MapMarkerLocation; MapSearchMarkerLocation in method showPopupMenu</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 60 public methods</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>TransportMap</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapQuestOpenMap</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>ChangeTileSource</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveLeftAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveRightAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveUpAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveDownAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveHomeAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SetHomeAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>LimitSearchToRegionAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>AddMapPictureToNode</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>NewNodeReverseLookupAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>EditNodeInContextMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>ShowNodeMapInContextMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SelectNodeInContextMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SelectNodeAndCloseInContextMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>RemoveNodeLocationInContextMenu</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because clearIndexes is more interested in members of the type: ResultTableModel</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: WINDOW_PREFERENCE_STORAGE_PROPERTY; TILE_CACHE_CLASS; FILE_TILE_CACHE_DIRECTORY; TILE_CACHE_MAX_AGE; SEARCH_DESCRIPTION_COLUMN; SEARCH_DISTANCE_COLUMN; map; zoomValue; mperpLabelValue; mMyMindMapController; mMapDialog; mMarkerMap; mCloseAction; mSearchFieldPanel; mSearchSplitPane; mSearchBarVisible; mSearchPanel; mSearchTerm; MAP_HOOK_NAME; TILE_CACHE_PURGE_TIME; TILE_CACHE_PURGE_TIME_DEFAULT; SEARCH_DESCRIPTION_COLUMN_TEXT; SEARCH_DISTANCE_COLUMN_TEXT; mStatusLabel; mSingleSearch; mResultTable; mResultTableModel; mResultTableSorter; mTableOriginalBackgroundColor; mLastDividerPosition; mLimitSearchToRegion; mSearchStringLabel; mResourceSearchLocationString; mResourceSearchString; COLUMNS; mData; mCursorCoordinate; mMapSearchMarkerLocationHash; mTextTranslator</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 46 public methods</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CIRCLE_RADIUS; CIRCLE_DIAMETER; mMapDialog; mSelected; logger; mBulletColor; mSelectedBackgroundColor; mBackgroundColor; mTextWidthShorteningPerZoom; mTextHeightShorteningPerZoom</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapMarkerBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): MapMarkerBase</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapMarkerLocation</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 26 public methods</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapNodePositionHolder</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: CIRCLE_SELECTED_FACTOR; CIRCLE_DIAMETER; mPlace</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapSearchMarkerLocation</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): MapMarkerBase</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapSearchMarkerLocation</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 21 public methods</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>CachePurger</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditor</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: ScriptEditorPanel; ScriptModel</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ResultFieldStream</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>NewScriptAction</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: SCRIPT_PREFIX; sScriptCookies; logger</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="Cyclically-dependentModularization">
                    <Name>Cyclically-dependent Modularization</Name>
                    <Description>The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: ScriptingRegistration; PatternScriptModel; ScriptingEngine</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 32 public methods</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingSecurityManager</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: FREEMIND_SCRIPT_KEY_NAME; SIGN_PREFIX; SIGN_PREFIX_REGEXP; mScript; mSignature; mKeyName; sSignWithKeyPattern; mKeyStore</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>SignedScriptHandler</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="DeficientEncapsulation">
                    <Name>Deficient Encapsulation</Name>
                    <Description>The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: mScript; mSignature; mKeyName; sSignWithKeyPattern</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptContents</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdf</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because choosePaper is more interested in members of the type: ExportPdfPapers</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdf</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): ExportVectorGraphic</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdf</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportSvg</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): ExportVectorGraphic</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportSvg</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>AllTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>Base64Tests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>Base64Tests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>DontShowAgainDialogTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>DontShowAgainDialogTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ExportTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ExportTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 43 public methods</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindMainMock</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTaskTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTaskTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="WideHierarchy">
                    <Name>Wide Hierarchy</Name>
                    <Description>The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: Base64Tests; DontShowAgainDialogTests; ExportTests; FreeMindTaskTests; HtmlConversionTests; LastOpenedTests; LastStorageManagementTests; LayoutTests; MarshallerTests; ScriptEditorPanelTest; SplashTests; ToolsTests; TransformTest</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTestBase</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastOpenedTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastOpenedTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastStorageManagementTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="FeatureEnvy">
                    <Name>Feature Envy</Name>
                    <Description>The tool detected a instance of this smell because testGetList is more interested in members of the type: LastStateStorageManagement</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastStorageManagementTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastStorageManagementTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MarshallerTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MarshallerTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 77 public methods</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MindMapControllerMock</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 40 public methods</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MindMapMock</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 87 public methods</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ScriptEditorPanelTest</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ScriptEditorPanelTest</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>SignedScriptTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>SplashTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>SplashTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnnecessaryAbstraction">
                    <Name>Unnecessary Abstraction</Name>
                    <Description>The tool detected the smell in this class because the class contains only a few data members without any method implementation, that indicates that the abstraction might not be required. Following fields are declared in this class: </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>A</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnnecessaryAbstraction">
                    <Name>Unnecessary Abstraction</Name>
                    <Description>The tool detected the smell in this class because the class contains only a few data members without any method implementation, that indicates that the abstraction might not be required. Following fields are declared in this class: </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>B</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TransformTest</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="BrokenHierarchy">
                    <Name>Broken Hierarchy</Name>
                    <Description>The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): FreeMindTestBase</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TransformTest</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="UnutilizedAbstraction">
                    <Name>Unutilized Abstraction</Name>
                    <Description>The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                    </Entity>
                </DesignSmell>
                <DesignSmell Key="InsufficientModularization">
                    <Name>Insufficient Modularization</Name>
                    <Description>The tool detected the smell in this class becuase the class has bloated interface (large number of public methods). Total public methods in the class: 113 public methods</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>TestMindMapNode</Class>
                    </Entity>
                </DesignSmell>
            </DesignSmells>
            <ImplementationSmells>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ChooseFormatPopupDialog formatDialog=new ChooseFormatPopupDialog(getController().getFrame().getJFrame(),getMindMapController(),"accessories/plugins/ApplyFormatPlugin.dialog.title",nodePattern);" is 193.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ApplyFormatPlugin</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mAutomaticLayoutPropertyContributor is 35.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>register</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mAutomaticLayoutPropertyContributor is 35.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>deRegister</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ChooseFormatPopupDialog formatDialog=new ChooseFormatPopupDialog(mindMapController.getFrame().getJFrame(),mindMapController,"accessories/plugins/AutomaticLayout.properties_StyleDialogTitle",pat);" is 195.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StylePatternProperty</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mDefaultListModel.addElement(mTranslator.getText("level" + j) + ": " + StylePatternFactory.toString(pattern,stylePropertyTranslator));" is 134.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StylePatternListProperty</Class>
                        <Method>setValue</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StylePatternListProperty</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final ChooseFormatPopupDialog formatDialog=new ChooseFormatPopupDialog(mindMapController.getFrame().getJFrame(),mindMapController,"accessories/plugins/AutomaticLayout.properties_StyleDialogTitle",choice);" is 204.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StylePatternListProperty</Class>
                        <Method>valueChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>BlinkingNodeHook</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>BlinkingNodeHook</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 15</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChangeNodeLevelAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(getMindMapController().getFrame().getJFrame(),getMindMapController().getSelectedView(),"choose_clone_type","clone_type_question",getMindMapController(),new OptionalDontShowMeAgainDialog.StandardPropertyHandler(getMindMapController().getController(),FreeMind.RESOURCES_COMPLETE_CLONING),OptionalDontShowMeAgainDialog.BOTH_OK_AND_CANCEL_OPTIONS_ARE_STORED).show().getResult();" is 423.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ClonePasteAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "properties.setProperty(ClonePlugin.XML_STORAGE_CLONE_ITSELF,showResult == JOptionPane.OK_OPTION ? ClonePlugin.CLONE_ITSELF_TRUE : ClonePlugin.CLONE_ITSELF_FALSE);" is 162.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ClonePasteAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>getMindMapNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression nodeAction instanceof MoveNodesAction || nodeAction instanceof MoveNodeXmlAction || nodeAction instanceof DeleteNodeAction|| nodeAction instanceof CutNodeAction is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>getCorrespondingNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>getCorrespondingNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (nodeAction instanceof MoveNodesAction || nodeAction instanceof MoveNodeXmlAction || nodeAction instanceof DeleteNodeAction|| nodeAction instanceof CutNodeAction) {" is 167.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>getCorrespondingNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>getCorrespondingNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.warning("Index " + index + " in other tree not found from "+ printNodeIds(targets)+ " originating from "+ printNodeId(cloneNode)+ " start at parent "+ pStartWithParent);" is 176.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>getCorrespondingNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression mCloneNodeIds.isEmpty() || (mCloneNodeIds.size() == 1 &amp;&amp; mCloneNodeIds.contains(getNodeId())) is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ClonePlugin</Class>
                        <Method>removeClone</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Object[] messageArguments={node.getHistoryInformation().getCreatedAt(),node.getHistoryInformation().getLastModifiedAt()};" is 121.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>CreationModificationPlugin</Class>
                        <Method>setStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "EncryptedMindMapNode encryptedMindMapNode=new EncryptedMindMapNode(getMindMapController().getText("accessories/plugins/EncryptNode.properties_select_me"),getMindMapController().getFrame(),null);" is 194.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>EncryptNode</Class>
                        <Method>newEncryptedMap</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>EncryptNode</Class>
                        <Method>encrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final EnterPasswordDialog pwdDialog=new EnterPasswordDialog((JFrame)getMindMapController().getFrame(),getMindMapController(),true);" is 131.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>EncryptNode</Class>
                        <Method>getUsersPassword</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(mindMapController.getFrame().getContentPane(),mindMapController.getText("accessories/plugins/EncryptNode.properties_insert_encrypted_node_first"),"Freemind",JOptionPane.INFORMATION_MESSAGE);" is 220.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>EncryptNode</Class>
                        <Method>toggleCryptState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final EnterPasswordDialog pwdDialog=new EnterPasswordDialog((JFrame)getMindMapController().getFrame(),getMindMapController(),false);" is 132.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>EncryptNode</Class>
                        <Method>doPasswordCheckAndDecryptNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getMindMapController().getFrame().getContentPane(),getMindMapController().getText("accessories/plugins/EncryptNode.properties_wrong_password"),"Freemind",JOptionPane.ERROR_MESSAGE);" is 211.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>EncryptNode</Class>
                        <Method>doPasswordCheckAndDecryptNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportToOoWriter</Class>
                        <Method>exportToOoWriter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportWithXSLT</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportWithXSLT</Class>
                        <Method>transform</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "BufferedWriter fileout=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(pDirectoryName + File.separator + "map.mm")));" is 132.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportWithXSLT</Class>
                        <Method>copyMap</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportWithXSLT</Class>
                        <Method>copyIconsToDirectory</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ClickableImageCreator creator=new ClickableImageCreator(root,getController(),getResourceString("link_replacement_regexp"));" is 123.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportWithXSLT</Class>
                        <Method>getAreaCode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "trans.setParameter("destination_dir",Tools.fileToRelativeUrlString(new File(resultFile.getAbsolutePath() + "_files/"),resultFile) + "/");" is 137.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ExportWithXSLT</Class>
                        <Method>transform</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FitToPage</Class>
                        <Method>shift</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getMindMapController().getFrame().getContentPane(),getResourceString("no_format_copy_before_format_paste"),"",JOptionPane.ERROR_MESSAGE);" is 167.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FormatPaste</Class>
                        <Method>pasteFormat</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FormularEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FormularEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "this(paramChild.getStringAttribute("NAME"),paramChild.getStringAttribute("VALUE"),paramChild.getStringAttribute(XML_FORMULAR_TYPE),paramChild.getStringAttribute("DISPLAY"));" is 173.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>FormularEntity</Class>
                        <Method>FormularEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StringEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>StringEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>CheckBoxEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>CheckBoxEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChoiceEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ChoiceEntity</Class>
                        <Method>addToPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>HierarchicalIcons</Class>
                        <Method>setStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.75f</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>HierarchicalIcons</Class>
                        <Method>setStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "File tempFile=File.createTempFile(file.getName(),freemind.main.FreeMindCommon.FREEMIND_FILE_EXTENSION,file.getParentFile());" is 124.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>ImportMindmanagerFiles</Class>
                        <Method>importMindmanagerFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>JumpLastEditLocationRegistration</Class>
                        <Method>detectFormatChanges</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>JumpLastEditLocationRegistration</Class>
                        <Method>detectFormatChanges</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final String pathname=getMindMapController().getFrame().getFreemindDirectory() + File.separator + FreeMind.LOG_FILE_NAME+ ".0";" is 127.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(printOperationAction,"main/actions/printOperationAction"),"keystroke_accessories/plugins/LogFileViewer_printOperationAction");" is 162.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "LogFileViewerConfigurationStorage storage=(LogFileViewerConfigurationStorage)getMindMapController().decorateDialog(mLogFileViewer,WINDOW_PREFERENCE_STORAGE_PROPERTY);" is 166.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>LogFileViewer</Class>
                        <Method>disposeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>UpdateTextAreaThread</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>UpdateTextAreaThread</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>UpdateTextAreaThread</Class>
                        <Method>commitSuicide</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>UpdateTextAreaThread</Class>
                        <Method>sleepALittle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeHistory</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "sb.append(((sCurrentPosition - 1 == i) ? "==&gt;" : " ") + "Node pos " + i+ " is "+ holder.getNode(getMindMapController().getController()));" is 137.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeHistory</Class>
                        <Method>printVector</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (sCurrentPosition &gt; 0 &amp;&amp; ((NodeHolder)sNodeVector.get(sCurrentPosition - 1)).isIdentical(pNode.getModel(),controller)) {" is 123.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>onFocusNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>Registration</Class>
                        <Method>onFocusNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String keystroke=controller.getFrame().getAdjustableProperty("keystroke_accessories/plugins/NodeNote_jumpto.keystroke.alt_N");" is 126.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeNoteRegistration</Class>
                        <Method>register</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "noteViewerComponent.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(keystroke),"jumpToMapAction");" is 136.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeNoteRegistration</Class>
                        <Method>register</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeNoteRegistration</Class>
                        <Method>getHtmlEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NodeNoteRegistration</Class>
                        <Method>getHtmlEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SouthPanel</Class>
                        <Method>SouthPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SouthPanel</Class>
                        <Method>SouthPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SouthPanel</Class>
                        <Method>SouthPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return super.processKeyBinding(ks,e,condition,pressed) || e.getKeyChar() == KeyEvent.VK_SPACE || e.getKeyChar() == KeyEvent.VK_ALT;" is 131.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SouthPanel</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.fine("Old doc =\n'" + noteText + "', Current document: \n'"+ documentText+ "'. Comparison: '"+ Tools.compareText(noteText,documentText)+ "'.");" is 150.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NoteDocumentListener</Class>
                        <Method>docEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NotesManager</Class>
                        <Method>onFocusNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "editorContentEmpty=documentText.equals(NodeNote.EMPTY_EDITOR_STRING) || documentText.equals(NodeNote.EMPTY_EDITOR_STRING_ALTERNATIVE) || documentText.equals(NodeNote.EMPTY_EDITOR_STRING_ALTERNATIVE2);" is 200.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>NotesManager</Class>
                        <Method>onSaveNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(getMindMapController().getFrame().getJFrame(),getMindMapController().getSelectedView(),"really_remove_notes","confirmation",getMindMapController(),new OptionalDontShowMeAgainDialog.StandardPropertyHandler(getMindMapController().getController(),FreeMind.RESOURCES_REMOVE_NOTES_WITHOUT_QUESTION),OptionalDontShowMeAgainDialog.ONLY_OK_SELECTION_IS_STORED).show().getResult();" is 421.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>RemoveNote</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getController().getFrame().getContentPane(),"FreeMind",getResourceString("accessories/plugins/SaveAll.properties_save_all_cancelled"),JOptionPane.ERROR_MESSAGE);" is 191.</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Class>SaveAll</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression indices != null &amp;&amp; index &gt;= indices[0] - 1 &amp;&amp; index &lt;= indices[indices.length - 1] is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ArrayListTransferHandler</Class>
                        <Method>importData</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ArrayListTransferHandler</Class>
                        <Method>importData</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>close</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "jContentPane.add(new JScrollPane(getStylePatternFrame()),new GridBagConstraints(0,0,2,1,2.0,8.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));" is 170.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "jContentPane.add(getJOKButton(),new GridBagConstraints(0,1,1,1,1.0,0.0,GridBagConstraints.EAST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));" is 145.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "jContentPane.add(getJCancelButton(),new GridBagConstraints(1,1,1,1,1.0,0.0,GridBagConstraints.EAST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));" is 149.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.0</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8.0</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ChooseFormatPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 300</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>checkEqualAndMinimumSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(this,getDialogTitle(),controller.getText("accessories/plugins/ManagePatterns.not_found"),JOptionPane.ERROR_MESSAGE);" is 146.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>ManagePatternsPopupDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ManageStyleEditorWindowConfigurationStorage decorateDialog=(ManageStyleEditorWindowConfigurationStorage)mController.decorateDialog(this,WINDOW_PREFERENCE_STORAGE_PROPERTY);" is 172.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>close</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression me.isPopupTrigger() &amp;&amp; !mList.isSelectionEmpty() &amp;&amp; mList.locationToIndex(me.getPoint()) == mList.getSelectedIndex() is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 114 lines of code.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (me.isPopupTrigger() &amp;&amp; !mList.isSelectionEmpty() &amp;&amp; mList.locationToIndex(me.getPoint()) == mList.getSelectedIndex()) {" is 123.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "jContentPane.add(mSplitPane,new GridBagConstraints(0,0,2,1,1.0,8.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));" is 141.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "jContentPane.add(ButtonBarFactory.buildOKCancelBar(getJCancelButton(),getJOKButton()),new GridBagConstraints(1,1,1,1,0.0,0.0,GridBagConstraints.EAST,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0));" is 199.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8.0</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression me.isPopupTrigger() &amp;&amp; !mList.isSelectionEmpty() &amp;&amp; mList.locationToIndex(me.getPoint()) == mList.getSelectedIndex() is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>showPopup</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (me.isPopupTrigger() &amp;&amp; !mList.isSelectionEmpty() &amp;&amp; mList.locationToIndex(me.getPoint()) == mList.getSelectedIndex()) {" is 123.</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>showPopup</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Class>ManagePatternsPopupDialog</Class>
                        <Method>writePatternBackToModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 49</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 164</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 90</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 164</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 210</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 228</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 238</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7433645992591669725L</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 9999</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>JDayChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 160</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 160</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 160</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDayNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDayNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDayNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDayNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>initDecorations</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawWeeks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawWeeks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawWeeks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawWeeks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawWeeks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawWeeks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawWeeks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if ((tmpCalendar.get(Calendar.DAY_OF_YEAR) == today.get(Calendar.DAY_OF_YEAR)) &amp;&amp; (tmpCalendar.get(Calendar.YEAR) == today.get(Calendar.YEAR))) {" is 145.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 49</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>drawDays</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setDay</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 49</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setDay</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 49</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setFont</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setFont</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setForeground</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 49</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setForeground</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setDecorationBackgroundColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setDecorationBackgroundColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setDayBordersVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 49</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setDayBordersVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JDayChooser</Class>
                        <Method>setMaxDayCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>DecoratorButton</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JMonthChooser</Class>
                        <Method>initNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JMonthChooser</Class>
                        <Method>initNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JMonthChooser</Class>
                        <Method>stateChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 11</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JMonthChooser</Class>
                        <Method>stateChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 11</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JMonthChooser</Class>
                        <Method>setMonth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 11</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JMonthChooser</Class>
                        <Method>setMonth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 150</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JSpinField</Class>
                        <Method>JSpinField</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6287709243342021172L</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JSpinField</Class>
                        <Method>JSpinField</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JTripleCalendar</Class>
                        <Method>JTripleCalendar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JTripleCalendar</Class>
                        <Method>JTripleCalendar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>JTripleCalendar</Class>
                        <Method>propagateDate</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.getFirstRow() == e.getLastRow() &amp;&amp; column != TableModelEvent.ALL_COLUMNS &amp;&amp; getSortingStatus(column) == NOT_SORTED &amp;&amp; modelToView != null is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TableModelHandler</Class>
                        <Method>tableChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (e.getFirstRow() == e.getLastRow() &amp;&amp; column != TableModelEvent.ALL_COLUMNS &amp;&amp; getSortingStatus(column) == NOT_SORTED &amp;&amp; modelToView != null) {" is 146.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TableModelHandler</Class>
                        <Method>tableChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>MouseHandler</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>MouseHandler</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.8</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>Arrow</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>SortableHeaderRenderer</Class>
                        <Method>getTableCellRendererComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 179 lines of code.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(new JLabel(getResourceString("plugins/TimeManagement.xml_Find")),new GridBagConstraints(0,0,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));" is 200.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add((mFilterTextSearchField),new GridBagConstraints(0,1,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));" is 160.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(new JLabel(getResourceString("plugins/TimeManagement.xml_Replace")),new GridBagConstraints(0,2,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));" is 203.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add((mFilterTextReplaceField),new GridBagConstraints(0,3,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));" is 161.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(pane,new GridBagConstraints(0,4,1,1,1.0,10.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));" is 135.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(new JScrollPane(mTreeLabel),new GridBagConstraints(0,5,1,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));" is 157.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "AbstractAction replaceSelectedAction=new AbstractAction(getResourceString("plugins/TimeManagement.xml_Replace_Selected")){" is 122.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "AbstractAction toggleViewFoldedNodesAction=new ToggleViewFoldedNodesAction(getResourceString("plugins/TimeManagement.xml_ToggleViewFoldedNodesAction"));" is 152.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final JMenuItem selectMenuItem=addAccelerator(menuHolder.addAction(selectAction,"main/actions/select"),"keystroke_plugins/TimeList_select");" is 140.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final JMenuItem gotoMenuItem=addAccelerator(menuHolder.addAction(gotoAction,"main/actions/goto"),"keystroke_plugins/TimeList_goto");" is 132.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final JMenuItem replaceSelectedMenuItem=addAccelerator(menuHolder.addAction(replaceSelectedAction,"main/actions/replaceSelected"),"keystroke_plugins/TimeList_replaceSelected");" is 176.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final JMenuItem replaceAllMenuItem=addAccelerator(menuHolder.addAction(replaceAllAction,"main/actions/replaceAll"),"keystroke_plugins/TimeList_replaceAll");" is 156.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final JMenuItem exportMenuItem=addAccelerator(menuHolder.addAction(exportAction,"main/actions/export"),"keystroke_plugins/TimeList_export");" is 140.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(toggleViewFoldedNodesAction,"main/view/showFoldedNodes"),"keystroke_plugins/TimeList_showFoldedNodes");" is 139.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10.0</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "model.addRow(new Object[]{date,new NodeHolder(node),new IconsHolder(node),node.getHistoryInformation().getCreatedAt(),node.getHistoryInformation().getLastModifiedAt(),new NotesHolder(node)});" is 191.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>updateModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeList</Class>
                        <Method>disposeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@477bf8ac</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>MindmapTableModel</Class>
                        <Method>getColumnClass</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>FlatNodeTableMouseAdapter</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression untaggedNodeText == null || (originalNodeText != null &amp;&amp; !originalNodeText.equals(nodeText)) is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>NodeHolder</Class>
                        <Method>getUntaggedNodeText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression untaggedNotesText == null || (originalNotesText != null &amp;&amp; !originalNotesText.equals(notesText)) is complex.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>NotesHolder</Class>
                        <Method>getUntaggedNotesText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new AppendDateAction(),"main/actions/append"),"keystroke_plugins/TimeManagement_append");" is 125.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new AppendDateToChildAction(),"main/actions/appendAsChild"),"keystroke_plugins/TimeManagement_appendAsChild");" is 146.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new AppendDateToSiblingAction(),"main/actions/appendAsSibling"),"keystroke_plugins/TimeManagement_appendAsSibling");" is 152.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JMenuItem remindMenuItem=addAccelerator(menuHolder.addAction(new RemindAction(),"main/actions/remind"),"keystroke_plugins/TimeManagementRemind");" is 145.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JMenuItem removeRemindersItem=addAccelerator(menuHolder.addAction(new RemoveReminders(),"main/actions/removeReminders"),"keystroke_plugins/TimeManagementRemoveReminders");" is 171.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>getTimePanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>getTimePanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>getTimePanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>getTimePanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>getTimePanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "MessageFormat formatter=new MessageFormat(getMindMapController().getText("plugins/TimeManagement.xml_reminderNode_onlyOneDate"));" is 129.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int result=JOptionPane.showConfirmDialog(getMindMapController().getFrame().getJFrame(),message,"FreeMind",JOptionPane.YES_NO_OPTION);" is 133.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Class>TimeManagement</Class>
                        <Method>getCalendarDate</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins.util.html</Component>
                        <Class>ClickableImageCreator</Class>
                        <Method>ClickableImageCreator</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins.util.html</Component>
                        <Class>ClickableImageCreator</Class>
                        <Method>ClickableImageCreator</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "htmlArea.append("&lt;area shape=\"" + holder.shape + "\" href=\"#"+ holder.href.replaceFirst("^(.*)$",regExpLinkReplacement)+ "\" alt=\""+ HtmlTools.toXMLEscapedText(holder.alt)+ "\" title=\""+ HtmlTools.toXMLEscapedText(holder.title)+ "\" coords=\""+ holder.coordinates.x+ ","+ holder.coordinates.y+ ","+ (holder.coordinates.width + holder.coordinates.x)+ ","+ +(holder.coordinates.height + holder.coordinates.y)+ "\" /&gt;");" is 421.</Description>
                    <Entity>
                        <Component>accessories.plugins.util.html</Component>
                        <Class>ClickableImageCreator</Class>
                        <Method>generateHtml</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field ACCESSORIES_PLUGINS_UTIL_XSLT_EXPORT_DIALOG_STORE_XSLT is 54.</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field ACCESSORIES_PLUGINS_UTIL_XSLT_EXPORT_DIALOG_STORE_TARGET is 56.</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 300</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportDialog</Class>
                        <Method>ExportDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "xe.transForm(parent.xmlFile,new File(parent.fieldXsltFileName.getText()),new File(parent.fieldTargetFileName.getText()));" is 121.</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportListener</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mController.getFrame().setProperty(ACCESSORIES_PLUGINS_UTIL_XSLT_EXPORT_DIALOG_STORE_TARGET,fieldTargetFileName.getText());" is 123.</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>ExportListener</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>FileChooseListener</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Class>FileChooseListener</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mBindingXml.append("&lt;format type=\"java.lang.String\" serializer=\"de.foltin.StringEncoder.encode\" deserializer=\"de.foltin.StringEncoder.decode\"/&gt;\n");" is 154.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>CompileXsdStart</Class>
                        <Method>generate</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>XsdHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@348ed242</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>XsdHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "appendToClassMap(KEY_CLASS_SINGLE_CHOICE," public void addChoice(Object choice) {\n" + " choiceList.add(choice);\n" + " }\n"+ "\n"+ " public void addAtChoice(int position, Object choice) {\n"+ " choiceList.add(position, choice);\n"+ " }\n"+ "\n"+ " public void setAtChoice(int position, Object choice) {\n"+ " choiceList.set(position, choice);\n"+ " }\n"+ " public Object getChoice(int index) {\n"+ " return (Object)choiceList.get( index );\n"+ " }\n"+ "\n"+ " public int sizeChoiceList() {\n"+ " return choiceList.size();\n"+ " }\n"+ "\n"+ " public void clearChoiceList() {\n"+ " choiceList.clear();\n"+ " }\n"+ "\n"+ " public java.util.List getListChoiceList() {\n"+ " return java.util.Collections.unmodifiableList(choiceList);\n"+ " }\n"+ "\n"+ " protected ArrayList choiceList = new ArrayList();\n"+ "\n"+ "");" is 814.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ChoiceHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "appendToClassMap(KEY_CLASS_MULTIPLE_CHOICES_SETGET," public " + name + " get"+ name+ "() {\n return this."+ memberName+ ";\n"+ " }\n\n");" is 137.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ChoiceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "appendToClassMap(KEY_CLASS_MULTIPLE_CHOICES_SETGET," public void set" + name + "("+ name+ " value){\n"+ " this."+ memberName+ " = value;\n"+ " }\n\n");" is 151.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ChoiceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mBindingXml.append(" &lt;structure field=\"" + memberName + "\" usage=\""+ "optional"+ "\" map-as=\""+ FREEMIND_PACKAGE+ "."+ name+ "\"/&gt;\n");" is 139.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ChoiceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "appendToClassMap(KEY_CLASS_MULTIPLE_CHOICES_SETGET," public " + type + " get"+ name+ "() {\n return this."+ memberName+ ";\n"+ " }\n\n");" is 137.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SequenceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "appendToClassMap(KEY_CLASS_MULTIPLE_CHOICES_SETGET," public void set" + name + "("+ type+ " value){\n"+ " this."+ memberName+ " = value;\n"+ " }\n\n");" is 151.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SequenceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mBindingXml.append(" &lt;structure field=\"" + memberName + "\" usage=\""+ optReq+ "\" map-as=\""+ FREEMIND_PACKAGE+ "."+ type+ "\"/&gt;\n");" is 135.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SequenceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "appendToClassMap(KEY_CLASS_SEQUENCE," public void add" + name + "("+ name+ " "+ memberName+ ") {\n"+ " "+ memberName+ "List.add("+ memberName+ ");\n"+ " }\n"+ "\n"+ " public void addAt"+ name+ "(int position, "+ name+ " "+ memberName+ ") {\n"+ " "+ memberName+ "List.add(position, "+ memberName+ ");\n"+ " }\n"+ "\n"+ " public "+ name+ " get"+ name+ "(int index) {\n"+ " return ("+ name+ ")"+ memberName+ "List.get( index );\n"+ " }\n"+ "\n"+ " public void removeFrom"+ name+ "ElementAt(int index) {\n"+ " "+ memberName+ "List.remove( index );\n"+ " }\n"+ "\n"+ " public int size"+ name+ "List() {\n"+ " return "+ memberName+ "List.size();\n"+ " }\n"+ "\n"+ " public void clear"+ name+ "List() {\n"+ " "+ memberName+ "List.clear();\n"+ " }\n"+ "\n"+ " public java.util.List getList"+ name+ "List() {\n"+ " return java.util.Collections.unmodifiableList("+ memberName+ "List);\n"+ " }\n"+ " protected ArrayList "+ memberName+ "List = new ArrayList();\n\n");" is 955.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SequenceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mBindingXml.append(" &lt;collection field=\"" + memberName + "List\"&gt;\n"+ " &lt;structure map-as=\""+ FREEMIND_PACKAGE+ "."+ name+ "\"/&gt;\n"+ " &lt;/collection&gt;\n");" is 155.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>SequenceElementHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mBindingXml.append(" &lt;mapping class='" + FREEMIND_PACKAGE + "."+ mClassName+ "' type-name='"+ mRawName+ "_type' abstract='true'&gt;\n");" is 133.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ComplexTypeHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "class1.put(KEY_CLASS_MIXED," public String content; public String getContent(){return content;} public void setContent(String content){this.content = content;}\n");" is 164.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ComplexTypeHandler</Class>
                        <Method>startClass</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mBindingXml.append(" &lt;/mapping&gt;\n" + " &lt;mapping name=\"" + mRawName + "\""+ extendString+ " class=\""+ FREEMIND_PACKAGE+ "."+ mClassName+ "\"&gt;&lt;structure map-as=\""+ mRawName+ "_type\"/&gt;&lt;/mapping&gt;\n"+ "\n");" is 206.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>ComplexTypeHandler</Class>
                        <Method>endElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "appendToClassMap(KEY_CLASS_SETTERS," public void set" + name + "("+ type+ " value){\n"+ " this."+ memberName+ " = value;\n"+ " }\n");" is 133.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>AttributeHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mBindingXml.append(" &lt;value name='" + rawName + "' field='"+ memberName+ "' "+ "usage='"+ (("required".equals(usage)) ? "required" : "optional")+ "' "+ (("0".equals(minOccurs)) ? "" : "style='attribute'")+ "/&gt;\n");" is 214.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>AttributeHandler</Class>
                        <Method>startElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>encode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>encode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>encode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x0f</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>encode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>decode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "throw new IllegalArgumentException("illegal escape sequence '" + text.substring(i - j - 2,i - j + 4) + "' in encoded string");" is 126.</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>decode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>decode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>decode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>decode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>decode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>de.foltin</Component>
                        <Class>StringEncoder</Class>
                        <Method>decode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression value == null || !(value.toLowerCase().equals(mTrueValue) || value.toLowerCase().equals(mFalseValue)) is complex.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>BooleanProperty</Class>
                        <Method>setValue</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "throw new IllegalArgumentException("Cannot set a boolean to '" + value + "', allowed are "+ mTrueValue+ " and "+ mFalseValue+ ".");" is 131.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>BooleanProperty</Class>
                        <Method>setValue</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Color result=Controller.showCommonJColorChooserDialog(mButton.getRootPane(),mTranslator.getText(getLabel()),getColorValue());" is 125.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ColorProperty</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field PROGRESS_MONITOR_WINDOW_CONFIGURATION_STORAGE is 45.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>FreeMindProgressMonitor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "GridBagConstraints constraints=new GridBagConstraints(0,0,GridBagConstraints.REMAINDER,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,5,0,5),0,0);" is 176.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>FreeMindProgressMonitor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>FreeMindProgressMonitor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>FreeMindProgressMonitor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>FreeMindProgressMonitor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 600</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>FreeMindProgressMonitor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>FreeMindProgressMonitor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field PROGRESS_MONITOR_WINDOW_CONFIGURATION_STORAGE is 45.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>dismiss</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000l</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindProgressMonitor</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindTask</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field TIME_TO_DISPLAY_PROGRESS_BAR_IN_MILLIS is 38.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindTask</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean canceled=mProgressMonitor.showProgress(mRounds,mAmountOfSteps,progressDescription.mProgressString,progressDescription.mProgressParameters);" is 147.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>FreeMindTask</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>NumberProperty</Class>
                        <Method>NumberProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression intValue &lt; min || intValue &gt; max || (stepModul != 0) is complex.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>NumberProperty</Class>
                        <Method>setValue</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>OptionalDontShowMeAgainDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mDialog.getContentPane().add(new JLabel(mTextTranslator.getText(mMessageId)),new GridBagConstraints(1,0,1,1,10.0,4.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,10));" is 192.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mDialog.getContentPane().add(new JLabel(questionMark),new GridBagConstraints(0,0,1,2,1.0,2.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 167.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mDialog.getContentPane().add(mDontShowAgainBox,new GridBagConstraints(0,2,3,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 160.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mDialog.getContentPane().add(okButton,new GridBagConstraints(2,3,1,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 151.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mDialog.getContentPane().add(cancelButton,new GridBagConstraints(3,3,1,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 155.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10.0</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4.0</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.0</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>OptionalDontShowMeAgainDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>RemindValueProperty</Class>
                        <Method>setState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ThreeCheckBoxProperty</Class>
                        <Method>ThreeCheckBoxProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ThreeCheckBoxProperty</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression value == null || !(value.toLowerCase().equals(mTrueValue) || value.toLowerCase().equals(mFalseValue) || value.toLowerCase().equals(mDontTouchValue)) is complex.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ThreeCheckBoxProperty</Class>
                        <Method>setValue</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (value == null || !(value.toLowerCase().equals(mTrueValue) || value.toLowerCase().equals(mFalseValue) || value.toLowerCase().equals(mDontTouchValue))) {" is 155.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ThreeCheckBoxProperty</Class>
                        <Method>setValue</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>ThreeCheckBoxProperty</Class>
                        <Method>setState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (bom[0] == (byte)0x00) &amp;&amp; (bom[1] == (byte)0x00) &amp;&amp; (bom[2] == (byte)0xFE)&amp;&amp; (bom[3] == (byte)0xFF) is complex.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (bom[0] == (byte)0xFF) &amp;&amp; (bom[1] == (byte)0xFE) &amp;&amp; (bom[2] == (byte)0x00)&amp;&amp; (bom[3] == (byte)0x00) is complex.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (bom[0] == (byte)0xEF) &amp;&amp; (bom[1] == (byte)0xBB) &amp;&amp; (bom[2] == (byte)0xBF) is complex.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFE</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFF</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFF</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFE</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xEF</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xBB</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xBF</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFE</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFF</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFF</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFE</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>UnicodeReader</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter window_preference_storage_property is 34.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>storeDialogPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter window_preference_storage_property is 34.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "dialog.setLocation(Math.min(storage.getX(),screenSize.width - delta),Math.min(storage.getY(),screenSize.height - delta));" is 121.</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Class>XmlBindingTools</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 11</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ColorSwatch</Class>
                        <Method>getIconWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 11</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ColorSwatch</Class>
                        <Method>getIconHeight</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ColorSwatch</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ColorSwatch</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ColorSwatch</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>ColorSwatch</Class>
                        <Method>paintIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field optionSelectionMechanismAction is 30.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field localDocumentationLinkConverter is 31.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>initialization</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100f</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>getZooms</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>getDefaultFontSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getFrame().getContentPane(),message.toString(),"FreeMind",JOptionPane.INFORMATION_MESSAGE);" is 121.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>informationMessage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100f</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>setZoom</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "title=rawTitle + (model.isSaved() ? "" : "*") + " - "+ title+ (model.isReadOnly() ? " (" + getResourceString("read_only") + ")" : "");" is 134.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>setTitle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>quit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getFrame().setProperty(FreeMindCommon.ON_START_IF_NOT_SPECIFIED,currentMapRestorable != null ? currentMapRestorable : "");" is 122.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>quit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,(getAntialiasEdges()) ? RenderingHints.VALUE_ANTIALIAS_ON : RenderingHints.VALUE_ANTIALIAS_OFF);" is 147.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>setEdgesRenderingHint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,(getAntialiasAll()) ? RenderingHints.VALUE_TEXT_ANTIALIAS_ON : RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);" is 160.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>setTextRenderingHint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,(getAntialiasAll()) ? RenderingHints.VALUE_ANTIALIAS_ON : RenderingHints.VALUE_ANTIALIAS_OFF);" is 145.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>setTextRenderingHint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>addTabbedPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "public boolean isMapModuleChangeAllowed( MapModule pOldMapModule, Mode pOldMode, MapModule pNewMapModule, Mode pNewMode){" is 121.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>Controller</Class>
                        <Method>addTabbedPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "super(isDlg ? controller.getResourceString("print_dialog") : controller.getResourceString("print"),new ImageIcon(getResource("images/fileprint.png")));" is 151.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PrintAction</Class>
                        <Method>PrintAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final JCheckBox fitToPage=new JCheckBox(getResourceString("fit_to_page"),Resources.getInstance().getBoolProperty("fit_to_page"));" is 129.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PageAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PageAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PageAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PageAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PageAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>PageAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getView(),controller.getResourceString("about_text") + getFrame().getFreemindVersion(),controller.getResourceString("about"),JOptionPane.INFORMATION_MESSAGE);" is 188.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>AboutAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getView(),controller.getResourceString("license_text"),controller.getResourceString("license"),JOptionPane.INFORMATION_MESSAGE);" is 158.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>LicenseAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean changedToMapModule=mController.getMapModuleManager().tryToChangeToMapModule((String)mRestorableToMapName.get(restoreable));" is 131.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>LastOpenedList</Class>
                        <Method>open</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>LastStateStorageManagement</Class>
                        <Method>changeOrAdd</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>addAdditionalPopupActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JMenuItem MoveMapLeft=menuHolder.addAction(c.navigationMoveMapLeftAction,MINDMAP_MENU + "navigate/navigationMoveMapLeft");" is 122.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateEditMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "MoveMapLeft.setAccelerator(KeyStroke.getKeyStroke(c.getFrame().getAdjustableProperty(FreeMind.KEYSTROKE_MOVE_MAP_LEFT)));" is 121.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateEditMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JMenuItem MoveMapRight=menuHolder.addAction(c.navigationMoveMapRightAction,MINDMAP_MENU + "navigate/navigationMoveMapRight");" is 125.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateEditMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "MoveMapRight.setAccelerator(KeyStroke.getKeyStroke(c.getFrame().getAdjustableProperty(FreeMind.KEYSTROKE_MOVE_MAP_RIGHT)));" is 123.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateEditMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JMenuItem showSelectionAsRectangle=menuHolder.addAction(c.showSelectionAsRectangle,VIEW_MENU + "general/selectionAsRectangle");" is 127.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateViewMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JRadioButtonMenuItem itemShowAll=(JRadioButtonMenuItem)menuHolder.addMenuItem(new JRadioButtonMenuItem(c.showAllAttributes),VIEW_MENU + "attributes/showAllAttributes");" is 168.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateViewMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JRadioButtonMenuItem itemShowSelected=(JRadioButtonMenuItem)menuHolder.addMenuItem(new JRadioButtonMenuItem(c.showSelectedAttributes),VIEW_MENU + "attributes/showSelectedAttributes");" is 183.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateViewMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "itemShowSelected.setAccelerator(KeyStroke.getKeyStroke(c.getFrame().getAdjustableProperty("keystroke_show_selected_attributes")));" is 130.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateViewMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JRadioButtonMenuItem itemHideAll=(JRadioButtonMenuItem)menuHolder.addMenuItem(new JRadioButtonMenuItem(c.hideAllAttributes),VIEW_MENU + "attributes/hideAllAttributes");" is 168.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuBar</Class>
                        <Method>updateViewMenu</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 8 parameters. </Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MindMapNodesSelection</Class>
                        <Method>MindMapNodesSelection</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MindMapNodesSelection</Class>
                        <Method>getTransferData</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new DataFlavor[]{DataFlavor.imageFlavor,DataFlavor.stringFlavor,mindMapNodesFlavor,rtfFlavor,htmlFlavor,dropActionFlavor,copyNodeIdsFlavor};" is 147.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MindMapNodesSelection</Class>
                        <Method>getTransferDataFlavors</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression flavor.equals(fileListFlavor) &amp;&amp; (fileList != null) &amp;&amp; fileList.size() &gt; 0 is complex.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MindMapNodesSelection</Class>
                        <Method>isDataFlavorSupported</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MindMapNodesSelection</Class>
                        <Method>isDataFlavorSupported</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2a6100d0</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>NodeDragListener</Class>
                        <Method>getCursorByAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean macLinkAction=Tools.isMacOsX() &amp;&amp; ((modifiersEx &amp; InputEvent.BUTTON1_DOWN_MASK) != 0) &amp;&amp; e.getTriggerEvent().isMetaDown();" is 130.</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>NodeDragListener</Class>
                        <Method>dragGestureRecognized</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Class>MenuItemAdder</Class>
                        <Method>MenuItemAdder</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeCompareCondition</Class>
                        <Method>AttributeCompareCondition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeCompareCondition</Class>
                        <Method>checkNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (attributes.getValueAt(i,0).equals(attribute) &amp;&amp; succeed == (compareTo(attributes.getValueAt(i,1).toString()) == comparationResult)) return true;" is 148.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeCompareCondition</Class>
                        <Method>checkNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new AttributeCompareCondition(element.getStringAttribute(ATTRIBUTE),element.getStringAttribute(AttributeCompareCondition.VALUE),Tools.xmlToBoolean(element.getStringAttribute(AttributeCompareCondition.IGNORE_CASE)),element.getIntAttribute(COMPARATION_RESULT),Tools.xmlToBoolean(element.getStringAttribute(SUCCEED)));" is 322.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>AttributeCompareCondition</Class>
                        <Method>load</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>CompareConditionAdapter</Class>
                        <Method>compareTo</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@254fa967</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>CompareConditionAdapter</Class>
                        <Method>createDescription</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String description=attribute + " " + simpleCondition+ (value != null ? " \"" + value + "\"" : "")+ (ignoreCase &amp;&amp; value != null ? ", " + Resources.getInstance().getResourceString(FILTER_IGNORE_CASE) : "");" is 205.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>createDescription</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>loadCondition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (element.getName().equalsIgnoreCase(IgnoreCaseNodeContainsCondition.NAME)) return IgnoreCaseNodeContainsCondition.load(element);" is 131.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>loadCondition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (element.getName().equalsIgnoreCase(AttributeNotExistsCondition.NAME)) return AttributeNotExistsCondition.load(element);" is 123.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>loadCondition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 16</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>createAttributeCondition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (attribute.equals(FILTER_ICON) &amp;&amp; simpleCondition.equals(FILTER_NOT_CONTAINS)) return new IconNotContainedCondition(value);" is 126.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>createCondition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new NamedObject[]{Resources.getInstance().createTranslatedString(FILTER_CONTAINS),Resources.getInstance().createTranslatedString(FILTER_IS_EQUAL_TO),Resources.getInstance().createTranslatedString(FILTER_IS_NOT_EQUAL_TO),NamedObject.literal(FILTER_GT),NamedObject.literal(FILTER_GE),NamedObject.literal(FILTER_LE),NamedObject.literal(FILTER_LT)};" is 352.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>getNodeConditionNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new NamedObject[]{Resources.getInstance().createTranslatedString(FILTER_CONTAINS),Resources.getInstance().createTranslatedString(FILTER_NOT_CONTAINS)};" is 158.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>getIconConditionNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new NamedObject[]{Resources.getInstance().createTranslatedString(FILTER_EXIST),Resources.getInstance().createTranslatedString(FILTER_DOES_NOT_EXIST),Resources.getInstance().createTranslatedString(FILTER_IS_EQUAL_TO),Resources.getInstance().createTranslatedString(FILTER_IS_NOT_EQUAL_TO),NamedObject.literal(FILTER_GT),NamedObject.literal(FILTER_GE),NamedObject.literal(FILTER_LE),NamedObject.literal(FILTER_LT)};" is 419.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>getAttributeConditionNames</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 18</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionFactory</Class>
                        <Method>createNodeCondition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>ConditionRenderer</Class>
                        <Method>getListCellRendererComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String text=Resources.getInstance().getResourceString("filter_icon") + ' ' + Resources.getInstance().getResourceString("filter_contains")+ ' ';" is 143.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>IconContainedCondition</Class>
                        <Method>getListCellRendererComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String text=Resources.getInstance().getResourceString("filter_icon") + ' ' + Resources.getInstance().getResourceString("filter_not_contains")+ ' ';" is 147.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>IconNotContainedCondition</Class>
                        <Method>getListCellRendererComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new NodeCompareCondition(element.getStringAttribute(VALUE),Tools.xmlToBoolean(element.getStringAttribute(NodeCompareCondition.IGNORE_CASE)),element.getIntAttribute(COMPARATION_RESULT),Tools.xmlToBoolean(element.getStringAttribute(SUCCEED)));" is 248.</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Class>NodeCompareCondition</Class>
                        <Method>load</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression filterChildren(node,c,conditionSatisfied || isAncestorSelected,!conditionSatisfied || isAncestorEclipsed) is complex.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>DefaultFilter</Class>
                        <Method>applyFilter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>DefaultFilter</Class>
                        <Method>applyFilter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return ((options &amp; FILTER_SHOW_ANCESTOR) != 0 || (options &amp; FILTER_SHOW_ECLIPSED) &gt;= (filterResult &amp; FILTER_SHOW_ECLIPSED)) &amp;&amp; ((options &amp; filterResult &amp; ~FILTER_SHOW_ECLIPSED) != 0);" is 183.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>DefaultFilter</Class>
                        <Method>isVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field filteredAttributeComboBoxModel is 30.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field simpleNodeConditionComboBoxModel is 32.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field simpleIconConditionComboBoxModel is 32.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field simpleAttributeConditionComboBoxModel is 37.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 124 lines of code.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "filteredAttributeComboBoxModel=new ExtendedComboBoxModel(new NamedObject[]{Resources.getInstance().createTranslatedString("filter_node"),Resources.getInstance().createTranslatedString("filter_icon")});" is 201.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>FilterComposerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field filteredAttributeComboBoxModel is 30.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>mapChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>initInternalConditionModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterComposerDialog</Class>
                        <Method>initInternalConditionModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>AddConditionAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 9</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>AddConditionAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>CreateConjunctConditionAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>CreateDisjunctConditionAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>ConditionListMouseListener</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean considerValue=!simpleCondition.getSelectedItem().equals("filter_exist") &amp;&amp; !simpleCondition.getSelectedItem().equals("filter_does_not_exist");" is 150.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>SimpleConditionChangeListener</Class>
                        <Method>itemStateChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>SelectedAttributeChangeListener</Class>
                        <Method>itemStateChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pathToFilterFile=c.getFrame().getFreemindDirectory() + File.separator + "auto."+ FilterController.FREEMIND_FILTER_EXTENSION_WITHOUT_DOT;" is 136.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterToolbar</Class>
                        <Method>FilterToolbar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterToolbar</Class>
                        <Method>initConditions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (activeFilter == null) activeFilter=new DefaultFilter(getSelectedCondition(),showAncestors.getModel().isSelected(),showDescendants.getModel().isSelected());" is 159.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterToolbar</Class>
                        <Method>setMapFilter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Class>FilterToolbar</Class>
                        <Method>saveConditions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.controller.filter.util</Component>
                        <Class>SortedMapVector</Class>
                        <Method>findElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.controller.filter.util</Component>
                        <Class>SortedMapVector</Class>
                        <Method>findElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String proposedName=mmFile.getAbsolutePath().replaceFirst("\\.[^.]*?$","") + ((nameExtension != null) ? nameExtension : "") + "."+ type;" is 136.</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ExportHook</Class>
                        <Method>chooseImageFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String overwriteText=MessageFormat.format(controller.getText("file_already_exists"),new Object[]{chosenFile.toString()});" is 121.</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ExportHook</Class>
                        <Method>chooseImageFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.severe("File not found or could not be copied. " + "Was earching for " + prefix + fileName+ " and should go to "+ destinationDirectory);" is 143.</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ExportHook</Class>
                        <Method>copyFromResource</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.severe("File not found or could not be copied. " + "Was earching for " + dir + fileName+ " and should go to "+ destinationDirectory);" is 140.</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ExportHook</Class>
                        <Method>copyFromFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter instanciatedRegistrationObject is 30.</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookFactory</Class>
                        <Method>registerRegistrationContainer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter instanciatedRegistrationObject is 30.</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>HookFactoryAdapter</Class>
                        <Method>registerRegistrationContainer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ImportWizard</Class>
                        <Method>addClassesFromDir</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.severe("currentPath doesn't start with rootPath!\n" + "rootPath: " + rootPath + "\n"+ "currentPath: "+ currentPath+ "\n");" is 129.</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ImportWizard</Class>
                        <Method>addClassesFromDir</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Class>ImportWizard</Class>
                        <Method>addClassesFromDir</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 26</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 52</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 62</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 63</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x30</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x0F</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x3C</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x03</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>decode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFC</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x03</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xF0</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x0F</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xC0</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x3F</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 64</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 64</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 64</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 26</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 52</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 26</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 62</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 52</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 62</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 63</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Base64Coding</Class>
                        <Method>encode64</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0600</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>EditServer</Class>
                        <Method>EditServer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>EditServer</Class>
                        <Method>EditServer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>EditServer</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>EditServer</Class>
                        <Method>stopServer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>ExampleFileFilter</Class>
                        <Method>addExtension</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression name instanceof HTML.Tag || name instanceof StyleConstants || name == HTML.Attribute.ENDTAG is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FixedHTMLWriter</Class>
                        <Method>writeAttributes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>updateLookAndFeel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>openDocument</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (System.getProperty("os.name").startsWith("Windows 2000")) command="cmd /C rundll32 shell32.dll,ShellExec_RunDLL " + urlString;" is 130.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>openDocument</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.errorMessage("Could not invoke browser.\n\nFreemind excecuted the following statement on a command line:\n\"" + command + "\".\n\nYou may look at the user or default property called '"+ propertyString+ "'.");" is 219.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>openDocument</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.errorMessage("Could not invoke browser.\n\nFreemind excecuted the following statement on a command line:\n\"" + browser_command + "\".\n\nYou may look at the user or default property called 'default_browser_command_mac'.");" is 234.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>openDocument</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.errorMessage("Could not invoke browser.\n\nFreemind excecuted the following statement on a command line:\n\"" + browser_command + "\".\n\nYou may look at the user or default property called 'default_browser_command_other_os'.");" is 239.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>openDocument</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>openDocument</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.info("Starting command array " + Arrays.toString(cmd) + ", and env for "+ envName+ " = "+ HtmlTools.unicodeToHTMLUnicodeEntity((String)newEnv.get(envName),true));" is 169.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>execWindows</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1400000</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>getLogger</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>getLogger</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Authenticator.setDefault(new ProxyAuthenticator(props.getProperty(PROXY_USER),Tools.decompress(props.getProperty(PROXY_PASSWORD))));" is 132.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>setupProxy</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>checkForAnotherInstance</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.info("An error occurred" + " while connecting to the FreeMind server instance." + " This probably means that"+ " FreeMind crashed and/or exited abnormally"+ " the last time it was run."+ " If you don't"+ " know what this means, don't worry. Exception: "+ e);" is 265.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>checkForAnotherInstance</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 640</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>setScreenBounds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 440</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>setScreenBounds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>createModeController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression Tools.isPreferenceTrue(getProperty(FreeMindCommon.LOAD_LAST_MAP)) &amp;&amp; restoreable != null &amp;&amp; restoreable.length() &gt; 0 is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>loadMaps</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>loadMaps</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field FREE_MIND_PROGRESS_LOAD_MAPS_NAME is 33.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>loadMaps</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (Tools.isPreferenceTrue(getProperty(FreeMindCommon.LOAD_LAST_MAP)) &amp;&amp; restoreable != null &amp;&amp; restoreable.length() &gt; 0) {" is 123.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMind</Class>
                        <Method>loadMaps</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindApplet</Class>
                        <Method>getWinState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression resourceURL == null || !resourceURL.getProtocol().equals("jar") &amp;&amp; System.getProperty("freemind.debug",null) == null is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindApplet</Class>
                        <Method>getResource</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (resourceURL == null || !resourceURL.getProtocol().equals("jar") &amp;&amp; System.getProperty("freemind.debug",null) == null) return null;" is 134.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindApplet</Class>
                        <Method>getResource</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindApplet</Class>
                        <Method>updateLookAndFeel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "URL url=this.getClass().getResource(classname.replaceFirst("^" + this.getClass().getPackage().getName() + ".","") + ".class");" is 126.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindCommon</Class>
                        <Method>getFreemindBaseDir</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "file=new File(URLDecoder.decode(url.getPath().replaceFirst("^(file:|jar:)+","").replaceFirst("!.*$","").replaceFirst(classname.replace('.','/') + ".class$",""),"UTF-8"));" is 170.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindCommon</Class>
                        <Method>getFreemindBaseDir</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (info.length != 3 &amp;&amp; info.length != 5) throw new IllegalArgumentException("Wrong number of tokens for version information: " + pString);" is 139.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>VersionInformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@20130071</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>VersionInformation</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "versionTextFont=availableFontFamilyNames.contains("Century Gothic") ? new Font("Century Gothic",Font.BOLD,14) : new Font("Arial",Font.BOLD,12);" is 143.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 14</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 58</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x4d</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x63</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xb4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 185</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 281</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xc8</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xdf</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x8b</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>FreeMindSplashModern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 58</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x4d</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x63</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xb4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 185</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 281</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xc8</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xdf</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x8b</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindSplashModern</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.fine("Task: " + lastTaskId + " ("+ act+ ") last "+ (timeDifference) / 1000.0 + " seconds.\nTotal: " + mTotalTime / 1000.0 + "\n");" is 137.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FeedBackImpl</Class>
                        <Method>progress</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000.0</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FeedBackImpl</Class>
                        <Method>progress</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000.0</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FeedBackImpl</Class>
                        <Method>progress</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mainMethod.invoke(null,new Object[]{args,defaultPreferences,userPreferences,starter.getUserPreferencesFile(defaultPreferences)});" is 129.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(null,"freemind.main.FreeMind can't be started","Startup problem",JOptionPane.ERROR_MESSAGE);" is 122.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String message="Warning: FreeMind requires version Java 1.4.0 or higher (your version: " + JAVA_VERSION + ", installed in "+ System.getProperty("java.home")+ ").";" is 163.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>checkJavaVersion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "System.err.println("Cannot create folder for user properties and logging: '" + userPropertiesFolder.getAbsolutePath() + "'");" is 125.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>createUserDirectory</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>setDefaultLocale</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>setDefaultLocale</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>setDefaultLocale</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>setDefaultLocale</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@775f7cd7</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>FreeMindStarter</Class>
                        <Method>setDefaultLocale</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>getReplaceResult</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>getReplaceResult</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1.2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unicodeToHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unicodeToHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 126</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unicodeToHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unicodeToHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unescapeHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unescapeHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unescapeHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>unescapeHTMLUnicodeEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String intermediate=text.replaceAll("(?ims)[\n\t]","").replaceAll("(?ims) +"," ").replaceAll("(?ims)&lt;br.*?&gt;","\n").replaceAll("(?ims)&lt;p.*?&gt;","\n\n").replaceAll("(?ims)&lt;div.*?&gt;","\n").replaceAll("(?ims)&lt;tr.*?&gt;","\n").replaceAll("(?ims)&lt;dt.*?&gt;","\n").replaceAll("(?ims)&lt;dd.*?&gt;","\n ").replaceAll("(?ims)&lt;td.*?&gt;"," ").replaceAll("(?ims)&lt;[uo]l.*?&gt;","\n").replaceAll("(?ims)&lt;li.*?&gt;","\n * ").replaceAll("(?ims) *&lt;/[^&gt;]*&gt;","").replaceAll("(?ims)&lt;[^/][^&gt;]*&gt; *","").replaceAll("^\n+","").trim();" is 487.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>htmlToPlain</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "intermediate=intermediate.replaceAll("(?ims)&amp;lt;","&lt;").replaceAll("(?ims)&amp;gt;","&gt;").replaceAll("(?ims)&amp;quot;","\"").replaceAll("(?ims)&amp;nbsp;"," ");" is 147.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>htmlToPlain</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression i &gt; 0 &amp;&amp; i &lt; lengthMinus1 &amp;&amp; (int)textTabsExpanded.charAt(i - 1) &gt; 32 &amp;&amp; (int)textTabsExpanded.charAt(i + 1) &gt; 32 is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>plainToHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>plainToHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>plainToHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>plainToHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@559a856c</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>plainToHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression i &gt; 0 &amp;&amp; i &lt; len - 1 &amp;&amp; (int)text.charAt(i - 1) &gt; 32 &amp;&amp; (int)text.charAt(i + 1) &gt; 32 is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>toXMLEscapedTextExpandingWhitespace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>toXMLEscapedTextExpandingWhitespace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>toXMLEscapedTextExpandingWhitespace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@d461a29</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>toXMLEscapedTextExpandingWhitespace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return character &gt;= 0x20 &amp;&amp; character &lt;= 0xD7FF || character == 0x9 || character == 0xA || character == 0xD || character &gt;= 0xE000 &amp;&amp; character &lt;= 0xFFFD || character &gt;= 0x10000 &amp;&amp; character &lt;= 0x10FFFF;" is 203.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x20</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xD7FF</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x9</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xA</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xD</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xE000</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xFFFD</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x10000</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x10FFFF</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>isXMLValidCharacter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>removeInvalidXmlCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>removeInvalidXmlCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>removeInvalidXmlCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>removeInvalidXmlCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>extractHtmlBody</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>HtmlTools</Class>
                        <Method>extractHtmlBody</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>IndexPair</Class>
                        <Method>IndexPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String[] countryMapArray=new String[]{"de","DE","en","UK","en","US","es","ES","es","MX","fi","FI","fr","FR","hu","HU","it","CH","it","IT","nl","NL","no","NO","pt","PT","ru","RU","sl","SI","uk","UA","zh","CN"};" is 209.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Resources</Class>
                        <Method>getCountryMap</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Resources</Class>
                        <Method>getCountryMap</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>colorToXml</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>colorToXml</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>colorToXml</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (l.size() != 2) throw new IllegalArgumentException("A point must consist of two numbers (and not: '" + string + "').");" is 122.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>xmlToPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>isAbsolutePath</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>isAbsolutePath</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>isWindows</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getPrefix</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression base == null || !base.getProtocol().equals(target.getProtocol()) || !base.getHost().equals(target.getHost()) is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>toRelativeURL</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return (string1 != null &amp;&amp; string2 != null &amp;&amp; string1.toLowerCase().equals(string2.toLowerCase())) || (string1 == null &amp;&amp; string2 == null);" is 139.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>safeEqualsIgnoreCase</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>setHidden</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>setHidden</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>setHidden</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>compress</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1024</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>compress</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>decompress</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1024</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>decompress</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return (holder == null &amp;&amp; holder2 == null) || (holder != null &amp;&amp; holder2 != null &amp;&amp; holder.getValue() == holder2.getValue());" is 125.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>safeEquals</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>setDialogLocationRelativeTo</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getUpdateReader</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 9</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getUpdateReader</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getUpdateReader</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 9</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getUpdateReader</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>logTransferable</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 238333614987438806L</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>addEscapeActionToDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "dialog.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(keyStroke),action.getValue(Action.NAME));" is 136.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>addKeyActionToDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1024</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>copyStream</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getHostName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression src &gt;= pVector.size() || dst &gt;= pVector.size() || src &lt; 0 || dst &lt; 0 is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>swapVectorPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>setPermissions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>setPermissions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return pNode.getShortText(pMindMapController) + ((pNode.isRoot()) ? "" : (" &lt;- " + getNodeTextHierarchy(pNode.getParentNode(),pMindMapController)));" is 148.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getNodeTextHierarchy</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.info("Component: " + KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() + ", Window: "+ KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow());" is 188.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>addFocusPrintTimer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>addFocusPrintTimer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.info("Component: " + KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() + ", Window: "+ KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow());" is 188.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression pEvent.getKeyChar() == actionKeyStroke.getKeyChar() &amp;&amp; (pEvent.getModifiers() &amp; modifiersMask) == (actionKeyStroke.getModifiers() &amp; modifiersMask) &amp;&amp; specialKeyAction.isEnabled() is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>invokeActionsToKeyboardLayoutDependantCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (pEvent.getKeyChar() == actionKeyStroke.getKeyChar() &amp;&amp; (pEvent.getModifiers() &amp; modifiersMask) == (actionKeyStroke.getModifiers() &amp; modifiersMask) &amp;&amp; specialKeyAction.isEnabled()) {" is 185.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>invokeActionsToKeyboardLayoutDependantCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "specialKeyAction.actionPerformed(new ActionEvent(pObject,ActionEvent.ACTION_PERFORMED,(String)specialKeyAction.getValue(Action.ACTION_COMMAND_KEY)));" is 149.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>invokeActionsToKeyboardLayoutDependantCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>setPageFormatFromString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return pPaper.getWidth() + ";" + pPaper.getHeight()+ ";"+ pPaper.getImageableX()+ ";"+ pPaper.getImageableY()+ ";"+ pPaper.getImageableWidth()+ ";"+ pPaper.getImageableHeight();" is 177.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getPageFormatAsString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2000000000</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>generateID</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field FREE_MIND_APP_CONTENTS_RESOURCES_JAVA is 37.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>Tools</Class>
                        <Method>getFreeMindBasePath</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>encrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>encrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>encrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 256l</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>encrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 128l</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>encrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>decrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>decrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>DesEncrypter</Class>
                        <Method>decrypt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression tag.equals("img") || tag.equals("br") || tag.equals("hr")|| tag.equals("input")|| tag.equals("meta")|| tag.equals("link")|| tag.equals("area")|| tag.equals("base")|| tag.equals("basefont")|| tag.equals("frame")|| tag.equals("iframe")|| tag.equals("col") is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLFilterWriter</Class>
                        <Method>write</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLFilterWriter</Class>
                        <Method>write</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (tag.equals("img") || tag.equals("br") || tag.equals("hr")|| tag.equals("input")|| tag.equals("meta")|| tag.equals("link")|| tag.equals("area")|| tag.equals("base")|| tag.equals("basefont")|| tag.equals("frame")|| tag.equals("iframe")|| tag.equals("col")) {" is 260.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLFilterWriter</Class>
                        <Method>write</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLFilterWriter</Class>
                        <Method>write</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLFilterWriter</Class>
                        <Method>write</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XHTMLFilterWriter</Class>
                        <Method>write</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>parseString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>parseString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>parseCharArray</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>write</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>writeEncoded</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>writeEncoded</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 126</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>writeEncoded</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>writeEncoded</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@35ee9378</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>writeEncoded</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression ((ch &lt; 'A') || (ch &gt; 'Z')) &amp;&amp; ((ch &lt; 'a') || (ch &gt; 'z')) &amp;&amp; ((ch &lt; '0') || (ch &gt; '9'))&amp;&amp; (ch != '_')&amp;&amp; (ch != '.')&amp;&amp; (ch != ':')&amp;&amp; (ch != '-')&amp;&amp; (ch &lt;= '\u007E') is complex.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>scanIdentifier</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (((ch &lt; 'A') || (ch &gt; 'Z')) &amp;&amp; ((ch &lt; 'a') || (ch &gt; 'z')) &amp;&amp; ((ch &lt; '0') || (ch &gt; '9'))&amp;&amp; (ch != '_')&amp;&amp; (ch != '.')&amp;&amp; (ch != ':')&amp;&amp; (ch != '-')&amp;&amp; (ch &lt;= '\u007E')) {" is 168.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>scanIdentifier</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@395be8d6</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>scanWhitespace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@386bbb74</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>scanWhitespace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>checkCDATA</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>checkCDATA</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>checkCDATA</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>checkCDATA</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>checkCDATA</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5416902</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>checkCDATA</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>skipComment</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>skipComment</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>skipSpecialTag</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>readChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 27</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>scanElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_XHTML_CONTENT_END_TAG_REGEXP is 37.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>scanElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 135 lines of code.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>scanElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>resolveEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>resolveEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLElement</Class>
                        <Method>resolveEntity</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "super("XML Parse Exception during parsing of " + ((name == null) ? "the XML definition" : ("a " + name + " element")) + ": "+ message);" is 135.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLParseException</Class>
                        <Method>XMLParseException</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "super("XML Parse Exception during parsing of " + ((name == null) ? "the XML definition" : ("a " + name + " element")) + " at line "+ lineNr+ ": "+ message);" is 156.</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Class>XMLParseException</Class>
                        <Method>XMLParseException</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ArrowLinkAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ArrowLinkTarget</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>CloudAdapter</Class>
                        <Method>CloudAdapter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>addRadioItem</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (getMap() != null) &amp;&amp; (getMap().getFile() != null) &amp;&amp; (getMap().getFile().getParentFile() != null) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>getMapsParentFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showDetail=JOptionPane.showConfirmDialog(getView(),getText("map_corrupted"),"FreeMind",JOptionPane.YES_NO_OPTION,JOptionPane.ERROR_MESSAGE);" is 144.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>handleLoadingException</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>saveAs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int overwriteMap=JOptionPane.showConfirmDialog(getView(),getText("map_already_exists"),"FreeMind",JOptionPane.YES_NO_OPTION);" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>saveAs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getFrame().getController().informationMessage(Tools.expandPlaceholders(getText("map_locked_by_save_as"),f.getName(),lockingUser));" is 130.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>saveAs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getFrame().getController().informationMessage(Tools.expandPlaceholders(getText("locking_failed_by_save_as"),f.getName()));" is 122.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>saveAs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>close</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int returnVal=JOptionPane.showOptionDialog(getFrame().getContentPane(),text,title,JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,null,null);" is 160.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>close</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "LastStateStorageManagement management=new LastStateStorageManagement(getFrame().getProperty(FreeMindCommon.MINDMAP_LAST_STATE_MAP_STORAGE));" is 140.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>close</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "throw new IllegalArgumentException("Node belonging to the node id " + nodeID + " not found in map "+ getMap().getFile());" is 121.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>getNodeFromID</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new MindMapNodesSelection(forNodesFlavor,null,plainText,getMap().getAsRTF(selectedNodes),getMap().getAsHTML(selectedNodes),null,null,createForNodeIdsFlavor);" is 164.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>ControllerAdapter</Class>
                        <Method>copy</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression style != null || color != null || width != WIDTH_PARENT is complex.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>EdgeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field APPLE_AWT_FILE_DIALOG_FOR_DIRECTORIES is 37.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FreeMindAwtFileDialog</Class>
                        <Method>FreeMindAwtFileDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field APPLE_AWT_FILE_DIALOG_FOR_DIRECTORIES is 37.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FreeMindAwtFileDialog</Class>
                        <Method>setFileSelectionMode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@44754f81</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FreeMindAwtFileDialog</Class>
                        <Method>setFileSelectionMode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "System.out.println("Dir '" + dialog.getDirectory() + "', File: '"+ dialog.getFile()+ "', selected File: '"+ selectedFile+ "'");" is 127.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FreeMindAwtFileDialog</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "System.out.println("Dir '" + dialog.getDirectory() + "', File: '"+ dialog.getFile()+ "', selected File: '"+ selectedFile+ "'");" is 127.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>FreeMindAwtFileDialog</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>LineAdapter</Class>
                        <Method>updateStandards</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mTimerForFileChangeObservation is 30.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>MapAdapter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field INTERVAL_BETWEEN_FILE_MODIFICATION_TIME_CHECKS is 46.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>MapAdapter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mTimerForFileChangeObservation.schedule(new FileChangeInspectorTimerTask(),INTERVAL_BETWEEN_FILE_MODIFICATION_TIME_CHECKS,INTERVAL_BETWEEN_FILE_MODIFICATION_TIME_CHECKS);" is 170.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>MapAdapter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mTimerForFileChangeObservation is 30.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>cancelFileChangeObservationTimer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesInserted</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesInserted</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesInserted</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesRemoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesRemoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesRemoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeStructureChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeStructureChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeStructureChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>fireTreeNodesChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pGetEventIfChangedAfterThisTimeInMillies is 40.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MapAdapter</Class>
                        <Method>registerMapSourceChangedObserver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindIcon</Class>
                        <Method>getIcon</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pGetEventIfChangedAfterThisTimeInMillies is 40.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMap</Class>
                        <Method>registerMapSourceChangedObserver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapArrowLink</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (link.getSource() == null) || (link.getTarget() == null) || (link.getDestinationLabel() == null) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapLinkRegistry</Class>
                        <Method>registerLink</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if ((link.getSource() == null) || (link.getTarget() == null) || (link.getDestinationLabel() == null)) throw new java.lang.IllegalArgumentException("Illegal link specification." + link);" is 185.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>MindMapLinkRegistry</Class>
                        <Method>registerLink</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field sSaveOnlyIntrinsicallyNeededIds is 31.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>NodeAdapter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field sSaveOnlyIntrinsicallyNeededIds is 31.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>propertyChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 40</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>getShortText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 40</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>getShortText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>getStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setFont(getFrame().getController().getFontThroughMap(new Font(font.getFamily(),font.getStyle() ^ Font.BOLD,font.getSize())));" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>toggleBold</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setFont(getFrame().getController().getFontThroughMap(new Font(font.getFamily(),font.getStyle() ^ Font.ITALIC,font.getSize())));" is 127.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>toggleItalic</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>isNewChildLeft</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (!node.isRoot() &amp;&amp; node.getParentNode() != null) recursiveCallRemoveChildren(node.getParentNode(),removedChild,oldDad);" is 122.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>recursiveCallRemoveChildren</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>removeAllHooks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !sSaveOnlyIntrinsicallyNeededIds || (registry.isTargetOfLocalHyperlinks(label) || (registry.getAllLinksIntoMe(this).size() &gt; 0)) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 32</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field sSaveOnlyIntrinsicallyNeededIds is 31.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 131 lines of code.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (!sSaveOnlyIntrinsicallyNeededIds || (registry.isTargetOfLocalHyperlinks(label) || (registry.getAllLinksIntoMe(this).size() &gt; 0))) {" is 135.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "node.setAttribute(XMLElementAdapter.XML_NODE_HISTORY_CREATED_AT,Tools.dateToString(getHistoryInformation().getCreatedAt()));" is 124.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "node.setAttribute(XMLElementAdapter.XML_NODE_HISTORY_LAST_MODIFIED_AT,Tools.dateToString(getHistoryInformation().getLastModifiedAt()));" is 135.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>save</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>NodeAdapter</Class>
                        <Method>hasExactlyOneVisibleChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return "node: " + nodeColor + ", "+ nodeBackgroundColor+ ", "+ nodeStyle+ ", "+ nodeFontFamily+ ", "+ nodeFontSize+ ", "+ nodeIcon+ ", "+ text+ ", "+ "\nedge: "+ edgeColor+ ", "+ edgeStyle+ ", "+ edgeWidth;" is 206.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 26</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                        <Method>loadPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (child.getStringAttribute("background_color") != null &amp;&amp; child.getStringAttribute("background_color").length() == 7) {" is 121.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                        <Method>loadPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setNodeIcon(child.getStringAttribute("icon").equals("none") ? null : MindIcon.factory(child.getStringAttribute("icon")));" is 121.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                        <Method>loadPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (anythingFound == false) System.err.println("Cannot find the children " + searchName + " to the pattern "+ getName());" is 121.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                        <Method>loadPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                        <Method>loadPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePattern</Class>
                        <Method>loadPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>createPatternFromNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternEdgeColor((PatternEdgeColor)processPatternProperties(p1.getPatternEdgeColor(),p2.getPatternEdgeColor(),new PatternEdgeColor()));" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternEdgeStyle((PatternEdgeStyle)processPatternProperties(p1.getPatternEdgeStyle(),p2.getPatternEdgeStyle(),new PatternEdgeStyle()));" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternEdgeWidth((PatternEdgeWidth)processPatternProperties(p1.getPatternEdgeWidth(),p2.getPatternEdgeWidth(),new PatternEdgeWidth()));" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternNodeBackgroundColor((PatternNodeBackgroundColor)processPatternProperties(p1.getPatternNodeBackgroundColor(),p2.getPatternNodeBackgroundColor(),new PatternNodeBackgroundColor()));" is 195.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternNodeColor((PatternNodeColor)processPatternProperties(p1.getPatternNodeColor(),p2.getPatternNodeColor(),new PatternNodeColor()));" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternNodeFontBold((PatternNodeFontBold)processPatternProperties(p1.getPatternNodeFontBold(),p2.getPatternNodeFontBold(),new PatternNodeFontBold()));" is 160.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternNodeFontItalic((PatternNodeFontItalic)processPatternProperties(p1.getPatternNodeFontItalic(),p2.getPatternNodeFontItalic(),new PatternNodeFontItalic()));" is 170.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternNodeFontName((PatternNodeFontName)processPatternProperties(p1.getPatternNodeFontName(),p2.getPatternNodeFontName(),new PatternNodeFontName()));" is 160.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternNodeFontSize((PatternNodeFontSize)processPatternProperties(p1.getPatternNodeFontSize(),p2.getPatternNodeFontSize(),new PatternNodeFontSize()));" is 160.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result.setPatternNodeStyle((PatternNodeStyle)processPatternProperties(p1.getPatternNodeStyle(),p2.getPatternNodeStyle(),new PatternNodeStyle()));" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>StylePatternFactory</Class>
                        <Method>intersectPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 15</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_REGISTERED_ATTRIBUTE_NAME is 34.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_REGISTERED_ATTRIBUTE_VALUE is 35.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression child instanceof XMLElementAdapter &amp;&amp; getName().equals(XML_NODE_REGISTERED_ATTRIBUTE_NAME) &amp;&amp; child.getName().equals(XML_NODE_REGISTERED_ATTRIBUTE_VALUE) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>addChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 17</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>addChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_REGISTERED_ATTRIBUTE_NAME is 34.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>addChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_REGISTERED_ATTRIBUTE_VALUE is 35.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>addChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (child instanceof XMLElementAdapter &amp;&amp; getName().equals(XML_NODE_REGISTERED_ATTRIBUTE_NAME) &amp;&amp; child.getName().equals(XML_NODE_REGISTERED_ATTRIBUTE_VALUE)) {" is 160.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>addChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 48</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_REGISTERED_ATTRIBUTE_NAME is 34.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_REGISTERED_ATTRIBUTE_VALUE is 35.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 154 lines of code.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 20</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setNodeAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_HISTORY_LAST_MODIFIED_AT is 33.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setNodeAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setNodeAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>setNodeAttribute</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>completeElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_NODE_REGISTERED_ATTRIBUTE_NAME is 34.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>completeElement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>processUnfinishedLinks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.severe("Cannot find the label " + linkTarget.getUniqueId() + " for the link in the map. The link target "+ linkTarget+ " is not restored.");" is 147.</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Class>XMLElementAdapter</Class>
                        <Method>processUnfinishedLinks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistry</Class>
                        <Method>fireStateChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistry</Class>
                        <Method>fireStateChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistry</Class>
                        <Method>fireAttributesChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistry</Class>
                        <Method>fireAttributesChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getColumnCount</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>setValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>setValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>setValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getColumnClass</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getColumnClass</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getColumnName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (restrictionColumnName == null) restrictionColumnName=Resources.getInstance().getResourceString("attributes_restriction");" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getColumnName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getColumnName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeRegistryTableModel</Class>
                        <Method>getColumnName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeTableLayoutModel</Class>
                        <Method>fireColumnWidthChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>AttributeTableLayoutModel</Class>
                        <Method>fireColumnWidthChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Class>NodeAttributeTableModel</Class>
                        <Method>getColumnCount</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>BrowseArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "tileSources.put(MapNodePositionHolderBase.TILE_SOURCE_MAP_QUEST_OPEN_MAP,MapNodePositionHolderBase.SHORT_MAP_QUEST_OPEN_MAP);" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>FollowMapLink</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String link="http://www.openstreetmap.org/?" + "mlat=" + barePositions[0] + "&amp;mlon="+ barePositions[1]+ "&amp;lat="+ barePositions[2]+ "&amp;lon="+ barePositions[3]+ "&amp;zoom="+ barePositions[4]+ "&amp;layers="+ tileSources.get(barePositions[5]);" is 232.</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>FollowMapLink</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>FollowMapLink</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>FollowMapLink</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>FollowMapLink</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>FollowMapLink</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Class>NodeNoteViewer</Class>
                        <Method>getNoteViewerComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>getFindFromText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>getFindFromText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.getController().informationMessage(messageText.replaceAll("\\$1",searchTerm).replaceAll("\\$2",getFindFromText()),controller.getView().getSelected());" is 161.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Resources.getInstance().getProperties().setProperty(FreeMind.RESOURCES_SEARCH_IN_NOTES_TOO,mFindInNotesTooBox.isSelected() ? "true" : "false");" is 143.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>close</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(new JLabel(controller.getText("find_what")),new GridBagConstraints(1,0,1,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 173.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(mSearchField,new GridBagConstraints(2,0,10,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 143.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(new JLabel(findImage),new GridBagConstraints(0,0,1,2,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 151.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(mFindInNotesTooBox,new GridBagConstraints(0,2,3,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 148.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(okButton,new GridBagConstraints(2,3,1,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 138.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "contentPane.add(cancelButton,new GridBagConstraints(3,3,1,1,1.0,1.0,GridBagConstraints.WEST,GridBagConstraints.BOTH,new Insets(5,5,0,0),0,0));" is 142.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 14</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>displayDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>find</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>find</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression myChar == '"' &amp;&amp; i &gt; 0 &amp;&amp; i &lt; len - 1 &amp;&amp; searchTerm.charAt(i - 1) != ' ' &amp;&amp; searchTerm.charAt(i + 1) != ' ' is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindAction</Class>
                        <Method>breakSearchTermIntoSubterms</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.getController().informationMessage(controller.getText("no_previous_find"),controller.getView().getSelected());" is 121.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindNextAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.getController().informationMessage(messageText.replaceAll("\\$1",searchTerm).replaceAll("\\$2",find.getFindFromText()),controller.getView().getSelected());" is 166.</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Class>FindNextAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.isAltDown() || e.isControlDown() || e.isMetaDown() is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.common</Component>
                        <Class>CommonNodeKeyListener</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 25</Description>
                    <Entity>
                        <Component>freemind.modes.common</Component>
                        <Class>CommonNodeKeyListener</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 300</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>checkEqualAndMinimumSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>EnterPasswordDialog</Class>
                        <Method>getJContentPane</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>IconSelectionPopupDialog</Class>
                        <Method>IconSelectionPopupDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>IconSelectionPopupDialog</Class>
                        <Method>IconSelectionPopupDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 27</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>IconSelectionPopupDialog</Class>
                        <Method>IconSelectionPopupDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return ((position.getX() &gt;= 0) &amp;&amp; (position.getX() &lt; xDimension) &amp;&amp; (position.getY() &gt;= 0)&amp;&amp; (position.getY() &lt; yDimension)&amp;&amp; (calculateIndex(position) &lt; numOfIcons));" is 167.</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>IconSelectionPopupDialog</Class>
                        <Method>canSelect</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>IconSelectionPopupDialog</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression iconKeyStroke != null &amp;&amp; (keyEvent.getKeyCode() == iconKeyStroke.getKeyCode() &amp;&amp; keyEvent.getKeyCode() != 0 &amp;&amp; (iconKeyStroke.getModifiers() &amp; KeyEvent.SHIFT_MASK) == (keyEvent.getModifiers() &amp; KeyEvent.SHIFT_MASK) || keyEvent.getKeyChar() == iconKeyStroke.getKeyChar()) &amp;&amp; keyEvent.getKeyChar() != 0 &amp;&amp; keyEvent.getKeyChar() != KeyEvent.CHAR_UNDEFINED is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>IconSelectionPopupDialog</Class>
                        <Method>findIndexByKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (iconKeyStroke != null &amp;&amp; (keyEvent.getKeyCode() == iconKeyStroke.getKeyCode() &amp;&amp; keyEvent.getKeyCode() != 0 &amp;&amp; (iconKeyStroke.getModifiers() &amp; KeyEvent.SHIFT_MASK) == (keyEvent.getModifiers() &amp; KeyEvent.SHIFT_MASK) || keyEvent.getKeyChar() == iconKeyStroke.getKeyChar()) &amp;&amp; keyEvent.getKeyChar() != 0 &amp;&amp; keyEvent.getKeyChar() != KeyEvent.CHAR_UNDEFINED) {" is 359.</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Class>IconSelectionPopupDialog</Class>
                        <Method>findIndexByKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "delayedSelectionEnabled.setValue(c.getFrame().getProperty("selection_method").equals("selection_method_direct") ? false : true);" is 128.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>updateSelectionMethod</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field controlRegionForDelayedSelection is 32.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>mouseMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>getControlRegion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>getControlRegion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>getControlRegion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field controlRegionForDelayedSelection is 32.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>createTimer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "timerForDelayedSelection.schedule(new timeDelayedSelection(c,e),(delayedSelectionEnabled.getValue()) ? timeForDelayedSelection.getValue() : 0);" is 143.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>createTimer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field controlRegionForDelayedSelection is 32.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>CommonNodeMouseMotionListener</Class>
                        <Method>stopTimerForDelayedSelection</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.getModifiers() == 0 &amp;&amp; !c.isBlocked() &amp;&amp; c.getView().getSelecteds().size() &lt;= 1 is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>timeDelayedSelection</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.getModifiers() == 0 &amp;&amp; !c.isBlocked() &amp;&amp; c.getView().getSelecteds().size() &lt;= 1 is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>timeDelayedSelection</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>MindMapMouseWheelEventHandler</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier registeredMouseWheelEventHandler is 32.</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10f</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000f</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000f</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32f</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32f</Description>
                    <Entity>
                        <Component>freemind.modes.common.listeners</Component>
                        <Class>MindMapMouseWheelEventHandler</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_STORAGE_MAP_TOOLTIP_LOCATION is 32.</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>MapNodePositionHolderBase</Class>
                        <Method>loadFrom</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new String[]{(String)mValues.get(XML_STORAGE_POS_LAT),(String)mValues.get(XML_STORAGE_POS_LON),(String)mValues.get(XML_STORAGE_MAP_LAT),(String)mValues.get(XML_STORAGE_MAP_LON),(String)mValues.get(XML_STORAGE_ZOOM),(String)mValues.get(XML_STORAGE_TILE_SOURCE)};" is 268.</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Class>MapNodePositionHolderBase</Class>
                        <Method>getBarePosition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Class>FileNodeModel</Class>
                        <Method>childrenUnfolded</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>AddArrowLinkAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>AddArrowLinkAction</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>AddLocalLinkAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 28</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ApplyPatternAction</Class>
                        <Method>applyPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getMindMapController().setNodeBackgroundColor(node,Tools.xmlToColor(pattern.getPatternNodeBackgroundColor().getValue()));" is 121.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ApplyPatternAction</Class>
                        <Method>applyPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new ActionPair(createArrowLinkPointXmlAction(link,startPoint,endPoint),createArrowLinkPointXmlAction(link,link.getStartInclination(),link.getEndInclination()));" is 167.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ChangeArrowLinkEndPoints</Class>
                        <Method>getActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ChangeArrowsInArrowLinkAction</Class>
                        <Method>ChangeArrowsInArrowLinkAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new ActionPair(createArrowLinkArrowXmlAction(arrowLink2,hasStartArrow2,hasEndArrow2),createArrowLinkArrowXmlAction(arrowLink2,arrowLink2.getStartArrow(),arrowLink2.getEndArrow()));" is 187.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ChangeArrowsInArrowLinkAction</Class>
                        <Method>getActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Color color=Controller.showCommonJColorChooserDialog(controller.getView().getSelected(),controller.getText("choose_cloud_color"),selectedColor);" is 144.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CloudColorAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "CloudColorXmlAction undoAction=createCloudColorXmlAction(node,(node.getCloud() == null) ? null : node.getCloud().getColor());" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CloudColorAction</Class>
                        <Method>setCloudColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Color color=Controller.showCommonJColorChooserDialog(controller.getView().getSelected(),(String)this.getValue(Action.NAME),selectedColor);" is 138.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ColorArrowLinkAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new ActionPair(createArrowLinkColorXmlAction(arrowLink,color),createArrowLinkColorXmlAction(arrowLink,arrowLink.getColor()));" is 132.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ColorArrowLinkAction</Class>
                        <Method>getActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(mMindMapController.getFrame().getJFrame(),mMindMapController.getSelectedView(),"really_cut_node","confirmation",mMindMapController,new OptionalDontShowMeAgainDialog.StandardPropertyHandler(mMindMapController.getController(),FreeMind.RESOURCES_CUT_NODES_WITHOUT_QUESTION),OptionalDontShowMeAgainDialog.ONLY_OK_SELECTION_IS_STORED).show().getResult();" is 398.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>CutAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(mMindMapController.getFrame().getJFrame(),mMindMapController.getSelectedView(),"really_remove_node","confirmation",mMindMapController,new OptionalDontShowMeAgainDialog.StandardPropertyHandler(mMindMapController.getController(),FreeMind.RESOURCES_DELETE_NODES_WITHOUT_QUESTION),OptionalDontShowMeAgainDialog.ONLY_OK_SELECTION_IS_STORED).show().getResult();" is 404.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DeleteChildAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DeleteChildAction</Class>
                        <Method>removeHooks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DeleteChildAction</Class>
                        <Method>removeHooks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Color color=Controller.showCommonJColorChooserDialog(controller.getView().getSelected(),controller.getText("choose_edge_color"),controller.getSelected().getEdge().getColor());" is 175.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EdgeColorAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !isHtmlNode &amp;&amp; !isLongNode &amp;&amp; editLong is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 117 lines of code.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(mMindMapController.getFrame().getJFrame(),mMindMapController.getSelectedView(),"edit.edit_rich_text","edit.decision",mMindMapController,new OptionalDontShowMeAgainDialog.StandardPropertyHandler(mMindMapController.getController(),FreeMind.RESOURCES_REMIND_USE_RICH_TEXT_IN_NEW_LONG_NODES),OptionalDontShowMeAgainDialog.BOTH_OK_AND_CANCEL_OPTIONS_ARE_STORED).show().getResult();" is 425.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "EditNodeWYSIWYG editNodeWYSIWYG=new EditNodeWYSIWYG(node,text,firstEvent,mMindMapController,new EditNodeBase.EditControl(){" is 123.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "EditNodeExternalApplication editNodeExternalApplication=new EditNodeExternalApplication(node,text,firstEvent,mMindMapController,new EditNodeBase.EditControl(){" is 159.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "EditNodeTextField textfield=new EditNodeTextField(node,text,firstEvent,mMindMapController,new EditNodeBase.EditControl(){" is 121.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>EditAction</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression mMindMapController.getMap() == null || node == null || node.isRoot() is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ExportBranchAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "chooser.setSelectedFile(new File(Tools.getFileNameProposal(node) + freemind.main.FreeMindCommon.FREEMIND_FILE_EXTENSION));" is 122.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ExportBranchAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int overwriteMap=JOptionPane.showConfirmDialog(mMindMapController.getView(),mMindMapController.getText("map_already_exists"),"FreeMind",JOptionPane.YES_NO_OPTION);" is 163.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ExportBranchAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "node.setFont(modeController.getController().getFontThroughMap(new Font(fontFamily,node.getFont().getStyle(),node.getFont().getSize())));" is 136.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>FontFamilyAction</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "this(mindMapController.getText(title),(iconPath == null) ? null : new ImageIcon(mindMapController.getResource(iconPath)),mindMapController);" is 140.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>FreemindAction</Class>
                        <Method>FreemindAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (e.getID() == ActionEvent.ACTION_FIRST &amp;&amp; (e.getModifiers() &amp; ActionEvent.SHIFT_MASK &amp; ~ActionEvent.CTRL_MASK&amp; ~ActionEvent.ALT_MASK) != 0) {" is 144.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>IconAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int iconIndex=removeFirst ? IconContainedCondition.iconFirstIndex(node,icon.getName()) : IconContainedCondition.iconLastIndex(node,icon.getName());" is 147.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>IconAction</Class>
                        <Method>getRemoveIconActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ImportExplorerFavoritesAction</Class>
                        <Method>importExplorerFavorites</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ImportExplorerFavoritesAction</Class>
                        <Method>importExplorerFavorites</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(mapView,controller.getText("cannot_join_nodes_with_children"),"FreeMind",JOptionPane.WARNING_MESSAGE);" is 132.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>JoinNodesAction</Class>
                        <Method>joinNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !(isHtml || isHtmlNode || content.equals("")) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>JoinNodesAction</Class>
                        <Method>addContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>JoinNodesAction</Class>
                        <Method>addContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>JoinNodesAction</Class>
                        <Method>addContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>JoinNodesAction</Class>
                        <Method>addContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "MoveNodeXmlAction undoAction=moveNode(selected,selected.getParentNode().getVGap(),selected.getHGap(),selected.getShiftY());" is 123.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MoveNodeAction</Class>
                        <Method>getActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression parentVGap == node.getParentNode().getVGap() &amp;&amp; hGap == node.getHGap() &amp;&amp; shiftY == node.getShiftY() is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MoveNodeAction</Class>
                        <Method>moveNodeTo</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "throw new IllegalArgumentException("Designated id '" + newId + "' was not given to the node. It received '"+ givenId+ "'.");" is 124.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NewChildAction</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NewChildAction</Class>
                        <Method>addNew</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Color color=Controller.showCommonJColorChooserDialog(controller.getView().getSelected(),controller.getText("choose_node_background_color"),controller.getSelected().getBackgroundColor());" is 186.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeBackgroundColorAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Color color=Controller.showCommonJColorChooserDialog(controller.getView().getSelected(),controller.getText("choose_node_color"),controller.getSelected().getColor());" is 165.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeColorAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeHookAction</Class>
                        <Method>createHookNodeUndoAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>NodeHookAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "_paste(getTransferable(pasteAction.getTransferableContent()),mMindMapController.getNodeFromID(pasteAction.getNode()),pasteAction.getAsSibling(),pasteAction.getIsLeft());" is 169.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "DataFlavorHandler[] dataFlavorHandlerList=new DataFlavorHandler[]{new FileListFlavorHandler(),new MindMapNodesFlavorHandler(),new DirectHtmlFlavorHandler(),new StringFlavorHandler(),new ImageFlavorHandler()};" is 208.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>getFlavorHandlers</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>pasteXMLWithoutRedisplay</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>insertNodeInto</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 20</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>pasteStringWithoutRedisplay</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "visibleText=visibleText.replaceAll("^http://(www\\.)?","").replaceAll("(/|\\.[^\\./\\?]*)$","").replaceAll("((\\.[^\\./]*\\?)|\\?)[^/]*$"," ? ...").replaceAll("_|%20"," ");" is 172.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>pasteStringWithoutRedisplay</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "visibleText+=textPartIdx == 0 ? textParts[textPartIdx] : Tools.firstLetterCapitalized(textParts[textPartIdx].replaceAll("^~*",""));" is 131.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>pasteStringWithoutRedisplay</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 14</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>getTransferableContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(mMindMapController.getView(),mMindMapController.getText("map_not_saved"),"FreeMind",JOptionPane.ERROR_MESSAGE);" is 141.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>getTransferableContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "File tempFile=File.createTempFile(mindmapFile.getName().replace(FreeMindCommon.FREEMIND_FILE_EXTENSION,"_"),".jpeg",mindmapFile.getParentFile());" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>getTransferableContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Transferable copy=new MindMapNodesSelection(trans.getTransferable(),trans.getTransferableAsImage(),trans.getTransferableAsPlainText(),trans.getTransferableAsRTF(),trans.getTransferableAsHtml(),trans.getTransferableAsDrop(),fileList,null);" is 238.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>PasteAction</Class>
                        <Method>getTransferable</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DataFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>FileListFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MindMapNodesFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "MindMapNode node=mMindMapController.getMindMapMapModel().loadTree(new MindMapMapModel.StringReaderCreator(mapContent),false);" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>MindMapNodesFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DirectHtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "textFromClipboard=textFromClipboard.replaceFirst("(?i)(?s)&lt;head&gt;.*&lt;/head&gt;","").replaceFirst("(?i)(?s)^.*&lt;html[^&gt;]*&gt;","&lt;html&gt;").replaceFirst("(?i)(?s)&lt;body [^&gt;]*&gt;","&lt;body&gt;").replaceAll("(?i)(?s)&lt;script.*?&gt;.*?&lt;/script&gt;","").replaceAll("(?i)(?s)&lt;/?tbody.*?&gt;","").replaceAll("(?i)(?s)&lt;!--.*?--&gt;","").replaceAll("(?i)(?s)&lt;/?o[^&gt;]*&gt;","");" is 332.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DirectHtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 65533</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DirectHtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>DirectHtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>HtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>HtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>HtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String referenceURLString=JOptionPane.showInputDialog(mMindMapController.getView().getSelected(),mMindMapController.getText("enter_base_url"));" is 143.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>HtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>HtmlFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>StringFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ImageFlavorHandler</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "freemind.controller.actions.generated.instance.RemoveIconXmlAction removeAction=(freemind.controller.actions.generated.instance.RemoveIconXmlAction)action;" is 155.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>RemoveIconAction</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(mindMapController.getView(),mindMapController.getText("map_not_saved"),"FreeMind",JOptionPane.ERROR_MESSAGE);" is 139.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>RevertAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String inputValue=JOptionPane.showInputDialog(controller.getView().getSelected(),controller.getText("edit_link_manually"),controller.getSelected().getLink());" is 158.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>SetLinkByTextFieldAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (undo &amp;&amp; (node.isFolded() == fold)) || (!undo &amp;&amp; (node.isFolded() != fold)) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>ToggleFoldedAction</Class>
                        <Method>createSingleFoldAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (actionPairList.size() &gt; 0) &amp;&amp; (actionFrameStarted || currentTime - timeOfLastAdd &lt; TIME_TO_BEGIN_NEW_ACTION) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>UndoAction</Class>
                        <Method>add</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Class>UndoAction</Class>
                        <Method>add</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 132 lines of code.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "super(JOptionPane.getFrameForComponent(mapView),Tools.removeMnemonic(Resources.getInstance().getResourceString("attributes_assign_dialog")),false);" is 147.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>AssignAttributeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AssignAttributeDialog</Class>
                        <Method>selectedAttributeChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>IteratingAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(AssignAttributeDialog.this,Resources.getInstance().getResourceString("attributes_adding_empty_attribute_error"),Resources.getInstance().getResourceString("error"),JOptionPane.ERROR_MESSAGE);" is 220.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>IteratingAction</Class>
                        <Method>showEmptyStringErrorMessage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeManagerDialog</Class>
                        <Method>AttributeManagerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeManagerDialog</Class>
                        <Method>AttributeManagerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeManagerDialog</Class>
                        <Method>AttributeManagerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeManagerDialog</Class>
                        <Method>AttributeManagerDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ListDialog.showDialog((Component)e.getSource(),AttributeManagerDialog.this,labelText,title,listBoxModel,"xxxxxxxxxxxxxxxxxxxxx");" is 129.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>EditListAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "selectAllButtonRenderer=new ButtonRenderer(checkBoxImage,Resources.getInstance().getResourceString("attributes_select_all_tooltip"));" is 133.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeRegistryTable</Class>
                        <Method>AttributeRegistryTable</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeRegistryTable</Class>
                        <Method>AttributeRegistryTable</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int prefWidth=getTableHeader().getDefaultRenderer().getTableCellRendererComponent(this,getColumnName(i),false,false,-1,i).getPreferredSize().width;" is 147.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeRegistryTable</Class>
                        <Method>setModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeRegistryTable</Class>
                        <Method>setModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeRegistryTable</Class>
                        <Method>getCellRenderer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeRegistryTable</Class>
                        <Method>getCellRenderer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>AttributeRegistryTable</Class>
                        <Method>prepareEditor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ButtonEditor</Class>
                        <Method>getTableCellEditorComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ButtonRenderer</Class>
                        <Method>getTableCellRendererComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 600</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>ImportAttributesDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 300</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>ImportAttributesDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>ImportAttributesDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>ImportAttributesDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>ImportAttributesDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>ImportAttributesDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(parentComponent,Resources.getInstance().getResourceString("attributes_no_import_candidates_found"),getTitle(),JOptionPane.INFORMATION_MESSAGE);" is 173.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@228e0281</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>valueChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ImportAttributesDialog</Class>
                        <Method>setParentSelectionType</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MyRenderer</Class>
                        <Method>getTreeCellRendererComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ActionPair actionPair=new ActionPair(createAction(model,row,name,value),((MindMapModeAttributeController)getAttributeController()).removeAttributeActor.createAction(model,row));" is 177.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>InsertAttributeActor</Class>
                        <Method>createActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "act(node.getAttributes(),insertAttributeAction.getRow(),insertAttributeAction.getName(),insertAttributeAction.getValue());" is 122.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>InsertAttributeActor</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>showDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression orientation == SwingConstants.VERTICAL &amp;&amp; direction &lt; 0 &amp;&amp; (row=getFirstVisibleIndex()) != -1 is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 250</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>ListDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression orientation == SwingConstants.VERTICAL &amp;&amp; direction &lt; 0 &amp;&amp; (row=getFirstVisibleIndex()) != -1 is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>getScrollableUnitIncrement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ListDialog</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier registryAttributeValueActionPair is 32.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MindMapModeAttributeController</Class>
                        <Method>performSetValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final ActionPair setAttributeValueActionPair=setAttributeValueActor.createActionPair(model,row,element.getValues().firstElement().toString());" is 142.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MindMapModeAttributeController</Class>
                        <Method>performSetValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.getActionFactory().doTransaction("setAttributeValueActionPair",setAttributeValueActor.createActionPair(model,row,""));" is 129.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MindMapModeAttributeController</Class>
                        <Method>performSetValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier registryNewAttributeActionPair is 30.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MindMapModeAttributeController</Class>
                        <Method>performInsertRow</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.doTransaction("replaceAttributeActionPair",replaceAttributeValueActor.createActionPair(name,oldValue,newValue));" is 123.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MindMapModeAttributeController</Class>
                        <Method>performReplaceAttributeValue</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression oldName.equals("") || newName.equals("") || oldName.equals(newName) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MindMapModeAttributeController</Class>
                        <Method>performReplaceAtributeName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.doTransaction("registryNewAttributeValueActionPair",registryAttributeValueActor.createActionPair(newName,values.getElementAt(i).toString()));" is 152.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>MindMapModeAttributeController</Class>
                        <Method>performReplaceAtributeName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ActionPair actionPair=new ActionPair(createAction(name),((MindMapModeAttributeController)getAttributeController()).unregistryAttributeActor.createAction(name));" is 160.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>RegistryAttributeActor</Class>
                        <Method>createActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ActionPair actionPair=new ActionPair(createAction(name,value),((MindMapModeAttributeController)getAttributeController()).unregistryAttributeValueActor.createAction(name,value));" is 177.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>RegistryAttributeValueActor</Class>
                        <Method>createActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ActionPair actionPair=new ActionPair(createAction(model,row),((MindMapModeAttributeController)getAttributeController()).insertAttributeActor.createAction(model,row,name,value));" is 177.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>RemoveAttributeActor</Class>
                        <Method>createActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "act(replaceAttributeValueAction.getName(),replaceAttributeValueAction.getOldValue(),replaceAttributeValueAction.getNewValue());" is 127.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>ReplaceAttributeValueActor</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "act(getNode(setAttributeColumnWidthAction.getNode()).getAttributes(),setAttributeColumnWidthAction.getColumn(),setAttributeColumnWidthAction.getWidth());" is 153.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>SetAttributeColumnWidthActor</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final XmlAction firstAction=((MindMapModeAttributeController)getAttributeController()).registryAttributeActor.createAction(name);" is 129.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>UnregistryAttributeActor</Class>
                        <Method>createUndoAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final XmlAction nextAction=((MindMapModeAttributeController)getAttributeController()).registryAttributeValueActor.createAction(name,value);" is 139.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>UnregistryAttributeActor</Class>
                        <Method>createUndoAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier unregistryAttributeElementaryAction is 35.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>UnregistryAttributeActor</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ActionPair actionPair=new ActionPair(createAction(name,value),((MindMapModeAttributeController)getAttributeController()).registryAttributeValueActor.createAction(name,value));" is 175.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>UnregistryAttributeValueActor</Class>
                        <Method>createActionPair</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier unrregistryAttributeValueAction is 31.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>UnregistryAttributeValueActor</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "UnregistryAttributeValueElementaryAction unrregistryAttributeValueAction=(UnregistryAttributeValueElementaryAction)action;" is 122.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Class>UnregistryAttributeValueActor</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 105 lines of code.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mNodeColor=new ColorProperty(NODE_COLOR + ".tooltip",NODE_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_NODE_TEXT_COLOR),this);" is 132.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mNodeBackgroundColor=new ColorProperty(NODE_BACKGROUND_COLOR + ".tooltip",NODE_BACKGROUND_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_BACKGROUND_COLOR),this);" is 165.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mEdgeColor=new ColorProperty(EDGE_COLOR + ".tooltip",EDGE_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_EDGE_COLOR),this);" is 127.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setPatternControls(pattern.getPatternNodeColor(),mSetNodeColor,mNodeColor,fmMain.getDefaultProperty(FreeMind.RESOURCES_NODE_TEXT_COLOR));" is 137.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>setPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setPatternControls(pattern.getPatternNodeBackgroundColor(),mSetNodeBackgroundColor,mNodeBackgroundColor,fmMain.getDefaultProperty(FreeMind.RESOURCES_BACKGROUND_COLOR));" is 168.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>setPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setPatternControls(pattern.getPatternEdgeColor(),mSetEdgeColor,mEdgeColor,fmMain.getDefaultProperty(FreeMind.RESOURCES_EDGE_COLOR));" is 132.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>setPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setPatternControls(pattern.getPatternNodeFontName(),mSetNodeFontName,mNodeFontName,mMindMapController.getController().getDefaultFontFamilyName());" is 146.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>setPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setPatternControls(pattern.getPatternChild(),mSetChildPattern,mChildPattern,(mPatternList.size() &gt; 0) ? ((Pattern)mPatternList.get(0)).getName() : null);" is 153.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>setPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>setPatternControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getEdgeWidthTransformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getEdgeWidthTransformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getEdgeWidthTransformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getEdgeWidthTransformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getEdgeWidthTransformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getEdgeWidthTransformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getEdgeWidthTransformation</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pattern.setPatternNodeBackgroundColor((PatternNodeBackgroundColor)getPatternResult(new PatternNodeBackgroundColor(),mSetNodeBackgroundColor,mNodeBackgroundColor));" is 163.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getResultPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pattern.setPatternEdgeWidth((PatternEdgeWidth)getPatternResult(new PatternEdgeWidth(),mSetEdgeWidth,mEdgeWidth,new EdgeWidthBackTransformer()));" is 144.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getResultPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pattern.setPatternNodeFontName((PatternNodeFontName)getPatternResult(new PatternNodeFontName(),mSetNodeFontName,mNodeFontName));" is 128.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getResultPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pattern.setPatternNodeFontSize((PatternNodeFontSize)getPatternResult(new PatternNodeFontSize(),mSetNodeFontSize,mNodeFontSize));" is 128.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getResultPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pattern.setPatternNodeFontBold((PatternNodeFontBold)getPatternResult(new PatternNodeFontBold(),mSetNodeFontBold,mNodeFontBold));" is 128.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getResultPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pattern.setPatternNodeFontItalic((PatternNodeFontItalic)getPatternResult(new PatternNodeFontItalic(),mSetNodeFontItalic,mNodeFontItalic));" is 138.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Class>StylePatternFrame</Class>
                        <Method>getResultPattern</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (targetView == null || sourceView != null) &amp;&amp; distSqToSource &lt; distSqToTarget * 2.25 is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (sourceView == null || targetView != null) &amp;&amp; distSqToTarget &lt; distSqToSource * 2.25 is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.25</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.25</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.015</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapArrowLinkModel</Class>
                        <Method>changeInclination</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "edgeWidths=new EdgeWidthAction[]{EdgeWidth_WIDTH_PARENT,EdgeWidth_WIDTH_THIN,EdgeWidth_1,EdgeWidth_2,EdgeWidth_4,EdgeWidth_8};" is 126.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>createStandardActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>createStandardActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>createStandardActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>createStandardActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int result=JOptionPane.showConfirmDialog(null,"&lt;html&gt;The pattern file format has changed, &lt;br&gt;" + "and it seems, that your pattern file&lt;br&gt;" + "'" + patternsFile.getAbsolutePath() + "'&lt;br&gt; is formatted in the old way. &lt;br&gt;"+ "Should I try to repair the pattern file &lt;br&gt;"+ "(otherwise, you should update it by hand or delete it)?",repairTitle,JOptionPane.YES_NO_OPTION);" is 370.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>loadPatternActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(null,"An error occured repairing the pattern file.",repairTitle,JOptionPane.WARNING_MESSAGE);" is 123.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>loadPatternActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "File tempFile=File.createTempFile(filePrefix,freemind.main.FreeMindCommon.FREEMIND_FILE_EXTENSION,new File(getFrame().getFreemindDirectory()));" is 143.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>load</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mGetEventIfChangedAfterThisTimeInMillies is 40.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>startupController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mGetEventIfChangedAfterThisTimeInMillies is 40.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>shutdownController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>createIconActions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>processMenuCategory</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final JRadioButtonMenuItem item=(JRadioButtonMenuItem)addRadioItem(holder,theCategory,theAction,keystroke,((MenuRadioAction)obj).getSelected());" is 144.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>processMenuCategory</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JRadioButtonMenuItem itemnn=new JRadioButtonMenuItem(new ChangeArrowsInArrowLinkAction(this,"none","images/arrow-mode-none.png",link,false,false));" is 147.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getPopupForModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JRadioButtonMenuItem itemnt=new JRadioButtonMenuItem(new ChangeArrowsInArrowLinkAction(this,"forward","images/arrow-mode-forward.png",link,false,true));" is 152.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getPopupForModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JRadioButtonMenuItem itemtn=new JRadioButtonMenuItem(new ChangeArrowsInArrowLinkAction(this,"backward","images/arrow-mode-backward.png",link,true,false));" is 154.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getPopupForModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JRadioButtonMenuItem itemtt=new JRadioButtonMenuItem(new ChangeArrowsInArrowLinkAction(this,"both","images/arrow-mode-both.png",link,true,true));" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getPopupForModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "setNodeColor(node,new Color((3 * mapColor.getRed() + nodeColor.getRed()) / 4,(3 * mapColor.getGreen() + nodeColor.getGreen()) / 4,(3 * mapColor.getBlue() + nodeColor.getBlue()) / 4));" is 183.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>blendNodeColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>blendNodeColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>blendNodeColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>blendNodeColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>blendNodeColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>blendNodeColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>blendNodeColor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>copy</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !asSibling &amp;&amp; target.isFolded() &amp;&amp; Resources.getInstance().getBoolProperty(RESOURCE_UNFOLD_ON_PASTE) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>paste</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getFrame().getContentPane(),getText("not_saved_for_link_error"),"FreeMind",JOptionPane.WARNING_MESSAGE);" is 134.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getLinkByFileChooser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !e.isAltDown() &amp;&amp; !e.isControlDown() &amp;&amp; !e.isShiftDown()&amp;&amp; !e.isPopupTrigger()&amp;&amp; e.getButton() == MouseEvent.BUTTON1 &amp;&amp; (node.getLink() == null) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>doubleClick</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (!e.isAltDown() &amp;&amp; !e.isControlDown() &amp;&amp; !e.isShiftDown()&amp;&amp; !e.isPopupTrigger()&amp;&amp; e.getButton() == MouseEvent.BUTTON1 &amp;&amp; (node.getLink() == null)) {" is 151.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>doubleClick</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression extend || range || branch|| !getView().isSelected(newlySelectedNodeView) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>extendSelection</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.fine("MouseEvent: extend:" + extend + ", range:"+ range+ ", branch:"+ branch+ ", event:"+ e+ ", retValue:"+ retValue);" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>extendSelection</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mRegisteredMouseWheelEventHandler is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>registerMouseWheelEventHandler</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mRegisteredMouseWheelEventHandler is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>deRegisterMouseWheelEventHandler</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mRegisteredMouseWheelEventHandler is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>getRegisteredMouseWheelEventHandler</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter window_preference_storage_property is 34.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>storeDialogPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter window_preference_storage_property is 34.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression text != null &amp;&amp; (HtmlTools.htmlToPlain(text).length() != 0 || text.indexOf("&lt;img") &gt;= 0) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapController</Class>
                        <Method>createEditNoteToNodeAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(getFrame().getJFrame(),getSelectedView(),"file_changed_on_disk_reload","confirmation",MindMapController.this,new OptionalDontShowMeAgainDialog.StandardPropertyHandler(getController(),FreeMind.RESOURCES_RELOAD_FILES_WITHOUT_QUESTION),OptionalDontShowMeAgainDialog.BOTH_OK_AND_CANCEL_OPTIONS_ARE_STORED).show().getResult();" is 370.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MapSourceChangeDialog</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getFrame().getContentPane(),getText("map_not_saved"),"FreeMind",JOptionPane.WARNING_MESSAGE);" is 123.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ExportToHTMLAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ExportBranchToHTMLAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getFrame().getContentPane(),getText("map_not_saved"),"FreeMind",JOptionPane.WARNING_MESSAGE);" is 123.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ExportBranchToHTMLAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "File file=File.createTempFile(mindmapFile.getName().replace(FreeMindCommon.FREEMIND_FILE_EXTENSION,"_"),".html",mindmapFile.getParentFile());" is 141.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>ExportBranchToHTMLAction</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xe4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xf6</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xfc</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xc4</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xd6</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xdc</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xdf</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@47dbbdbf</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>convertSpecialChar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML_escapeUnicodeAndSpecialCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 128</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML_escapeUnicodeAndSpecialCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@49dcc53f</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML_escapeUnicodeAndSpecialCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "writeFoldingCode=(htmlExportFoldingOption.equals("html_export_fold_currently_folded") &amp;&amp; rootNodeOfBranch.hasFoldedStrictDescendant()) || htmlExportFoldingOption.equals("html_export_fold_all");" is 193.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;" + el + "&lt;html&gt;"+ el+ "&lt;head&gt;"+ el);" is 158.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("&lt;title&gt;" + saveHTML_escapeUnicodeAndSpecialCharacters(rootNodeOfBranch.getPlainTextContent().replace('\n',' ')) + "&lt;/title&gt;"+ el);" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("" + el + "&lt;script type=\"text/javascript\"&gt;"+ el+ " // Here we implement folding. It works fine with MSIE5.5, MSIE6.0 and"+ el+ " // Mozilla 0.9.6."+ el+ ""+ el+ " if (document.layers) {"+ el+ " //Netscape 4 specific code"+ el+ " pre = 'document.';"+ el+ " post = ''; }"+ el+ " if (document.getElementById) {"+ el+ " //Netscape 6 specific code"+ el+ " pre = 'document.getElementById(\"';"+ el+ " post = '\").style'; }"+ el+ " if (document.all) {"+ el+ " //IE4+ specific code"+ el+ " pre = 'document.all.';"+ el+ " post = '.style'; }"+ el+ ""+ el+ "function layer_exists(layer) {"+ el+ " try {"+ el+ " eval(pre + layer + post);"+ el+ " return true; }"+ el+ " catch (error) {"+ el+ " return false; }}"+ el+ ""+ el+ "function show_layer(layer) {"+ el+ " eval(pre + layer + post).position = 'relative'; "+ el+ " eval(pre + layer + post).visibility = 'visible'; }"+ el+ ""+ el+ "function hide_layer(layer) {"+ el+ " eval(pre + layer + post).visibility = 'hidden';"+ el+ " eval(pre + layer + post).position = 'absolute'; }"+ el+ ""+ el+ "function hide_folder(folder) {"+ el+ " hide_folding_layer(folder)"+ el+ " show_layer('show'+folder);"+ el+ ""+ el+ " scrollBy(0,0); // This is a work around to make it work in Browsers (Explorer, Mozilla)"+ el+ "}"+ el+ ""+ el+ "function show_folder(folder) {"+ el+ " // Precondition: all subfolders are folded"+ el+ ""+ el+ " show_layer('hide'+folder);"+ el+ " hide_layer('show'+folder);"+ el+ " show_layer('fold'+folder);"+ el+ ""+ el+ " scrollBy(0,0); // This is a work around to make it work in Browsers (Explorer, Mozilla)"+ el+ ""+ el+ " var i;"+ el+ " for (i=1; layer_exists('fold'+folder+'_'+i); ++i) {"+ el+ " show_layer('show'+folder+'_'+i); }"+ el+ "}"+ el+ ""+ "function show_folder_completely(folder) {"+ el+ " // Precondition: all subfolders are folded"+ el+ ""+ el+ " show_layer('hide'+folder);"+ el+ " hide_layer('show'+folder);"+ el+ " show_layer('fold'+folder);"+ el+ ""+ el+ " scrollBy(0,0); // This is a work around to make it work in Browsers (Explorer, Mozilla)"+ el+ ""+ el+ " var i;"+ el+ " for (i=1; layer_exists('fold'+folder+'_'+i); ++i) {"+ el+ " show_folder_completely(folder+'_'+i); }"+ el+ "}"+ el+ ""+ el+ ""+ el+ ""+ el+ "function hide_folding_layer(folder) {"+ el+ " var i;"+ el+ " for (i=1; layer_exists('fold'+folder+'_'+i); ++i) {"+ el+ " hide_folding_layer(folder+'_'+i); }"+ el+ ""+ el+ " hide_layer('hide'+folder);"+ el+ " hide_layer('show'+folder);"+ el+ " hide_layer('fold'+folder);"+ el+ ""+ el+ " scrollBy(0,0); // This is a work around to make it work in Browsers (Explorer, Mozilla)"+ el+ "}"+ el+ ""+ el+ "function fold_document() {"+ el+ " var i;"+ el+ " var folder = '1';"+ el+ " for (i=1; layer_exists('fold'+folder+'_'+i); ++i) {"+ el+ " hide_folder(folder+'_'+i); }"+ el+ "}"+ el+ ""+ el+ "function unfold_document() {"+ el+ " var i;"+ el+ " var folder = '1';"+ el+ " for (i=1; layer_exists('fold'+folder+'_'+i); ++i) {"+ el+ " show_folder_completely(folder+'_'+i); }"+ el+ "}"+ el+ ""+ el+ "&lt;/script&gt;"+ el);" is 3007.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>writeJavaScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write(" span.foldopened { color: white; font-size: xx-small;" + el + " border-width: 1; font-family: monospace; padding: 0em 0.25em 0em 0.25em; background: #e0e0e0;"+ el+ " VISIBILITY: visible;"+ el+ " cursor:pointer; }"+ el+ ""+ el+ ""+ el+ " span.foldclosed { color: #666666; font-size: xx-small;"+ el+ " border-width: 1; font-family: monospace; padding: 0em 0.25em 0em 0.25em; background: #e0e0e0;"+ el+ " VISIBILITY: hidden;"+ el+ " cursor:pointer; }"+ el+ ""+ el+ " span.foldspecial { color: #666666; font-size: xx-small; border-style: none solid solid none;"+ el+ " border-color: #CCCCCC; border-width: 1; font-family: sans-serif; padding: 0em 0.1em 0em 0.1em; background: #e0e0e0;"+ el+ " cursor:pointer; }"+ el);" is 728.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>writeStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write(el + " span.l { color: red; font-weight: bold; }" + el+ ""+ el+ " a.mapnode:link {text-decoration: none; color: black; }"+ el+ " a.mapnode:visited {text-decoration: none; color: black; }"+ el+ " a.mapnode:active {text-decoration: none; color: black; }"+ el+ " a.mapnode:hover {text-decoration: none; color: black; background: #eeeee0; }"+ el+ ""+ el+ "&lt;/style&gt;"+ el+ "&lt;!-- ^ Position is not set to relative / absolute here because of Mozilla --&gt;");" is 462.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>writeStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression getProperty("html_export_folding").equals("html_export_no_folding") || basedOnHeadings || isRoot is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 29</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 106 lines of code.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("&lt;a href=\"" + HtmlTools.unicodeToHTMLUnicodeEntity(link,false) + "\" target=\"_blank\"&gt;&lt;span class=l&gt;~&lt;/span&gt;&amp;nbsp;");" is 133.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>saveHTML</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>fontStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>fontStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("&lt;img src=\"" + ((MindIcon)model.getIcons().get(i)).getIconFileName() + "\" alt=\""+ ((MindIcon)model.getIcons().get(i)).getDescription()+ "\"&gt;");" is 160.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>writeIcons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("&lt;span id=\"show" + localParentID + "\" class=\"foldclosed\" onClick=\"show_folder('"+ localParentID+ "')\" style=\"POSITION: absolute\"&gt;+&lt;/span&gt; "+ "&lt;span id=\"hide"+ localParentID+ "\" class=\"foldopened\" onClick=\"hide_folder('"+ localParentID+ "')\"&gt;-&lt;/span&gt;");" is 280.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>writeFoldingButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapHTMLWriter</Class>
                        <Method>isHeading</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "lockManager=Resources.getInstance().getBoolProperty("experimental_file_locking_on") ? new LockManager() : new DummyLockManager();" is 129.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>MindMapMapModel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1033{\\fonttbl{\\f0\\fswiss\\fcharset0 Arial;}" + colorTableString + "}"+ "\\viewkind4\\uc1\\pard\\f0\\fs20{}");" is 169.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>saveRTF</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>saveRTF</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "fileout.write("&lt;!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net --&gt;\n");" is 129.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>getXml</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getFrame().getController().informationMessage(Tools.expandPlaceholders(getText("locking_old_lock_removed"),file.getName(),lockingUserOfOldLock));" is 145.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>tryToLock</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getFrame().getController().informationMessage(Tools.expandPlaceholders(getText("map_locked_by_open"),file.getName(),lockingUser));" is 130.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>load</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getFrame().getController().informationMessage(Tools.expandPlaceholders(getText("locking_failed_by_open"),file.getName()));" is 122.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>load</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>loadTree</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(mModeController.getFrame().getJFrame(),mModeController.getSelectedView(),"really_convert_to_current_version2","confirmation",mModeController,new OptionalDontShowMeAgainDialog.StandardPropertyHandler(mModeController.getController(),FreeMind.RESOURCES_CONVERT_TO_CURRENT_VERSION),OptionalDontShowMeAgainDialog.ONLY_OK_SELECTION_IS_STORED).show().getResult();" is 405.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>loadTree</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier filesShouldBeDeletedAfterShutdown is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>scheduleTimerForAutomaticSaving</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "timerForAutomaticSaving.schedule(new DoAutomaticSave(MindMapMapModel.this,numberOfTempFiles,filesShouldBeDeletedAfterShutdown,dirToStore),delay,delay);" is 151.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapMapModel</Class>
                        <Method>scheduleTimerForAutomaticSaving</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>LockManager</Class>
                        <Method>writeSemaphoreFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>LockManager</Class>
                        <Method>writeSemaphoreFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>LockManager</Class>
                        <Method>tryToLock</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter filesShouldBeDeletedAfterShutdown is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DoAutomaticSave</Class>
                        <Method>DoAutomaticSave</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field filesShouldBeDeletedAfterShutdown is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DoAutomaticSave</Class>
                        <Method>DoAutomaticSave</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field filesShouldBeDeletedAfterShutdown is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DoAutomaticSave</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "tempFile=File.createTempFile("FM_" + ((model.toString() == null) ? "unnamed" : model.toString()),freemind.main.FreeMindCommon.FREEMIND_FILE_EXTENSION,pathToStore);" is 163.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DoAutomaticSave</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field filesShouldBeDeletedAfterShutdown is 33.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DoAutomaticSave</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "tempFile=File.createTempFile("FM_" + ((model.toString() == null) ? "unnamed" : model.toString()),freemind.main.FreeMindCommon.FREEMIND_FILE_EXTENSION,pathToStore);" is 163.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>DoAutomaticSave</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 128</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapNodeModel</Class>
                        <Method>saveRFT_escapeUnicodeAndSpecialCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@273b82c2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapNodeModel</Class>
                        <Method>saveRFT_escapeUnicodeAndSpecialCharacters</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapNodeModel</Class>
                        <Method>saveRTF</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 350</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapNodeModel</Class>
                        <Method>saveRTF</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapNodeModel</Class>
                        <Method>saveRTF</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1.5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapNodeModel</Class>
                        <Method>saveRTF</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 350</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapNodeModel</Class>
                        <Method>saveRTF</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapToolBar</Class>
                        <Method>MindMapToolBar</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100F</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapToolBar</Class>
                        <Method>setZoomByItem</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapToolBar</Class>
                        <Method>update</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100F</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Class>MindMapToolBar</Class>
                        <Method>getItemForZoom</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "freemind.main.Resources.getInstance().logException(e,"Error occurred loading hook: " + descriptor.getClassName() + "\nClasspath: "+ path+ "\nException:");" is 154.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Class>MindMapHookFactory</Class>
                        <Method>createJavaHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression dtde.isLocalTransfer() &amp;&amp; (dropAction == DnDConstants.ACTION_MOVE) &amp;&amp; !isDropAcceptable(dtde) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 15</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mMindMapController.paste(t,targetNode,mainView.dropAsSibling(dtde.getLocation().getX()),mainView.dropPosition(dtde.getLocation().getX()));" is 138.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "yesorno=JOptionPane.showConfirmDialog(mMindMapController.getFrame().getContentPane(),mMindMapController.getText("lots_of_links_warning"),Integer.toString(mMindMapController.getView().getSelecteds().size()) + " links to the same node",JOptionPane.YES_NO_OPTION);" is 261.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(mMindMapController.getFrame().getContentPane(),message,"Freemind",JOptionPane.ERROR_MESSAGE);" is 123.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(mMindMapController.getFrame().getContentPane(),message,"Freemind",JOptionPane.WARNING_MESSAGE);" is 125.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean result=mMindMapController.paste(trans,targetNode,mainView.dropAsSibling(dtde.getLocation().getX()),mainView.dropPosition(dtde.getLocation().getX()));" is 157.</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeDropListener</Class>
                        <Method>drop</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeMotionListener</Class>
                        <Method>mouseDragged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeMotionListener</Class>
                        <Method>mouseDragged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.listeners</Component>
                        <Class>MindMapNodeMotionListener</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMapModel</Class>
                        <Method>load</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMapModel</Class>
                        <Method>loadMathStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 33</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMapModel</Class>
                        <Method>loadMathStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 255</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMapModel</Class>
                        <Method>loadMathStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 40</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMapModel</Class>
                        <Method>loadMathStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 41</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Class>SchemeMapModel</Class>
                        <Method>loadMathStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression extend || range || branch|| !getView().isSelected(newlySelectedNodeView) is complex.</Description>
                    <Entity>
                        <Component>freemind.modes.viewmodes</Component>
                        <Class>ViewControllerAdapter</Class>
                        <Method>extendSelection</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@757306ae</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>GrabKeyDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>GrabKeyDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JLabel label=new JLabel(debugBuffer == null ? (getText("grab-key.caption") + " " + binding.label) : (getText("grab-key.keyboard-test")));" is 137.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>init</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>getSymbolicName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>GrabKeyDialog</Class>
                        <Method>getSymbolicName</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>InputPane</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "KeyEvent evt=new KeyEvent(_evt.getComponent(),_evt.getID(),_evt.getWhen(),~getModifierMask() &amp; _evt.getModifiers(),_evt.getKeyCode(),_evt.getKeyChar(),_evt.getKeyLocation());" is 174.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>InputPane</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "debugBuffer.insert(debugBuffer.getLength(),"Event " + GrabKeyDialog.toString(_evt) + (evt == null ? " filtered\n" : " passed\n"));" is 130.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>InputPane</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>ActionHandler</Class>
                        <Method>canClose</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int answer=JOptionPane.showConfirmDialog(GrabKeyDialog.this,getText("grab-key.remove-ask"),null,JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);" is 152.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>ActionHandler</Class>
                        <Method>canClose</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int answer=JOptionPane.showConfirmDialog(GrabKeyDialog.this,getText("grab-key.duplicate-shortcut") + new Object[]{other.label},null,JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);" is 188.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>ActionHandler</Class>
                        <Method>canClose</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (keyCode &gt;= KeyEvent.VK_0 &amp;&amp; keyCode &lt;= KeyEvent.VK_9) || (keyCode &gt;= KeyEvent.VK_A &amp;&amp; keyCode &lt;= KeyEvent.VK_Z) is complex.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                        <Method>translateKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (modifiers &amp; InputEvent.ALT_GRAPH_MASK) == 0 &amp;&amp; evt.getWhen() - KeyEventWorkaround.lastKeyTime &lt; 750 &amp;&amp; (KeyEventWorkaround.modifiers &amp; ~ignoreMods) != 0 is complex.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                        <Method>translateKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 18</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                        <Method>translateKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 750</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                        <Method>translateKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6fdf7bfa</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                        <Method>translateKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                        <Method>parseKey</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 10</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventTranslator</Class>
                        <Method>modifiersToString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (modifiers.equals(k.modifiers)) &amp;&amp; key == k.key &amp;&amp; input == k.input is complex.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>Key</Class>
                        <Method>equals</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>Key</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>Key</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (ch &lt; 0x20 || ch == 0x7f || ch == 0xff) &amp;&amp; ch != '\b' &amp;&amp; ch != '\t' &amp;&amp; ch != '\n' is complex.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (ch &gt;= '0' &amp;&amp; ch &lt;= '9') || ch == '.' || ch == '/' || ch == '*' || ch == '-' || ch == '+' is complex.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 79</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x20</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0x7f</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0xff</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 750</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4085ae03</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3bd31943</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@56782ee1</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyEventWorkaround</Class>
                        <Method>processKeyEvent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "WindowConfigurationStorage storage=XmlBindingTools.getInstance().decorateDialog(fm.getController(),frame,PREFERENCE_STORAGE_PROPERTY);" is 134.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>OptionPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>buildPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier RESOURCE_USE_COMMON_OUT_POINT_FOR_ROOT_NODE is 43.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 318 lines of code.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ComboProperty("language.tooltip",FreeMindCommon.RESOURCE_LANGUAGE,new String[]{"automatic","ar","bg","cs","de","dk","en","el","es","et","eu","fr","gl","hr","hu","id","it","ja","ko","lt","nl","nn","nb","pl","pt_BR","pt_PT","ro","ru","sk","se","sl","sr","tr","uk_UA","vi","zh_TW","zh_CN"},new TextTranslator(){" is 325.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMindCommon.LOAD_LAST_MAPS_AND_LAYOUT + TOOLTIP_EXT,FreeMindCommon.LOAD_LAST_MAPS_AND_LAYOUT));" is 131.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new StringProperty("number_of_different_files_for_automatic_save.tooltip","number_of_different_files_for_automatic_save"));" is 136.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty("save_only_intrisically_needed_ids.tooltip",FreeMindCommon.SAVE_ONLY_INTRISICALLY_NEEDED_IDS));" is 128.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ComboProperty("standardrootnodestyle.tooltip",FreeMind.RESOURCES_ROOT_NODE_STYLE,new String[]{MindMapNode.STYLE_FORK,MindMapNode.STYLE_BUBBLE,MindMapNode.STYLE_COMBINED},this));" is 194.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ColorProperty("standardnodetextcolor.tooltip",FreeMind.RESOURCES_NODE_TEXT_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_NODE_TEXT_COLOR),this));" is 167.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ColorProperty("standardedgecolor.tooltip",FreeMind.RESOURCES_EDGE_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_EDGE_COLOR),this));" is 153.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ColorProperty("standardlinkcolor.tooltip",FreeMind.RESOURCES_LINK_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_LINK_COLOR),this));" is 153.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ColorProperty("standardbackgroundcolor.tooltip",FreeMind.RESOURCES_BACKGROUND_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_BACKGROUND_COLOR),this));" is 171.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCE_PRINT_ON_WHITE_BACKGROUND + TOOLTIP_EXT,FreeMind.RESOURCE_PRINT_ON_WHITE_BACKGROUND));" is 137.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ColorProperty("standardcloudcolor.tooltip",FreeMind.RESOURCES_CLOUD_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_CLOUD_COLOR),this));" is 156.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ComboProperty("standardedgestyle.tooltip",FreeMind.RESOURCES_EDGE_STYLE,new String[]{"bezier","linear"},this));" is 128.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ComboProperty(FreeMind.J_SPLIT_PANE_SPLIT_TYPE + TOOLTIP_EXT,FreeMind.J_SPLIT_PANE_SPLIT_TYPE,new String[]{FreeMind.VERTICAL_SPLIT_BELOW,FreeMind.HORIZONTAL_SPLIT_RIGHT},this));" is 194.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new NumberProperty(StructuredMenuHolder.AMOUNT_OF_VISIBLE_MENU_ITEMS + TOOLTIP_EXT,StructuredMenuHolder.AMOUNT_OF_VISIBLE_MENU_ITEMS,10,Integer.MAX_VALUE,1));" is 171.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCES_DISPLAY_FOLDING_BUTTONS + TOOLTIP_EXT,FreeMind.RESOURCES_DISPLAY_FOLDING_BUTTONS));" is 135.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCE_DRAW_RECTANGLE_FOR_SELECTION + TOOLTIP_EXT,FreeMind.RESOURCE_DRAW_RECTANGLE_FOR_SELECTION));" is 143.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ColorProperty("standardselectednoderectanglecolor.tooltip",FreeMind.RESOURCES_SELECTED_NODE_RECTANGLE_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_SELECTED_NODE_RECTANGLE_COLOR),this));" is 208.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ColorProperty("standardselectednodecolor.tooltip",FreeMind.RESOURCES_SELECTED_NODE_COLOR,fmMain.getDefaultProperty(FreeMind.RESOURCES_SELECTED_NODE_COLOR),this));" is 179.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(RESOURCE_USE_COMMON_OUT_POINT_FOR_ROOT_NODE + TOOLTIP_EXT,RESOURCE_USE_COMMON_OUT_POINT_FOR_ROOT_NODE));" is 137.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ComboProperty("antialias.tooltip",FreeMindCommon.RESOURCE_ANTIALIAS,new String[]{"antialias_edges","antialias_all","antialias_none"},this));" is 157.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new NumberProperty(FreeMind.TOOLTIP_DISPLAY_TIME + ".tooltip",FreeMind.TOOLTIP_DISPLAY_TIME,0,Integer.MAX_VALUE,1));" is 129.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new KeyProperty(frame,null,"keystroke_accessories/plugins/NodeNote_hide_show.keystroke.control_shift_less"));" is 122.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCES_SEARCH_IN_NOTES_TOO + TOOLTIP_EXT,FreeMind.RESOURCES_SEARCH_IN_NOTES_TOO));" is 127.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new RemindValueProperty("remind_type_of_new_nodes.tooltip",FreeMind.RESOURCES_REMIND_USE_RICH_TEXT_IN_NEW_LONG_NODES,modeController));" is 147.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new DontShowNotificationProperty("resources_convert_to_current_version.tooltip",FreeMind.RESOURCES_CONVERT_TO_CURRENT_VERSION));" is 141.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new RemindValueProperty("reload_files_without_question.tooltip",FreeMind.RESOURCES_RELOAD_FILES_WITHOUT_QUESTION,modeController));" is 143.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new DontShowNotificationProperty("delete_nodes_without_question.tooltip",FreeMind.RESOURCES_DELETE_NODES_WITHOUT_QUESTION));" is 137.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new DontShowNotificationProperty("cut_nodes_without_question.tooltip",FreeMind.RESOURCES_CUT_NODES_WITHOUT_QUESTION));" is 131.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new DontShowNotificationProperty("remove_notes_without_question.tooltip",FreeMind.RESOURCES_REMOVE_NOTES_WITHOUT_QUESTION));" is 137.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new RemindValueProperty(FreeMind.RESOURCES_COMPLETE_CLONING + ".tooltip",FreeMind.RESOURCES_COMPLETE_CLONING,modeController));" is 139.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new DontShowNotificationProperty("execute_scripts_without_asking.tooltip",FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_ASKING));" is 139.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ComboProperty("selection_method.tooltip",FreeMind.RESOURCES_SELECTION_METHOD,new String[]{"selection_method_direct","selection_method_delayed","selection_method_by_click"},this));" is 196.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new NumberProperty("time_for_delayed_selection.tooltip","time_for_delayed_selection",1,Integer.MAX_VALUE,1));" is 122.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new ComboProperty(null,"html_export_folding",new String[]{"html_export_no_folding","html_export_fold_currently_folded","html_export_fold_all","html_export_based_on_headings"},this));" is 195.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 65535</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 96</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 250</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>OptionPanel</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "GrabKeyDialog dialog=new GrabKeyDialog(fmMain,frame,new GrabKeyDialog.KeyBinding(getLabel(),getLabel(),getValue(),false),allKeybindings,null,modifierMask);" is 155.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyProperty</Class>
                        <Method>KeyProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "GrabKeyDialog dialog=new GrabKeyDialog(fmMain,frame,new GrabKeyDialog.KeyBinding(getLabel(),getLabel(),getValue(),false),allKeybindings,null,modifierMask);" is 155.</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyProperty</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyProperty</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyProperty</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyProperty</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>KeyProperty</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>VariableSizeCardLayout</Class>
                        <Method>preferredLayoutSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Class>VariableSizeCardLayout</Class>
                        <Method>preferredLayoutSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression arrowLinkModel.getShowControlPointsFlag() || !isSourceVisible() || !isTargetVisible() is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 18</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (!isSourceVisible() || !isTargetVisible()) g.setStroke(new BasicStroke(getWidth(),BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND,0,new float[]{0,3,0,3},0));" is 157.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "p3.translate(((sourceIsLeft) ? -1 : 1) * getMap().getZoomed(arrowLinkModel.getStartInclination().x),getMap().getZoomed(arrowLinkModel.getStartInclination().y));" is 160.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "p4.translate(((targetIsLeft) ? -1 : 1) * getMap().getZoomed(arrowLinkModel.getEndInclination().x),getMap().getZoomed(arrowLinkModel.getEndInclination().y));" is 156.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paintArrow</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: .5f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>paintArrow</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>detectCollision</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field MAXIMAL_RECTANGLE_SIZE_FOR_COLLISION_DETECTION is 46.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>detectCollision</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>detectCollision</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>detectCollision</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>detectCollision</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@426c9f7f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>detectCollision</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field MAXIMAL_RECTANGLE_SIZE_FOR_COLLISION_DETECTION is 46.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>getControlPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>getControlPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ArrowLinkView</Class>
                        <Method>getControlPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>paintBackground</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>paintBackground</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>getLeftPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>getCenterPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>getMainViewWidthWithFoldingMark</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>getDeltaX</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>getTextWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>BubbleMainView</Class>
                        <Method>getTextX</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>paintClouds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: .5f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>paintClouds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: .5f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>paintClouds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 40</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>getDistanceToConvexHull</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1.1</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>CloudView</Class>
                        <Method>getAdditionalHeigth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ConvexHull</Class>
                        <Method>doGraham</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ConvexHull</Class>
                        <Method>doGraham</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>thetaComparator</Class>
                        <Method>theta</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>thetaComparator</Class>
                        <Method>theta</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 90f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>thetaComparator</Class>
                        <Method>theta</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EdgeView</Class>
                        <Method>getEclipsedStroke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12.0f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EdgeView</Class>
                        <Method>getEclipsedStroke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final int action=JOptionPane.showConfirmDialog(this,base.getText("long_node_changed_submit"),"",JOptionPane.YES_NO_CANCEL_OPTION);" is 130.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditDialog</Class>
                        <Method>confirmedSubmit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final int action=JOptionPane.showConfirmDialog(this,base.getText("long_node_changed_cancel"),"",JOptionPane.OK_CANCEL_OPTION);" is 126.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditDialog</Class>
                        <Method>confirmedCancel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeDialog</Class>
                        <Method>EditNodeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LongNodeDialog</Class>
                        <Method>LongNodeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 147 lines of code.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LongNodeDialog</Class>
                        <Method>LongNodeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LongNodeDialog</Class>
                        <Method>LongNodeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LongNodeDialog</Class>
                        <Method>LongNodeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeExternalApplication</Class>
                        <Method>EditNodeExternalApplication</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeExternalApplication</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeExternalApplication</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>EditNodeTextField</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>EditNodeTextField</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression MINIMAL_LEAF_WIDTH &gt; xSize &amp;&amp; (model.isFolded() || !model.hasChildren()) is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 101 lines of code.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "textfield.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_Z,Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()),"Undo");" is 127.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "textfield.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_Y,Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()),"Redo");" is 127.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeTextField</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.isAltDown() || e.isControlDown() || e.isMetaDown()|| mEventSource.getValue() == CANCEL is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>TextFieldListener</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeWYSIWYG</Class>
                        <Method>EditNodeWYSIWYG</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeWYSIWYG</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeWYSIWYG</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1.2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeWYSIWYG</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1.2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>EditNodeWYSIWYG</Class>
                        <Method>show</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>HTMLDialog</Class>
                        <Method>HTMLDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>HTMLDialog</Class>
                        <Method>HTMLDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "getBase().getEditControl().split(HtmlTools.unescapeHTMLUnicodeEntity(htmlEditorPanel.getDocumentText()),htmlEditorPanel.getCaretPosition());" is 140.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>HTMLDialog</Class>
                        <Method>split</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>getMainViewWidthWithFoldingMark</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>getDeltaX</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>getLeftPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>getCenterPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>getCenterPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>ForkMainView</Class>
                        <Method>getRightPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "System.out.println("Export map to png.\nUsage:\n java -jar lib/freemind.jar freemind.view.mindmapview.IndependantMapViewCreator &lt;map_path&gt;.mm &lt;picture_path&gt;.png");" is 163.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>IndependantMapViewCreator</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>IndependantMapViewCreator</Class>
                        <Method>main</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>IndependantMapViewCreator</Class>
                        <Method>exportFileToPng</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 600</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>IndependantMapViewCreator</Class>
                        <Method>exportFileToPng</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LeftNodeViewLayout</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LinearEdgeView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LinearEdgeView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>LinearEdgeView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean isEmpty=text.length() == 0 || (HtmlTools.isHtmlNode(text) &amp;&amp; text.indexOf("&lt;img") &lt; 0 &amp;&amp; HtmlTools.htmlToPlain(text).length() == 0);" is 140.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.99</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.99</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "graphics.setPaint(new GradientPaint(getWidth() * 3 / 4,0,getNodeView().getMap().getBackground(),getWidth() / 4,0,NodeView.dragColor));" is 134.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "graphics.setPaint(new GradientPaint(getWidth() / 4,0,getNodeView().getMap().getBackground(),getWidth() * 3 / 4,0,NodeView.dragColor));" is 134.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "graphics.setPaint(new GradientPaint(0,getHeight() * 3 / 5,getNodeView().getMap().getBackground(),0,getHeight() / 5,NodeView.dragColor));" is 136.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.99f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return !freeMindMenuBar.isVisible() &amp;&amp; freeMindMenuBar.processKeyBinding(ks,e,JComponent.WHEN_IN_FOCUSED_WINDOW,pressed);" is 121.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>dropAsSibling</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>getTextX</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MainView</Class>
                        <Method>isInFollowLinkRegion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field standardDrawRectangleForSelection is 33.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>MapView</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field standardDrawRectangleForSelection is 33.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>createPropertyChangeListener</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field standardDrawRectangleForSelection is 33.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>propertyChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Rectangle rect=new Rectangle(content.getWidth() / 2 - d.width / 2,content.getHeight() / 2 - d.height / 2,d.width,d.height);" is 123.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>centerNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>centerNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>centerNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>centerNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>centerNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>centerNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "nodeContent.scrollRectToVisible(new Rectangle(-HORIZ_SPACE + extraWidth,-VERT_SPACE,width + HORIZ_SPACE2,nodeContent.getHeight() + VERT_SPACE2));" is 145.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>scrollNodeToVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "nodeContent.scrollRectToVisible(new Rectangle(-HORIZ_SPACE,-VERT_SPACE,width + HORIZ_SPACE2,nodeContent.getHeight() + VERT_SPACE2));" is 132.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>scrollNodeToVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>scrollNodeToVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>scrollNodeToVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>scrollNodeToVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>scrollNodeToVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>getVisibleNeighbour</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>extendSelectionWithKeyMove</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean enlargingMove=(deltaY &gt; 0) &amp;&amp; (e.getKeyCode() == KeyEvent.VK_DOWN) || (deltaY &lt; 0) &amp;&amp; (e.getKeyCode() == KeyEvent.VK_UP);" is 129.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>extendSelectionWithKeyMove</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression (nodeView.isLeft() == oldPositionLeft || nodeView.isLeft() == newPositionLeft) &amp;&amp; !isSelected(nodeView) &amp;&amp; nodeView.isContentVisible() is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>selectContinuous</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 20</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>selectContinuous</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if ((nodeView.isLeft() == oldPositionLeft || nodeView.isLeft() == newPositionLeft) &amp;&amp; !isSelected(nodeView) &amp;&amp; nodeView.isContentVisible()) toggleSelected(nodeView);" is 165.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>selectContinuous</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>getSelectedNodesSortedByY</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final Object newRenderingHintFM=getZoom() != 1F ? RenderingHints.VALUE_FRACTIONALMETRICS_ON : RenderingHints.VALUE_FRACTIONALMETRICS_OFF;" is 137.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (oldRenderingHintFM != newRenderingHintFM &amp;&amp; RenderingHints.KEY_FRACTIONALMETRICS.isCompatibleValue(oldRenderingHintFM)) {" is 125.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.fine("End paint of " + getModel().getRestorable() + " in "+ localTime+ ". Mean time:"+ (mPaintingTime / mPaintingAmount));" is 129.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field standardDrawRectangleForSelection is 33.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelecteds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.0f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelecteds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "g.drawRoundRect(contentLocation.x - arcWidth,contentLocation.y - arcWidth,content.getWidth() + 2 * arcWidth,content.getHeight() + 2 * arcWidth,15,15);" is 150.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintSelected</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ArrowLinkView arrowLink=new ArrowLinkView((MindMapArrowLink)ref,getNodeView(ref.getSource()),getNodeView(ref.getTarget()));" is 123.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>paintLinks</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>print</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>print</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new Insets(inner.y - outer.y + margin,inner.x - outer.x + margin,outer.height - inner.height - inner.y + outer.y + margin,outer.width - inner.width - inner.x + outer.x + margin);" is 185.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>getAutoscrollInsets</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Rectangle r=new Rectangle((int)cursorLocn.getX() - margin,(int)cursorLocn.getY() - margin,1 + 2 * margin,1 + 2 * margin);" is 121.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>autoscroll</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>autoscroll</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MapView</Class>
                        <Method>autoscroll</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                        <Method>layoutContainer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                        <Method>layoutContainer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                        <Method>minimumLayoutSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                        <Method>minimumLayoutSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new Dimension(2 * calcXBorderSize(mapView) + preferredSize.width,2 * calcYBorderSize(mapView) + preferredSize.height);" is 125.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                        <Method>preferredLayoutSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                        <Method>preferredLayoutSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>MindMapLayout</Class>
                        <Method>preferredLayoutSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 16</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>getColorForCounter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RoundImageButtonUI</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ToolTipManager.sharedInstance().setDismissDelay(Resources.getInstance().getIntProperty(FreeMind.TOOLTIP_DISPLAY_TIME,4000));" is 124.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>NodeView</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4000</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>NodeView</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ToolTipManager.sharedInstance().setDismissDelay(Resources.getInstance().getIntProperty(FreeMind.TOOLTIP_DISPLAY_TIME,4000));" is 124.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>propertyChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4000</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>propertyChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression mFoldingListener == null &amp;&amp; getModel().hasVisibleChilds() &amp;&amp; !getModel().isRoot() is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>addFoldingListener</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "dragSource.createDefaultDragGestureRecognizer(getMainView(),DnDConstants.ACTION_COPY | DnDConstants.ACTION_MOVE | DnDConstants.ACTION_LINK,dgl);" is 144.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>addDragListener</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter additionalDistanceForConvexHull is 31.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getCoordinates</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getCoordinates</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getCoordinates</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "linkPoint=new Point(getContent().getWidth() / 2 + (x &gt; 0 ? absLinkX : -absLinkX),getContent().getHeight() / 2 + (y &gt; 0 ? absLinkY : -absLinkY));" is 144.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLinkPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression leftOnly &amp;&amp; !view.isLeft() || rightOnly &amp;&amp; view.isLeft() is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getFirst</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getFirst</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression leftOnly &amp;&amp; !view.isLeft() || rightOnly &amp;&amp; view.isLeft() is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLast</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getLast</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 14</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "widthMustBeRestricted=mainView.getPreferredSize().width &gt; map.getZoomed(map.getMaxNodeWidth()) + mainView.getIconWidth();" is 121.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "widthMustBeRestricted=mainView.getPreferredSize().width &gt; map.getZoomed(map.getMaxNodeWidth()) + mainView.getIconWidth();" is 121.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "text+="&lt;tr&gt;&lt;td style=\"border-color: white;\"&gt;" + HtmlTools.toXMLEscapedText(lines[line]).replaceAll("\t","&lt;td style=\"border-color: white\"&gt;");" is 144.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30000</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 7</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression mainView != null &amp;&amp; (mainView.getStyle().equals(model.getStyle()) || model.isRoot()) is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>updateStyle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 600</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getMaxToolTipWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 600</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getMaxToolTipWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.40</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor1</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor1</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.7f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor1</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor1</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.40</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor2</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor2</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor2</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getAntiColor2</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression preferredChild != null &amp;&amp; (left == preferredChild.isLeft()) &amp;&amp; this.preferredChild.getParent() == this is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getPreferredVisibleChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getPreferredVisibleChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getPreferredVisibleChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getPreferredVisibleChild</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 13</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>treeNodesRemoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier preferredFoldingSymbolHalfWidth is 31.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getZoomedFoldingSymbolHalfWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getZoomedFoldingSymbolHalfWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getZoomedFoldingSymbolHalfWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getInnerBounds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getInnerBounds</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>contains</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeView</Class>
                        <Method>getFoldingSymbolWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2ff4c487</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewFactory</Class>
                        <Method>getEdge</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                        <Method>getChildHorizontalShift</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                        <Method>placeRightChildren</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                        <Method>placeRightChildren</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                        <Method>placeRightChildren</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                        <Method>placeLeftChildren</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                        <Method>placeLeftChildren</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>NodeViewLayoutAdapter</Class>
                        <Method>placeLeftChildren</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 12</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>getBBox</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accum</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accum</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accum</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accum</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>findQuadZero</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 8 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumQuad</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumQuad</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumQuad</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>findCubicZeros</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>findCubicZeros</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>findCubicZeros</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>findCubicZeros</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>findCubicZeros</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>findCubicZeros</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 10 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumCubic</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumCubic</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumCubic</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumCubic</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3.0</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>PathBBox</Class>
                        <Method>accumCubic</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RightNodeViewLayout</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1.1</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>getPreferredSize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "graphics.setPaint(new GradientPaint(getWidth() / 4,0,getNodeView().getMap().getBackground(),getWidth() * 3 / 4,0,NodeView.dragColor));" is 134.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "graphics.setPaint(new GradientPaint(getWidth() * 3 / 4,0,getNodeView().getMap().getBackground(),getWidth() / 4,0,NodeView.dragColor));" is 134.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintDragOver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintBackground</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>paintBackground</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>getLeftPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>getCenterPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>getTextWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>getTextX</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>RootMainView</Class>
                        <Method>dropPosition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpBezierEdgeView</Class>
                        <Method>update</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpBezierEdgeView</Class>
                        <Method>update</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpBezierEdgeView</Class>
                        <Method>createStart</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpBezierEdgeView</Class>
                        <Method>createStart</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpBezierEdgeView</Class>
                        <Method>createStart</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpBezierEdgeView</Class>
                        <Method>createStart</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpBezierEdgeView</Class>
                        <Method>createStart</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpLinearEdgeView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>SharpLinearEdgeView</Class>
                        <Method>paint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>VerticalRootNodeViewLayout</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>VerticalRootNodeViewLayout</Class>
                        <Method>layout</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field USE_COMMON_OUT_POINT_FOR_ROOT_NODE is 34.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>VerticalRootNodeViewLayout</Class>
                        <Method>getMainViewOutPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final Point out=new Point(centerPoint.x + (int)(Math.cos(angle) * nWidth),centerPoint.y + (int)(Math.sin(angle) * nHeight));" is 124.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>VerticalRootNodeViewLayout</Class>
                        <Method>getMainViewOutPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>VerticalRootNodeViewLayout</Class>
                        <Method>getMainViewOutPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Class>VerticalRootNodeViewLayout</Class>
                        <Method>getMainViewOutPoint</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@c4ec93b</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>prepareEditor</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>updateColumnWidths</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.getType() == TableModelEvent.DELETE &amp;&amp; e.getFirstRow() == highRowIndex &amp;&amp; e.getFirstRow() == getRowCount() &amp;&amp; e.getFirstRow() != 0 is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>tableChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (e.getType() == TableModelEvent.DELETE &amp;&amp; e.getFirstRow() == highRowIndex &amp;&amp; e.getFirstRow() == getRowCount() &amp;&amp; e.getFirstRow() != 0) {" is 139.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>tableChanged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>setOptimalColumnWidths</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>setOptimalColumnWidths</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression isEditing() &amp;&amp; getCellEditor() != null &amp;&amp; !getCellEditor().stopCellEditing() is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>insertRow</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression ks.getKeyCode() == KeyEvent.VK_TAB &amp;&amp; e.getModifiers() == 0 &amp;&amp; pressed &amp;&amp; getSelectedColumn() == 1 &amp;&amp; getSelectedRow() == getRowCount() - 1 &amp;&amp; getModel() instanceof ExtendedAttributeTableModelDecorator is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression ks.getKeyCode() == KeyEvent.VK_ESCAPE &amp;&amp; e.getModifiers() == 0 &amp;&amp; pressed is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !retValue &amp;&amp; condition == WHEN_FOCUSED &amp;&amp; isFocusOwner() &amp;&amp; ks.getKeyCode() != KeyEvent.VK_TAB &amp;&amp; e != null &amp;&amp; e.getID() == KeyEvent.KEY_PRESSED &amp;&amp; !e.isActionKey() &amp;&amp; e.getKeyChar() != KeyEvent.CHAR_UNDEFINED &amp;&amp; 0 == (e.getModifiers() &amp; (KeyEvent.CTRL_MASK | KeyEvent.ALT_MASK)) is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression leadRow != -1 &amp;&amp; leadColumn != -1 &amp;&amp; !isEditing() is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (ks.getKeyCode() == KeyEvent.VK_TAB &amp;&amp; e.getModifiers() == 0 &amp;&amp; pressed &amp;&amp; getSelectedColumn() == 1 &amp;&amp; getSelectedRow() == getRowCount() - 1 &amp;&amp; getModel() instanceof ExtendedAttributeTableModelDecorator) {" is 208.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (!retValue &amp;&amp; condition == WHEN_FOCUSED &amp;&amp; isFocusOwner() &amp;&amp; ks.getKeyCode() != KeyEvent.VK_TAB &amp;&amp; e != null &amp;&amp; e.getID() == KeyEvent.KEY_PRESSED &amp;&amp; !e.isActionKey() &amp;&amp; e.getKeyChar() != KeyEvent.CHAR_UNDEFINED &amp;&amp; 0 == (e.getModifiers() &amp; (KeyEvent.CTRL_MASK | KeyEvent.ALT_MASK))) {" is 286.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "keyEv=new KeyEvent(editor.getEditorComponent(),KeyEvent.KEY_TYPED,e.getWhen(),e.getModifiers(),KeyEvent.VK_UNDEFINED,e.getKeyChar(),KeyEvent.KEY_LOCATION_UNKNOWN);" is 163.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTable</Class>
                        <Method>processKeyBinding</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final String currentAttributeViewType=attributeView.getNode().getMap().getRegistry().getAttributes().getAttributeViewType();" is 124.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>MyFocusListener</Class>
                        <Method>focusLost</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier preferredScrollableViewportSize is 31.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>HeaderMouseListener</Class>
                        <Method>mouseReleased</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTableCellRenderer</Class>
                        <Method>getTableCellRendererComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.99f</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTableCellRenderer</Class>
                        <Method>getWidth</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeTableModelDecoratorAdapter</Class>
                        <Method>getColumnCount</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return viewType != AttributeTableLayoutModel.HIDE_ALL &amp;&amp; (currentAttributeTableModel.areAttributesVisible() || viewType != getAttributeRegistry().getAttributeViewType());" is 170.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeView</Class>
                        <Method>areAttributesVisible</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return currentAttributeTableModel == reducedAttributeTableModel ? getAttributeRegistry().getAttributeViewType() : AttributeTableLayoutModel.SHOW_ALL;" is 149.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>AttributeView</Class>
                        <Method>getViewType</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression col == 0 &amp;&amp; o != null &amp;&amp; o.toString().length() &gt; 0 is complex.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>ExtendedAttributeTableModelDecorator</Class>
                        <Method>setValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (index == null &amp;&amp; this.attributeRegistry.getVisibleElementsNumber() &gt; 0) index=new Vector(this.nodeAttributeModel.getRowCount(),10);" is 135.</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>ReducedAttributeTableModelDecorator</Class>
                        <Method>getIndex</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Class>ReducedAttributeTableModelDecorator</Class>
                        <Method>getIndex</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1024</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseBasics</Class>
                        <Method>getPortProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32767</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseBasics</Class>
                        <Method>getPortProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 9001</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseBasics</Class>
                        <Method>getPortProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return pOldTitle + Resources.getInstance().format(TITLE,new Object[]{this.getRole(),this.getHost(),this.getPort(),userString});" is 127.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseBasics</Class>
                        <Method>getMapTitle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Connection connection=DriverManager.getConnection("jdbc:hsqldb:hsql://" + hostProperty.getValue() + ":"+ portProperty.getValue()+ "/xdb","sa",password);" is 152.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseConnector</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mTempDbFile=File.createTempFile("collaboration_database",".hsqldb",new File(controller.getFrame().getFreemindDirectory()));" is 123.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseStarter</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "org.hsqldb.Server.main(new String[]{"-database.0","file:" + mTempDbFile,"-dbname.0","xdb","-port",portProperty.getValue(),"-no_system_exit","true"});" is 149.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseStarter</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseStarter</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "org.hsqldb.Server.main(new String[]{"-database.0","file:" + mTempDbFile,"-dbname.0","xdb","-port",portProperty.getValue(),"-no_system_exit","true"});" is 149.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>DatabaseStarter</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>run</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>commitSuicide</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>commitSuicide</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String expression="INSERT INTO " + DatabaseBasics.TABLE_XML_ACTIONS + "("+ DatabaseBasics.ROW_PK+ ","+ DatabaseBasics.ROW_ACTION+ ","+ DatabaseBasics.ROW_UNDOACTION+ ") VALUES("+ mPrimaryKey+ ", '"+ escapeQuotations(doAction)+ "', '"+ escapeQuotations(undoAction)+ "')";" is 270.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>filterAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String expression="INSERT INTO " + DatabaseBasics.TABLE_XML_ACTIONS + "("+ DatabaseBasics.ROW_PK+ ","+ DatabaseBasics.ROW_MAP+ ") VALUES("+ mPrimaryKey+ ", '"+ escapeQuotations(writer.toString())+ "')";" is 202.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>setupTables</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "update("INSERT INTO " + DatabaseBasics.TABLE_USERS + "("+ DatabaseBasics.ROW_USER+ ") VALUES('"+ escapeQuotations(getUserName())+ "')");" is 136.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>insertUser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "update("DELETE FROM " + DatabaseBasics.TABLE_USERS + " WHERE "+ DatabaseBasics.ROW_USER+ " = '"+ escapeQuotations(getUserName())+ "'");" is 135.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>removeUser</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "update("CREATE TABLE " + DatabaseBasics.TABLE_XML_ACTIONS + " ("+ DatabaseBasics.ROW_PK+ " IDENTITY, "+ DatabaseBasics.ROW_ACTION+ " VARCHAR, "+ DatabaseBasics.ROW_UNDOACTION+ " VARCHAR, "+ DatabaseBasics.ROW_MAP+ " VARCHAR)");" is 227.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>createTables</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String expression="INSERT INTO " + DatabaseBasics.TABLE_XML_ACTIONS + "("+ DatabaseBasics.ROW_PK+ ") VALUES("+ mPrimaryKey+ ")";" is 128.</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>signalEndOfSession</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2000</Description>
                    <Entity>
                        <Component>plugins.collaboration.database</Component>
                        <Class>UpdateThread</Class>
                        <Method>signalEndOfSession</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberListener</Class>
                        <Method>JabberListener</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (latestMsg.getType().equals(JabberChatMessage.TYPE_CHAT) || latestMsg.getType().equals(JabberChatMessage.TYPE_NORMAL)) {" is 123.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String displayMessage=("Sending message:" + ((msgString.length() &lt; 100) ? msgString : (msgString.substring(0,50) + "..." + msgString.substring(msgString.length() - 50))));" is 171.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.info("message " + displayMessage + " from "+ msg.getFrom().getUsername()+ " is reply required:"+ msg.isReplyRequired());" is 127.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>FreeMindJabberMessageListener</Class>
                        <Method>messageReceived</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (requestReceiverUser == null) throw new IllegalArgumentException("sendToUser is null. (Did you specify the user to share with by calling 'setMapShareUser'?)");" is 162.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberSender</Class>
                        <Method>sendMessage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.info("Sending message:" + ((message.length() &lt; 100) ? message : (message.substring(0,50) + "..." + message.substring(message.length() - 50))));" is 150.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberSender</Class>
                        <Method>sendMessage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberSender</Class>
                        <Method>sendMessage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberSender</Class>
                        <Method>sendMessage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>JabberSender</Class>
                        <Method>sendMessage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field STATE_SENT_SHARE_REQUEST_PENDING is 32.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>MapSharingController</Class>
                        <Method>setMapShareRequestAccepted</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field STATE_RECEIVED_SHARE_REQUEST_PENDING is 36.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>MapSharingController</Class>
                        <Method>setMapSharingRequested</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field STATE_SENT_SHARE_REQUEST_PENDING is 32.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>MapSharingController</Class>
                        <Method>setState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field STATE_RECEIVED_SHARE_REQUEST_PENDING is 36.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>MapSharingController</Class>
                        <Method>setState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1b56e175</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>MapSharingController</Class>
                        <Method>setState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mapSharingListener=new JabberListener(controller,mapSharingWizardController,jabberConnectionWizardView.getServername(),JABBER_SERVER_PORT,jabberConnectionWizardView.getUsername(),jabberConnectionWizardView.getPassword());" is 221.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>NextButtonClickListener</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "sender.sendMapSharingRequest(jabberConnectionWizardView.getUsername() + "@" + jabberConnectionWizardView.getServername(),jabberConnectionWizardView.getMapShareUserName());" is 171.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>NextButtonClickListener</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "sender.sendMapSharingInvitationResponse(jabberConnectionWizardView.getUsername() + "@" + jabberConnectionWizardView.getServername(),mapSharingRequestingUser,true);" is 163.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>AcceptButtonClickListener</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "sender.sendMapSharingInvitationResponse(jabberConnectionWizardView.getUsername() + "@" + jabberConnectionWizardView.getServername(),mapSharingRequestingUser,false);" is 164.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Class>DeclineButtonClickListener</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildShareMapSelectionGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildShareMapSelectionGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildShareMapSelectionGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildShareMapSelectionGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildShareMapSelectionGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildConnectToServerGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildConnectToServerGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildConnectToServerGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildConnectToServerGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildConnectToServerGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildConnectToServerGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildSelectUserGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildSelectUserGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildSelectUserGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildSelectUserGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildSelectUserGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field notificationMessageDisplayPanel is 31.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildNotificationMessageGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildNotificationMessageGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildNotificationMessageGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildNotificationMessageGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildNotificationMessageGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field acceptDeclineMessageDisplayPanel is 32.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildMapShareAcceptDeclineGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildMapShareAcceptDeclineGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 50</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildMapShareAcceptDeclineGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildMapShareAcceptDeclineGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>buildMapShareAcceptDeclineGui</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addWizardButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addWizardButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addWizardButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addWizardButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addWizardButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addCloseButton</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addCloseButton</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addCloseButton</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addCloseButton</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addCloseButton</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addAcceptDeclineButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 80</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addAcceptDeclineButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addAcceptDeclineButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addAcceptDeclineButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addAcceptDeclineButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>addAcceptDeclineButtons</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field notificationMessageDisplayPanel is 31.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>removeUIs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field acceptDeclineMessageDisplayPanel is 32.</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>MapSharingWizardView</Class>
                        <Method>removeUIs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>SpringUtilities</Class>
                        <Method>makeGrid</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.view</Component>
                        <Class>SpringUtilities</Class>
                        <Method>makeCompactGrid</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "super(pName,pClient,pController,new DataOutputStream(pClient.getOutputStream()),new DataInputStream(pClient.getInputStream()));" is 127.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>ClientCommunication</Class>
                        <Method>ClientCommunication</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 16</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>ClientCommunication</Class>
                        <Method>processCommand</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>CommunicationBase</Class>
                        <Method>CommunicationBase</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>CommunicationBase</Class>
                        <Method>processAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>CommunicationBase</Class>
                        <Method>processAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>CommunicationBase</Class>
                        <Method>printState</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "ClientCommunication clientCommunication=new ClientCommunication("Client Communication",serverConnection,getMindMapController(),mPassword);" is 138.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MindMapClient</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.getController().errorMessage(Resources.getInstance().format(UNKNWON_HOST_EXCEPTION_MESSAGE,new Object[]{e.getMessage()}));" is 133.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MindMapClient</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.getController().errorMessage(Resources.getInstance().format(CONNECT_EXCEPTION_MESSAGE,new Object[]{portProperty.getValue(),hostProperty.getValue(),e.getMessage()}));" is 176.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MindMapClient</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controller.getController().errorMessage(Resources.getInstance().format(SOCKET_CREATION_EXCEPTION_MESSAGE,new Object[]{portProperty.getValue(),e.getMessage()}));" is 160.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MindMapMaster</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Empty catch clause</Name>
                    <Description>The method has an empty catch block.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MasterThread</Class>
                        <Method>processAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field TIME_BETWEEN_USER_INFORMATION_IN_MILLIES is 40.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>MasterThread</Class>
                        <Method>processAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "super("Client Communication",pClient,pMindMapController,new DataOutputStream(pClient.getOutputStream()),new DataInputStream(pClient.getInputStream()));" is 151.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>ServerCommunication</Class>
                        <Method>ServerCommunication</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 11</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>ServerCommunication</Class>
                        <Method>processCommand</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1024</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketBasics</Class>
                        <Method>getPortProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32767</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketBasics</Class>
                        <Method>getPortProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 9001</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketBasics</Class>
                        <Method>getPortProperty</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return pOldTitle + Resources.getInstance().format(TITLE,new Object[]{this.getRole(),userInfo.getMasterHostname(),userInfo.getMasterIp(),new Integer(userInfo.getMasterPort()),userInfo.getUserIds()});" is 198.</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>SocketBasics</Class>
                        <Method>getMapTitle</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>TerminateableThread</Class>
                        <Method>TerminateableThread</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.collaboration.socket</Component>
                        <Class>TerminateableThread</Class>
                        <Method>commitSuicide</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>plugins.latex</Component>
                        <Class>JZoomedHotEqn</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 160</Description>
                    <Entity>
                        <Component>plugins.latex</Component>
                        <Class>JZoomedHotEqn</Class>
                        <Method>edit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier copyCoordinatesToClipboardAction is 32.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(pMapHook.getCloseAction(),"main/actions/close"),"keystroke_plugins/map/MapDialog_Close");" is 125.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(searchControlVisible,"main/search/showSearchControl"),"keystroke_plugins/map/MapDialog_toggle_search");" is 139.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new LimitSearchToRegionAction(),"main/search/limitSearchToRegion"),"keystroke_plugins/map/MapDialog_limitSearchToRegion");" is 158.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new ChangeTileSource(source),"main/view/" + i),"keystroke_plugins/map/MapDialog_tileSource_" + i);" is 134.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(hideFoldedNodes,"main/view/hideFoldedNodes"),"keystroke_plugins/map/MapDialog_hideFoldedNodes");" is 132.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(mZoomOutAction,"main/view/ZoomOutAction"),"keystroke_plugins/map/MapDialog_zoomOut");" is 121.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new SetHomeAction(),"main/navigation/SetHome"),"keystroke_plugins/map/MapDialogSetHome");" is 125.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new MoveHomeAction(),"main/navigation/MoveHome"),"keystroke_plugins/map/MapDialogMoveHome");" is 128.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(mMoveBackwardAction,"main/navigation/moveBackward"),"keystroke_plugins/map/MapDialog_moveBackward");" is 136.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(mMoveForwardAction,"main/navigation/moveForward"),"keystroke_plugins/map/MapDialog_moveForward");" is 133.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new MoveLeftAction(),"main/navigation/moveLeft"),"keystroke_plugins/map/MapDialog_moveLeft");" is 129.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new MoveRightAction(),"main/navigation/moveRight"),"keystroke_plugins/map/MapDialog_moveRight");" is 132.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new MoveUpAction(),"main/navigation/moveUp"),"keystroke_plugins/map/MapDialog_moveUp");" is 123.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "addAccelerator(menuHolder.addAction(new MoveDownAction(),"main/navigation/moveDown"),"keystroke_plugins/map/MapDialog_moveDown");" is 129.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>FreeMindMapController</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>showSelectedNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>showSelectedNodes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.fine("Set display position to " + mapCenter + " and cursor to "+ position+ " and zoom "+ zoom+ " where max zoom is "+ getMaxZoom());" is 139.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>setCursorPosition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !mMovementEnabled || !(isMoving || isMapNodeMoving || mIsRectangularSelect) is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseDragged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 9</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseDragged</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.getButton() == MouseEvent.BUTTON1 || Tools.isMacOsX() &amp;&amp; e.getModifiersEx() == MAC_MOUSE_BUTTON1_MASK is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "EditNodeTextField textfield=new MapEditNoteTextField(nodeView,editNode.getText(),null,mMindMapController,editControl,map,point);" is 128.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>editNode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.getButton() == movementMouseButton || (Tools.isMacOsX() &amp;&amp; e.getModifiersEx() == MAC_MOUSE_BUTTON1_MASK) is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mousePressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "logger.fine("Checking for hit for location " + location + " at location "+ locationXY+ " to event "+ e.getX()+ " and "+ e.getY()+ " is "+ checkHitResult);" is 154.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>checkHit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression e.getButton() == movementMouseButton || Tools.isMacOsX() &amp;&amp; e.getButton() == MouseEvent.BUTTON1 is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseReleased</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 14</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseReleased</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WHEEL_ZOOM_MINIMAL_TIME_BETWEEN_CHANGES is 39.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>mouseWheelMoved</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3d671207</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>setMovementMouseButton</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "b.append("http://nominatim.openstreetmap.org/reverse?format=xml&amp;email=christianfoltin%40users.sourceforge.net&amp;addressdetails=0");" is 129.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>getReverseLookup</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field XML_VERSION_1_0_ENCODING_UTF_8 is 30.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>getSearchResults</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result=XML_VERSION_1_0_ENCODING_UTF_8 + "&lt;searchresults timestamp=\"Tue, 08 Nov 11 22:49:54 -0500\" attribution=\"Data Copyright OpenStreetMap Contributors, Some Rights Reserved. CC-BY-SA 2.0.\" querystring=\"innsbruck\" polygon=\"false\" exclude_place_ids=\"228452,25664166,26135863,25440203\" more_url=\"http://open.mapquestapi.com/nominatim/v1/search?format=xml&amp;amp;exclude_place_ids=228452,25664166,26135863,25440203&amp;amp;accept-language=&amp;amp;q=innsbruck\"&gt;\n" + " &lt;place place_id=\"228452\" osm_type=\"node\" osm_id=\"34840064\" place_rank=\"16\" boundingbox=\"47.2554266357,47.2754304504,11.3827679062,11.4027688599\" lat=\"47.2654296\" lon=\"11.3927685\" display_name=\"Innsbruck, Bezirk Innsbruck-Stadt, Innsbruck-Stadt, Tirol, Ã–sterreich, Europe\" class=\"place\" type=\"city\" icon=\"http://open.mapquestapi.com/nominatim/v1/images/mapicons/poi_place_city.p.20.png\"/&gt;\n"+ " &lt;place place_id=\"25664166\" osm_type=\"way\" osm_id=\"18869490\" place_rank=\"27\" boundingbox=\"43.5348739624023,43.5354156494141,-71.1319198608398,-71.1316146850586\" lat=\"43.5351336524196\" lon=\"-71.1317853486877\" display_name=\"Innsbruck, New Durham, Strafford County, New Hampshire, United States of America\" class=\"highway\" type=\"service\"/&gt;\n"+ " &lt;place place_id=\"26135863\" osm_type=\"way\" osm_id=\"18777572\" place_rank=\"27\" boundingbox=\"38.6950759887695,38.6965446472168,-91.1586227416992,-91.1520233154297\" lat=\"38.6957456083531\" lon=\"-91.1552550683042\" display_name=\"Innsbruck, Warren, Aspenhoff, Warren County, Missouri, United States of America\" class=\"highway\" type=\"service\"/&gt;\n"+ " &lt;place place_id=\"25440203\" osm_type=\"way\" osm_id=\"18869491\" place_rank=\"27\" boundingbox=\"43.5335311889648,43.5358810424805,-71.1356735229492,-71.1316146850586\" lat=\"43.5341678362733\" lon=\"-71.1338615946084\" display_name=\"Innsbruck, New Durham, Strafford County, New Hampshire, 03855, United States of America\" class=\"highway\" type=\"service\"/&gt;\n"+ "&lt;/searchresults&gt;";" is 1994.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>getSearchResults</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "result="&lt;?xml version=\"1.0\" encoding=\"UTF-8\"" + " ?&gt;&lt;searchresults timestamp='Wed, 29 Aug" + " 12 06:33:22 +0100' attribution='Data Co"+ "pyright OpenStreetMap Contributors, Some"+ " Rights Reserved. CC-BY-SA 2.0.' queryst"+ "ring='bÃ¤ckerei' polygon='false' exclude_"+ "place_ids='2323884,1350101,7261519,17658"+ "198,16228926,7825940,8072208,16133988,51"+ "52777,7708711,16471512,7844042,12267468,"+ "6699146,7114466,6856494,856383,9874163,7"+ "135888,868611,11403029,6568269,16118527,"+ "7540110,11628259,1339026,19587330,115253"+ "72,11534612,11748035' more_url='http://n"+ "ominatim.openstreetmap.org/search?format"+ "=xml&amp;amp;exclude_place_ids=2323884,13501"+ "01,7261519,17658198,16228926,7825940,807"+ "2208,16133988,5152777,7708711,16471512,7"+ "844042,12267468,6699146,7114466,6856494,"+ "856383,9874163,7135888,868611,11403029,6"+ "568269,16118527,7540110,11628259,1339026"+ ",19587330,11525372,11534612,11748035&amp;amp"+ ";accept-language=de&amp;amp;viewbox=13.24470"+ "5200195312%2C52.43435075954755%2C13.3324"+ "2416381836%2C52.461762311435194&amp;amp;q=b%"+ "C3%A4ckerei'&gt;&lt;place place_id='2323884' o"+ "sm_type='node' osm_id='352983574' place_"+ "rank='30' boundingbox=\"52.443815460205,"+ "52.463819274902,13.313097229004,13.33309"+ "8182678\" lat='52.4538175' lon='13.32309"+ "74' display_name='BÃ¤ckerei MÃ¤lzer, SchÃ¼t"+ "zenstraÃŸe, Steglitz, Steglitz-Zehlendorf"+ ", Berlin, 12165, Deutschland' class='sho"+ "p' type='bakery' icon='http://nominatim."+ "openstreetmap.org/images/mapicons/shoppi"+ "ng_bakery.p.20.png'/&gt;&lt;place place_id='13"+ "50101' osm_type='node' osm_id='298794800"+ "' place_rank='30' boundingbox=\"52.43134"+ "9029541,52.451352844238,13.282660713196,"+ "13.30266166687\" lat='52.4413499' lon='1"+ "3.2926616' display_name='BÃ¤ckerei Bertra"+ "m, 27, CurtiusstraÃŸe, Lichterfelde, Steg"+ "litz-Zehlendorf, Berlin, 12205, Deutschl"+ "and' class='shop' type='bakery' icon='ht"+ "tp://nominatim.openstreetmap.org/images/"+ "mapicons/shopping_bakery.p.20.png'/&gt;&lt;pla"+ "ce place_id='7261519' osm_type='node' os"+ "m_id='792690678' place_rank='30' boundin"+ "gbox=\"52.434942474365,52.454946289062,1"+ "3.282605400085,13.30260635376\" lat='52."+ "444945' lon='13.292606' display_name='Kn"+ "ese-BÃ¤ckerei, KnesebeckstraÃŸe, Lichterfe"+ "lde, Steglitz-Zehlendorf, Berlin, 12205,"+ " Deutschland' class='shop' type='bakery'"+ " icon='http://nominatim.openstreetmap.or"+ "g/images/mapicons/shopping_bakery.p.20.p"+ "ng'/&gt;&lt;place place_id='17658198' osm_type"+ "='node' osm_id='1655185388' place_rank='"+ "30' boundingbox=\"52.426340332031,52.446"+ "344146728,13.256445159912,13.27644611358"+ "6\" lat='52.4363419' lon='13.2664454' di"+ "splay_name='BÃ¤ckerei Strauch, Berliner S"+ "traÃŸe, Zehlendorf, Steglitz-Zehlendorf, "+ "Berlin, 14169, Deutschland' class='shop'"+ " type='bakery' icon='http://nominatim.op"+ "enstreetmap.org/images/mapicons/shopping"+ "_bakery.p.20.png'/&gt;&lt;place place_id='1622"+ "8926' osm_type='node' osm_id='1455112119"+ "' place_rank='30' boundingbox=\"52.43713"+ "973999,52.457143554687,13.296548118591,1"+ "3.316549072266\" lat='52.4471403' lon='1"+ "3.3065482' display_name='BÃ¤ckerei Hillma"+ "nn, 52, MoltkestraÃŸe, Lichterfelde, Steg"+ "litz-Zehlendorf, Berlin, 12203, Deutschl"+ "and' class='shop' type='bakery' icon='ht"+ "tp://nominatim.openstreetmap.org/images/"+ "mapicons/shopping_bakery.p.20.png'/&gt;&lt;pla"+ "ce place_id='7825940' osm_type='node' os"+ "m_id='803776974' place_rank='30' boundin"+ "gbox=\"52.447733154297,52.467736968994,1"+ "3.280044784546,13.30004573822\" lat='52."+ "4577338' lon='13.2900455' display_name='"+ "Wiener FeinbÃ¤cker Heberer, BrÃ¼mmerstraÃŸe"+ ", Dahlem, Steglitz-Zehlendorf, Berlin, 1"+ "4195, Deutschland' class='shop' type='ba"+ "kery' icon='http://nominatim.openstreetm"+ "ap.org/images/mapicons/shopping_bakery.p"+ ".20.png'/&gt;&lt;place place_id='8072208' osm_"+ "type='node' osm_id='814072915' place_ran"+ "k='30' boundingbox=\"52.430979003906,52."+ "450982818603,13.279904594421,13.29990554"+ "8096\" lat='52.4409802' lon='13.2899047'"+ " display_name='Brotmeisterei Steinecke, "+ "36-38, CurtiusstraÃŸe, Lichterfelde, Steg"+ "litz-Zehlendorf, Berlin, 12205, Deutschl"+ "and' class='shop' type='bakery' icon='ht"+ "tp://nominatim.openstreetmap.org/images/"+ "mapicons/shopping_bakery.p.20.png'/&gt;&lt;pla"+ "ce place_id='16133988' osm_type='node' o"+ "sm_id='1391486692' place_rank='30' bound"+ "ingbox=\"52.44658493042,52.466588745117,"+ "13.310922851563,13.330923805237\" lat='5"+ "2.4565867' lon='13.3209229' display_name"+ "='Wiedemann, AlbrechtstraÃŸe, Steglitz, S"+ "teglitz-Zehlendorf, Berlin, 12165, Deuts"+ "chland' class='shop' type='bakery' icon="+ "'http://nominatim.openstreetmap.org/imag"+ "es/mapicons/shopping_bakery.p.20.png'/&gt;&lt;"+ "place place_id='5152777' osm_type='node'"+ " osm_id='570034727' place_rank='30' boun"+ "dingbox=\"52.441808929443,52.46181274414"+ "1,13.320470085144,13.340471038818\" lat="+ "'52.4518101' lon='13.3304701' display_na"+ "me='Konditorei Rabien, KlingsorstraÃŸe, S"+ "teglitz, Steglitz-Zehlendorf, Berlin, 12"+ "167, Deutschland' class='shop' type='bak"+ "ery' icon='http://nominatim.openstreetma"+ "p.org/images/mapicons/shopping_bakery.p."+ "20.png'/&gt;&lt;/searchresults&gt;";" is 5204.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>getSearchResults</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field OSM_NOMINATIM_CONNECT_TIMEOUT_IN_MS is 35.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>wget</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field OSM_NOMINATIM_READ_TIMEOUT_IN_MS is 32.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>wget</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10000</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>wget</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 30000</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>wget</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "double distance=OsmMercator.getDistance(coordinate.getLat(),coordinate.getLon(),cursorPosition.getLat(),cursorPosition.getLon()) / 1000.0;" is 138.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000.0</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String link="http://www.openstreetmap.org/?" + "mlat=" + position.getLat() + "&amp;mlon="+ position.getLon()+ "&amp;lat="+ mapCenter.getLat()+ "&amp;lon="+ mapCenter.getLon()+ "&amp;zoom="+ zoom+ "&amp;layers="+ layer;" is 198.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>getLink</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression !pEvent.isConsumed() &amp;&amp; !pEvent.isActionKey() &amp;&amp; (Character.isLetter(pEvent.getKeyChar()))&amp;&amp; ((pEvent.getModifiers() &amp; MODIFIERS_WITHOUT_SHIFT) == 0) is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>keyTyped</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (!pEvent.isConsumed() &amp;&amp; !pEvent.isActionKey() &amp;&amp; (Character.isLetter(pEvent.getKeyChar()))&amp;&amp; ((pEvent.getModifiers() &amp; MODIFIERS_WITHOUT_SHIFT) == 0)) {" is 156.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>keyTyped</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>FreeMindMapController</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 18</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>TransportMap</Class>
                        <Method>getMaxZoom</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 18</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapQuestOpenMap</Class>
                        <Method>getMaxZoom</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapEditNoteTextField</Class>
                        <Method>MapEditNoteTextField</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveAction</Class>
                        <Method>destinationQuadrantCheck</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return (p1 != null &amp;&amp; p2 != null &amp;&amp; p1.getLon() == p2.getLon() &amp;&amp; p1.getLat() == p2.getLat()) || (p1 == null &amp;&amp; p2 == null);" is 124.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveAction</Class>
                        <Method>safeEquals</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveLeftAction</Class>
                        <Method>destinationQuadrantCheck</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveRightAction</Class>
                        <Method>destinationQuadrantCheck</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveUpAction</Class>
                        <Method>destinationQuadrantCheck</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveDownAction</Class>
                        <Method>destinationQuadrantCheck</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 31</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>PositionHolder</Class>
                        <Method>hashCode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>PositionHolder</Class>
                        <Method>hashCode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 32</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>PositionHolder</Class>
                        <Method>hashCode</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveHomeAction</Class>
                        <Method>getPosHolder</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MoveHomeAction</Class>
                        <Method>getPosHolder</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>JCursorMapViewer</Class>
                        <Method>JCursorMapViewer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>JCursorMapViewer</Class>
                        <Method>JCursorMapViewer</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>JCursorMapViewer</Class>
                        <Method>paintComponent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression index == 0 &amp;&amp; pEvent.getKeyCode() == KeyEvent.VK_UP &amp;&amp; pEvent.getModifiers() == 0 is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression pEvent.getKeyCode() == KeyEvent.VK_ENTER &amp;&amp; pEvent.getModifiers() == 0 &amp;&amp; index &gt;= 0 is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression pEvent.getKeyCode() == KeyEvent.VK_ENTER &amp;&amp; pEvent.isControlDown() &amp;&amp; index &gt;= 0 is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 15</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 195 lines of code.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "MapWindowConfigurationStorage storage=(MapWindowConfigurationStorage)getMindMapController().decorateDialog(mMapDialog,WINDOW_PREFERENCE_STORAGE_PROPERTY);" is 154.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "positionHolderVector.add(new FreeMindMapController.PositionHolder(location.getCursorLatitude(),location.getCursorLongitude(),location.getZoom()));" is 146.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 49.8</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 8.8</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression index == 0 &amp;&amp; pEvent.getKeyCode() == KeyEvent.VK_UP &amp;&amp; pEvent.getModifiers() == 0 is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression pEvent.getKeyCode() == KeyEvent.VK_ENTER &amp;&amp; pEvent.getModifiers() == 0 &amp;&amp; index &gt;= 0 is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression pEvent.getKeyCode() == KeyEvent.VK_ENTER &amp;&amp; pEvent.isControlDown() &amp;&amp; index &gt;= 0 is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>keyPressed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>mouseClicked</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>disposeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (command.getCommand().equals(JMVCommandEvent.COMMAND.ZOOM) || command.getCommand().equals(JMVCommandEvent.COMMAND.MOVE)) {" is 125.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>processCommand</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "boolean resultOk=getFreeMindMapController().search(mResultTableModel,mResultTable,searchText,mTableOriginalBackgroundColor);" is 124.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialog</Class>
                        <Method>search</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Missing default</Name>
                    <Description>The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@34be29d0</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>ResultTableModel</Class>
                        <Method>getColumnClass</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>ResultTableModel</Class>
                        <Method>getColumnCount</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "final double value=OsmMercator.getDistance(mCursorCoordinate.getLat(),mCursorCoordinate.getLon(),place.getLat(),place.getLon()) / 1000.0;" is 137.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>ResultTableModel</Class>
                        <Method>getValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000.0</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>ResultTableModel</Class>
                        <Method>getValueAt</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression x &gt;= 0 &amp;&amp; y &gt;= 0 &amp;&amp; x &lt;= getWidth() &amp;&amp; y &lt;= getHeight() is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapMarkerBase</Class>
                        <Method>checkHit</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mTooltipFile=File.createTempFile("node_map_tooltip_" + getNodeId(),".png",new File(getController().getFrame().getFreemindDirectory()));" is 135.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapNodePositionHolder</Class>
                        <Method>getTooltipFile</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return "MapNodePositionHolder [mPosition=" + mPosition + ", mMapCenter="+ mMapCenter+ ", mTileSource="+ mTileSource+ ", mZoom="+ mZoom+ ", getNode()="+ getNode()+ "]";" is 167.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapNodePositionHolder</Class>
                        <Method>toString</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapSearchMarkerLocation</Class>
                        <Method>paintCenter</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "long purgeTime=Resources.getInstance().getLongProperty(MapDialog.TILE_CACHE_PURGE_TIME,MapDialog.TILE_CACHE_PURGE_TIME_DEFAULT);" is 128.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>Registration</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>getImageForTooltip</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>getImageForTooltip</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>getImageForTooltip</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 60</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>getImageForTooltip</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>getImageForTooltip</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "long maxFileAge=Resources.getInstance().getLongProperty(MapDialog.TILE_CACHE_MAX_AGE,OsmFileCacheTileLoader.FILE_AGE_ONE_WEEK);" is 127.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>getCacheMaxAge</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>getCacheDirectory</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>changePosition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "PlaceNodeXmlAction undoAction=createPlaceNodeXmlActionAction(node,pHolder.getPosition(),pHolder.getMapCenter(),pHolder.getZoom(),pHolder.getTileSource());" is 154.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>changePosition</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>createPlaceNodeXmlActionAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Conditional</Name>
                    <Description>The conditional expression ShowMapToNodeAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName) || AddLinkToMapAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName) || RemoveMapToNodeAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName)|| AddMapImageToNodeAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName) is complex.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>isEnabled</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "if (ShowMapToNodeAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName) || AddLinkToMapAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName) || RemoveMapToNodeAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName)|| AddMapImageToNodeAction.NODE_CONTEXT_PLUGIN_NAME.equals(hookName)) {" is 267.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>Registration</Class>
                        <Method>isEnabled</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new DontShowNotificationProperty("resources_search_for_node_text_without_question.tooltip",FreeMind.RESOURCES_SEARCH_FOR_NODE_TEXT_WITHOUT_QUESTION));" is 163.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>MapDialogPropertyContributor</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SearchInMapForNodeTextAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field REALLY_SEARCH_FOR_NODE_TEXT_IN_WEB is 34.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SearchInMapForNodeTextAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(getMindMapController().getFrame().getJFrame(),getMindMapController().getSelectedView(),REALLY_SEARCH_FOR_NODE_TEXT_IN_WEB,"confirmation",new TextTranslator(){" is 207.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SearchInMapForNodeTextAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement ",new OptionalDontShowMeAgainDialog.StandardPropertyHandler(getMindMapController().getController(),FreeMind.RESOURCES_SEARCH_FOR_NODE_TEXT_WITHOUT_QUESTION),OptionalDontShowMeAgainDialog.ONLY_OK_SELECTION_IS_STORED).show().getResult();" is 234.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SearchInMapForNodeTextAction</Class>
                        <Method>invoke</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field REALLY_SEARCH_FOR_NODE_TEXT_IN_WEB is 34.</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>SearchInMapForNodeTextAction</Class>
                        <Method>getText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>TileImage</Class>
                        <Method>drawCross</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 15</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>TileImage</Class>
                        <Method>drawCross</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 8 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>TileImage</Class>
                        <Method>setTiles</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Class>TileImage</Class>
                        <Method>imageUpdate</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>NodeScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return (ScriptEditorWindowConfigurationStorage)getMindMapController().decorateDialog(pPanel,pWindow_preference_storage_property);" is 129.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>NodeScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return ScriptingEngine.executeScript(mMindMapController.getSelected(),new BooleanHolder(true),script,mMindMapController,pErrorHandler,pOutStream,reg.getScriptCookies());" is 169.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>NodeScriptModel</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>NodeScriptModel</Class>
                        <Method>storeDialogPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>ScriptEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mStatus.setText("Line: " + (lineOfOffset + 1) + ", Column: "+ (caretPosition - mScriptTextField.getLineStartOffset(lineOfOffset) + 1));" is 135.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>ScriptEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>ScriptEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>ScriptEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 0.8</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>ScriptEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>ScriptEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 240</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>ScriptEditorPanel</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "mStatus.setText("Line: " + (lineOfOffset + 1) + ", Column: "+ (caretPosition - mScriptTextField.getLineStartOffset(lineOfOffset) + 1));" is 135.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>caretUpdate</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOW_PREFERENCE_STORAGE_PROPERTY is 34.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>disposeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int action=JOptionPane.showConfirmDialog(this,mFrame.getResourceString("ScriptEditorPanel.changed_save"),"FreeMind",JOptionPane.YES_NO_CANCEL_OPTION);" is 150.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptEditorPanel</Class>
                        <Method>disposeDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptModel</Class>
                        <Method>storeDialogPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 15</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier executeWithoutNetworkRestriction is 32.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the identifier signedScriptsWithoutRestriction is 31.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Method</Name>
                    <Description>The method has 130 lines of code.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "int showResult=new OptionalDontShowMeAgainDialog(frame.getJFrame(),pMindMapController.getSelectedView(),"really_execute_script","confirmation",pMindMapController,new OptionalDontShowMeAgainDialog.StandardPropertyHandler(pMindMapController.getController(),FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_ASKING),OptionalDontShowMeAgainDialog.ONLY_OK_SELECTION_IS_STORED).show().getResult();" is 384.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String executeWithoutNetworkRestriction=frame.getProperty(FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_NETWORK_RESTRICTION);" is 122.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "pMindMapController.getController().errorMessage(e2.getClass().getName() + ": " + cause+ ((cause.length() != 0 &amp;&amp; message.length() != 0) ? ", " : "")+ message);" is 159.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingEngine</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mScriptingPluginPropertyContributor is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingRegistration</Class>
                        <Method>register</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field mScriptingPluginPropertyContributor is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingRegistration</Class>
                        <Method>deRegister</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String scriptString=HtmlTools.toXMLUnescapedText(HtmlTools.unescapeHTMLUnicodeEntity(pattern.getPatternScript().getValue()));" is 125.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingRegistration</Class>
                        <Method>act</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_FILE_RESTRICTION + ".tooltip",FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_FILE_RESTRICTION));" is 168.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingPluginPropertyContributor</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_NETWORK_RESTRICTION + ".tooltip",FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_NETWORK_RESTRICTION));" is 174.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingPluginPropertyContributor</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_EXEC_RESTRICTION + ".tooltip",FreeMind.RESOURCES_EXECUTE_SCRIPTS_WITHOUT_EXEC_RESTRICTION));" is 168.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingPluginPropertyContributor</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new BooleanProperty(FreeMind.RESOURCES_SIGNED_SCRIPT_ARE_TRUSTED + ".tooltip",FreeMind.RESOURCES_SIGNED_SCRIPT_ARE_TRUSTED));" is 138.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingPluginPropertyContributor</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "controls.add(new StringProperty(FreeMind.RESOURCES_SCRIPT_USER_KEY_NAME_FOR_SIGNING + ".tooltip",FreeMind.RESOURCES_SCRIPT_USER_KEY_NAME_FOR_SIGNING));" is 151.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingPluginPropertyContributor</Class>
                        <Method>getControls</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>PatternScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return ScriptingEngine.executeScript(controller.getSelected(),new BooleanHolder(true),mScript,controller,pErrorHandler,pOutStream,getScriptCookies());" is 150.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>PatternScriptModel</Class>
                        <Method>executeScript</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>PatternScriptModel</Class>
                        <Method>storeDialogPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "return new SecurityException(Resources.getInstance().format("plugins/ScriptEditor.FORBIDDEN_ACTION",new Integer[]{new Integer(pPermissionGroup),new Integer(pPermission)}));" is 172.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptingSecurityManager</Class>
                        <Method>getException</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String cer="-----BEGIN CERTIFICATE-----\n" + "MIIDKDCCAuWgAwIBAgIESAY2ADALBgcqhkjOOAQDBQAwdzELMAkGA1UEBhMCREUxCzAJBgNVBAgT" + "AkRFMRMwEQYDVQQHEwpPcGVuU291cmNlMRgwFgYDVQQKEw9zb3VyY2Vmb3JnZS5uZXQxETAPBgNV"+ "BAsTCEZyZWVNaW5kMRkwFwYDVQQDExBDaHJpc3RpYW4gRm9sdGluMB4XDTA4MDQxNjE3MjMxMloX"+ "DTA4MDcxNTE3MjMxMlowdzELMAkGA1UEBhMCREUxCzAJBgNVBAgTAkRFMRMwEQYDVQQHEwpPcGVu"+ "U291cmNlMRgwFgYDVQQKEw9zb3VyY2Vmb3JnZS5uZXQxETAPBgNVBAsTCEZyZWVNaW5kMRkwFwYD"+ "VQQDExBDaHJpc3RpYW4gRm9sdGluMIIBtzCCASwGByqGSM44BAEwggEfAoGBAP1/U4EddRIpUt9K"+ "nC7s5Of2EbdSPO9EAMMeP4C2USZpRV1AIlH7WT2NWPq/xfW6MPbLm1Vs14E7gB00b/JmYLdrmVCl"+ "pJ+f6AR7ECLCT7up1/63xhv4O1fnxqimFQ8E+4P208UewwI1VBNaFpEy9nXzrith1yrv8iIDGZ3R"+ "SAHHAhUAl2BQjxUjC8yykrmCouuEC/BYHPUCgYEA9+GghdabPd7LvKtcNrhXuXmUr7v6OuqC+VdM"+ "Cz0HgmdRWVeOutRZT+ZxBxCBgLRJFnEj6EwoFhO3zwkyjMim4TwWeotUfI0o4KOuHiuzpnWRbqN/"+ "C/ohNWLx+2J6ASQ7zKTxvqhRkImog9/hWuWfBpKLZl6Ae1UlZAFMO/7PSSoDgYQAAoGAZm5z5EZX"+ "Vhtye5jY3X9w24DJ3yNJbNl2tfkOBIc0KfgyxONTSJKtUpmLI3btUxy3pQf/T8BShlY3PAC0fp3M"+ "eDG8WRq1wM3luLd1V9SS8EG6tPJBZ3mciCUymTT7n9CZNzATIpqNIXHSD/wljRABedUi8PMg4KbV"+ "Pnhu6Y6b1uAwCwYHKoZIzjgEAwUAAzAAMC0CFQCFHGwe+HHOvY0MmKYHbiq7fRxMGwIUC0voAGYU"+ "u6vgVFqdLI5F96JLTqk="+ "\n-----END CERTIFICATE-----\n";" is 1222.</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>SignedScriptHandler</Class>
                        <Method>isScriptSigned</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Class>ScriptContents</Class>
                        <Method>ScriptContents</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Complex Method</Name>
                    <Description>Cyclomatic complexity of the method is 8</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdf</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getController().getFrame().getContentPane(),e.getLocalizedMessage(),null,JOptionPane.ERROR_MESSAGE);" is 130.</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdf</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 19200</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdf</Class>
                        <Method>exportAsPdf</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 19200</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdf</Class>
                        <Method>exportAsPdf</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdfDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 150</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdfDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdfDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 25</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdfDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdfDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 20</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdfDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportPdfDialog</Class>
                        <Method>initialize</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "JOptionPane.showMessageDialog(getController().getFrame().getContentPane(),e.getLocalizedMessage(),null,JOptionPane.ERROR_MESSAGE);" is 130.</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportSvg</Class>
                        <Method>startupMapHook</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportVectorGraphic</Class>
                        <Method>createSvgGraphics2D</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 12</Description>
                    <Entity>
                        <Component>plugins.svg</Component>
                        <Class>ExportVectorGraphic</Class>
                        <Method>createSvgGraphics2D</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 42</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindMainMock</Class>
                        <Method>getFreemindVersion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTaskTests</Class>
                        <Method>testTestTask</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTaskTests</Class>
                        <Method>testTestTask</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 300</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTaskTests</Class>
                        <Method>testTestTask</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTaskTests</Class>
                        <Method>testTestTask</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>FreeMindTaskTests</Class>
                        <Method>actionPerformed</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 200</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestTask</Class>
                        <Method>processAction</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("proper html conversion","&lt;html&gt;\n &lt;head&gt;\n \n &lt;/head&gt;\n &lt;body&gt;\n &lt;br /&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n",node.getXmlText());" is 127.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testSetHtml</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "element.parseFromReader(new StringReader("&lt;" + XMLElement.XML_NODE_XHTML_CONTENT_TAG + "&gt;&lt;body&gt;a&lt;b&gt;cd&lt;/b&gt;e&lt;/body&gt;&lt;/"+ XMLElement.XML_NODE_XHTML_CONTENT_TAG+ "&gt;"));" is 163.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testNanoXmlContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("end " + XMLElement.XML_NODE_XHTML_CONTENT_TAG + " tag removed","&lt;body&gt;a&lt;b&gt;cd&lt;/b&gt;e&lt;/body&gt;",element.getContent());" is 126.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testNanoXmlContent</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String input="&lt;html&gt;\n" + " &lt;head&gt;\n" + " \n"+ " &lt;/head&gt;\n"+ " &lt;body&gt;\n"+ " &lt;p&gt;\n"+ " asdfasdf&lt;br /&gt;asdfasdfdasf\n"+ " &lt;/p&gt;\n"+ " &lt;p&gt;\n"+ " asdasdfas\n"+ " &lt;/p&gt;\n"+ " &lt;/body&gt;\n"+ "&lt;/html&gt;";" is 189.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testBr</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String body="\n &lt;p&gt;\n" + " Using" + pSpaceString + "Filters"+ pSpaceString+ "the"+ pSpaceString+ "current"+ pSpaceString+ "mindmap"+ pSpaceString+ "can"+ pSpaceString+ "be"+ pSpaceString+ "reduced"+ pSpaceString+ "to"+ pSpaceString+ "nodes"+ pSpaceString+ "satisfying"+ pSpaceString+ "certain"+ pSpaceString+ "criteria."+ pSpaceString+ "For"+ pSpaceString+ "example,"+ pSpaceString+ "if"+ pSpaceString+ "you"+ pSpaceString+ "only"+ pSpaceString+ "want"+ pSpaceString+ "to"+ pSpaceString+ "see"+ pSpaceString+ "every"+ pSpaceString+ "node"+ pSpaceString+ "containing"+ pSpaceString+ "&amp;quot;TODO&amp;quot;,"+ pSpaceString+ "then"+ pSpaceString+ "you"+ pSpaceString+ "have"+ pSpaceString+ "to"+ pSpaceString+ "press"+ pSpaceString+ "on"+ pSpaceString+ "the"+ pSpaceString+ "filter"+ pSpaceString+ "symbol"+ pSpaceString+ "(the"+ pSpaceString+ "funnel"+ pSpaceString+ "beside"+ pSpaceString+ "the"+ pSpaceString+ "zoom"+ pSpaceString+ "box),"+ pSpaceString+ "the"+ pSpaceString+ "filter"+ pSpaceString+ "toolbar"+ pSpaceString+ "appears,"+ pSpaceString+ "choose"+ pSpaceString+ "&amp;quot;edit&amp;quot;"+ pSpaceString+ "and"+ pSpaceString+ "add"+ pSpaceString+ "the"+ pSpaceString+ "condition"+ pSpaceString+ "that"+ pSpaceString+ "the"+ pSpaceString+ "node"+ pSpaceString+ "content"+ pSpaceString+ "contains"+ pSpaceString+ "&amp;quot;TODO&amp;quot;."+ pSpaceString+ "Then"+ pSpaceString+ "select"+ pSpaceString+ "the"+ pSpaceString+ "filter"+ pSpaceString+ "in"+ pSpaceString+ "the"+ pSpaceString+ "filter"+ pSpaceString+ "toolbar."+ pSpaceString+ "Now,"+ pSpaceString+ "only"+ pSpaceString+ "the"+ pSpaceString+ "filtered"+ pSpaceString+ "nodes"+ pSpaceString+ "and"+ pSpaceString+ "its"+ pSpaceString+ "ancestors"+ pSpaceString+ "are"+ pSpaceString+ "displayed"+ pSpaceString+ "unless"+ pSpaceString+ "you"+ pSpaceString+ "choose"+ pSpaceString+ "&amp;quot;No"+ pSpaceString+ "filtering&amp;quot;"+ pSpaceString+ "in"+ pSpaceString+ "the"+ pSpaceString+ "toolbar."+ pSpaceString+ "\n"+ " &lt;/p&gt;\n"+ " &lt;p&gt;\n"+ " Using"+ pSpaceString+ "the"+ pSpaceString+ "settings"+ pSpaceString+ "&amp;quot;Show"+ pSpaceString+ "ancestors&amp;quot;"+ pSpaceString+ "and"+ pSpaceString+ "&amp;quot;Show"+ pSpaceString+ "descendants&amp;quot;"+ pSpaceString+ "you"+ pSpaceString+ "can"+ pSpaceString+ "influence"+ pSpaceString+ "the"+ pSpaceString+ "apperance"+ pSpaceString+ "of"+ pSpaceString+ "the"+ pSpaceString+ "parent"+ pSpaceString+ "and"+ pSpaceString+ "child"+ pSpaceString+ "nodes"+ pSpaceString+ "that"+ pSpaceString+ "are"+ pSpaceString+ "connected"+ pSpaceString+ "with"+ pSpaceString+ "the"+ pSpaceString+ "nodes"+ pSpaceString+ "being"+ pSpaceString+ "filtered.\n"+ " &lt;/p&gt;\n"+ " &lt;p&gt;\n"+ " There"+ pSpaceString+ "are"+ pSpaceString+ "many"+ pSpaceString+ "different"+ pSpaceString+ "criteria"+ pSpaceString+ "filters"+ pSpaceString+ "can"+ pSpaceString+ "be"+ pSpaceString+ "based"+ pSpaceString+ "on"+ pSpaceString+ "such"+ pSpaceString+ "as"+ pSpaceString+ "a"+ pSpaceString+ "set"+ pSpaceString+ "of"+ pSpaceString+ "selected"+ pSpaceString+ "nodes,"+ pSpaceString+ "a"+ pSpaceString+ "specific"+ pSpaceString+ "icon"+ pSpaceString+ "and"+ pSpaceString+ "some"+ pSpaceString+ "attributes.\n"+ " &lt;/p&gt;\n"+ " &lt;p&gt;\n"+ " "+ pSpaceString+ "\n"+ " &lt;/p&gt;\n ";" is 3205.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>getHtmlBody</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String input="if (myOldValue != null &amp;&amp; myText.startsWith(myOldValue) == true) { \nmyText = myText.substring(myOldValue.length() + terminator.length());\n};\n";" is 160.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testUnicodeHandling</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("Wrong chars are gone","AB&amp;#32;&amp;#x20;",Tools.replaceUtf8AndIllegalXmlChars("&amp;#x1f;A&amp;#0;&amp;#31;&amp;#x0001B;B&amp;#x1;&amp;#32;&amp;#1;&amp;#x20;"));" is 139.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testIllegalXmlChars</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("Multiple space conversion"," " + HtmlTools.NBSP + HtmlTools.NBSP+ HtmlTools.NBSP,HtmlTools.replaceSpacesToNonbreakableSpaces(" "));" is 145.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testSpaceReplacements</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("Double space conversion"," " + HtmlTools.NBSP + "xy "+ HtmlTools.NBSP+ HtmlTools.NBSP,HtmlTools.replaceSpacesToNonbreakableSpaces(" xy "));" is 153.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>HtmlConversionTests</Class>
                        <Method>testSpaceReplacements</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastStorageManagementTests</Class>
                        <Method>testGetList</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastStorageManagementTests</Class>
                        <Method>testGetList</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastStorageManagementTests</Class>
                        <Method>testGetList</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LastStorageManagementTests</Class>
                        <Method>testChangeOrAdd2</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>setUp</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 600</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>setUp</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShift</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShift</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShiftNegative</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShiftNegativeWith3Childs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShiftNegativeWith3Childs</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testScrollMap</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShiftNegativeWith3ChildsWithRootMovement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShiftNegativeWith3ChildsWithRootMovement</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShiftNegativeWith3ChildsYCalcToRoot</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>LayoutTests</Class>
                        <Method>testYShiftNegativeWith3ChildsYCalcToRoot</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("Newline is correctly marshalled?" + marshall,testPattern.getPatternChild().getValue(),testPatternUnmarshalled.getPatternChild().getValue());" is 154.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MarshallerTests</Class>
                        <Method>testNewLines</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Searchresults results=(Searchresults)XmlBindingTools.getInstance().unMarshall("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n" + "&lt;searchresults timestamp=\"Tue, 08 Nov 11 22:49:54 -0500\" attribution=\"Data Copyright OpenStreetMap Contributors, Some Rights Reserved. CC-BY-SA 2.0.\" querystring=\"innsbruck\" polygon=\"false\" exclude_place_ids=\"228452,25664166,26135863,25440203\" more_url=\"http://open.mapquestapi.com/nominatim/v1/search?format=xml&amp;amp;exclude_place_ids=228452,25664166,26135863,25440203&amp;amp;accept-language=&amp;amp;q=innsbruck\"&gt;\n" + " &lt;place place_id=\"228452\" osm_type=\"node\" osm_id=\"34840064\" place_rank=\"16\" boundingbox=\"47.2554266357,47.2754304504,11.3827679062,11.4027688599\" lat=\"47.2654296\" lon=\"11.3927685\" display_name=\"Innsbruck, Bezirk Innsbruck-Stadt, Innsbruck-Stadt, Tirol, Ã–sterreich, Europe\" class=\"place\" type=\"city\" icon=\"http://open.mapquestapi.com/nominatim/v1/images/mapicons/poi_place_city.p.20.png\"/&gt;\n"+ " &lt;place place_id=\"25664166\" osm_type=\"way\" osm_id=\"18869490\" place_rank=\"27\" boundingbox=\"43.5348739624023,43.5354156494141,-71.1319198608398,-71.1316146850586\" lat=\"43.5351336524196\" lon=\"-71.1317853486877\" display_name=\"Innsbruck, New Durham, Strafford County, New Hampshire, United States of America\" class=\"highway\" type=\"service\"/&gt;\n"+ " &lt;place place_id=\"26135863\" osm_type=\"way\" osm_id=\"18777572\" place_rank=\"27\" boundingbox=\"38.6950759887695,38.6965446472168,-91.1586227416992,-91.1520233154297\" lat=\"38.6957456083531\" lon=\"-91.1552550683042\" display_name=\"Innsbruck, Warren, Aspenhoff, Warren County, Missouri, United States of America\" class=\"highway\" type=\"service\"/&gt;\n"+ " &lt;place place_id=\"25440203\" osm_type=\"way\" osm_id=\"18869491\" place_rank=\"27\" boundingbox=\"43.5335311889648,43.5358810424805,-71.1356735229492,-71.1316146850586\" lat=\"43.5341678362733\" lon=\"-71.1338615946084\" display_name=\"Innsbruck, New Durham, Strafford County, New Hampshire, 03855, United States of America\" class=\"highway\" type=\"service\"/&gt;\n"+ "&lt;/searchresults&gt;");" is 2082.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MarshallerTests</Class>
                        <Method>testOsmNominatimConversion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MarshallerTests</Class>
                        <Method>testOsmNominatimConversion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 47.2654296</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MarshallerTests</Class>
                        <Method>testOsmNominatimConversion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Reversegeocode reverse=(Reversegeocode)XmlBindingTools.getInstance().unMarshall("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n" + "&lt;reversegeocode timestamp=\"Wed, 10 Apr 13 17:42:51 +0000\" \n" + "attribution=\"Data Â© OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright\" \n"+ "querystring=\"format=xml&amp;amp;lat=52.45177267188509&amp;amp;lon=13.28847885131836&amp;amp;zoom=18&amp;amp;addressdetails=1\"&gt;\n"+ "&lt;result place_id=\"97929939\" \n"+ "osm_type=\"relation\" osm_id=\"32590\" "+ "lat=\"52.45222935\" lon=\"13.2890019049798\"&gt;Rost- und Silberlaube, 45, \n"+ "Habelschwerdter Allee, Dahlem, Steglitz-Zehlendorf, Berlin, 14195, Germany, \n"+ "European Union&lt;/result&gt;&lt;/reversegeocode&gt;");" is 704.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MarshallerTests</Class>
                        <Method>testNominatimReverse</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pGetEventIfChangedAfterThisTimeInMillies is 40.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>MindMapMock</Class>
                        <Method>registerMapSourceChangedObserver</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawRoundRect</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>logMe</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>copyArea</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>draw3DRect</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>fill3DRect</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>fillRoundRect</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawArc</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>fillArc</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawChars</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawBytes</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 6 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawImage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 5 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawImage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 7 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawImage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 10 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawImage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Parameter List</Name>
                    <Description>The method has 11 parameters. </Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>PrintGraphics</Class>
                        <Method>drawImage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String error="startup failed, Script1.groovy: 1: For statement contains unexpected tokens. Possible attempt to use unsupported Java-style for loop. at line: 1 column: 1. File: Script1.groovy @ line 1, column 1.\n1 error";" is 221.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ScriptEditorPanelTest</Class>
                        <Method>testErrorLineNumbers</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                        <Method>getAmountOfScripts</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                        <Method>storeDialogPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the parameter pWindow_preference_storage_property is 35.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 800</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 400</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 100</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 500</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>TestScriptModel</Class>
                        <Method>decorateDialog</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 11</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>SplashTests</Class>
                        <Method>testLightBuldSplash</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 10</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>SplashTests</Class>
                        <Method>testLightBuldSplash</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 1000l</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>SplashTests</Class>
                        <Method>testLightBuldSplash</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String input="&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;map version=\"0.9.0\"&gt;" + "&lt;!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net --&gt;" + "&lt;node CREATED=\"1320424144875\" ID=\"ID_984089046\" MODIFIED=\"1320424283250\" TEXT=\"GREEK LETTERS&amp;#x391;&amp;#x392;&amp;#x393;&amp;#x394;&amp;#x395;&amp;#x396;&amp;#x397;&amp;#x398;&amp;#x399;&amp;#x39a;&amp;#x39b;&amp;#x39c;&amp;#x39d;&amp;#x39e;&amp;#x39f;&amp;#x3a0;&amp;#x3a1;&amp;#x3a3;&amp;#x3a4;&amp;#x3a5;&amp;#x3a6;&amp;#x3a7;&amp;#x3a8;&amp;#x3a9; &amp;#x3b1;&amp;#x3b2;&amp;#x3b3;&amp;#x3b4;&amp;#x3b5;&amp;#x3b6;&amp;#x3b7;&amp;#x3b8;&amp;#x3b9;&amp;#x3ba;&amp;#x3bb;&amp;#x3bc;&amp;#x3bd;&amp;#x3be;&amp;#x3bf;&amp;#x3c0;&amp;#x3c1;&amp;#x3c3;&amp;#x3c4;&amp;#x3c5;&amp;#x3c6;&amp;#x3c7;&amp;#x3c8;&amp;#x3c9; &amp;#x3ac;&amp;#x3ad;&amp;#x3ae;&amp;#x3af;&amp;#x3cc;&amp;#x3cd;&amp;#x3ce;\"&gt;"+ "&lt;node CREATED=\"1320424155937\" ID=\"ID_1884129484\" MODIFIED=\"1320424262562\" POSITION=\"right\"&gt;"+ "&lt;richcontent TYPE=\"NODE\"&gt;&lt;html&gt;"+ " &lt;head&gt;"+ " "+ " &lt;/head&gt;"+ " &lt;body&gt;"+ " &lt;p&gt;"+ " &amp;#x391;&amp;#x392;&amp;#x393;&amp;#x394;&amp;#x395;&amp;#x396;&amp;#x397;&amp;#x398;&amp;#x399;&amp;#x39a;&amp;#x39b;&amp;#x39c;&amp;#x39d;&amp;#x39e;&amp;#x39f;&amp;#x3a0;&amp;#x3a1;&amp;#x3a3;&amp;#x3a4;&amp;#x3a5;&amp;#x3a6;&amp;#x3a7;&amp;#x3a8;&amp;#x3a9;"+ " &lt;/p&gt;"+ " &lt;p&gt;"+ " &amp;#x3b1;&amp;#x3b2;&amp;#x3b3;&amp;#x3b4;&amp;#x3b5;&amp;#x3b6;&amp;#x3b7;&amp;#x3b8;&amp;#x3b9;&amp;#x3ba;&amp;#x3bb;&amp;#x3bc;&amp;#x3bd;&amp;#x3be;&amp;#x3bf;&amp;#x3c0;&amp;#x3c1;&amp;#x3c3;&amp;#x3c4;&amp;#x3c5;&amp;#x3c6;&amp;#x3c7;&amp;#x3c8;&amp;#x3c9; &amp;#x3ac;&amp;#x3ad;&amp;#x3ae;&amp;#x3af;&amp;#x3cc;&amp;#x3cd;&amp;#x3ce;"+ " &lt;/p&gt;"+ " &lt;/body&gt;"+ "&lt;/html&gt;"+ "&lt;/richcontent&gt;"+ "&lt;/node&gt;"+ "&lt;/node&gt;"+ "&lt;/map&gt;";" is 1371.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testRichContentConversion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Reader updateReader=Tools.getUpdateReader(new StringReader(input),MindMapMapModel.FREEMIND_VERSION_UPDATER_XSLT,mFreeMindMain);" is 127.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testRichContentConversion</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOWS_PATH_WITH_SPECIAL_CHAR is 30.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testRelativeUrlsWindows</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOWS_PATH_C_USERS_TMP_IM_MM is 30.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testRelativeUrlsWindows</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Identifier</Name>
                    <Description>The length of the field WINDOWS_PATH_C_USERS_TMP_IM_MM is 30.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testGetPrefix</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testOccurrences</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testOccurrences</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "String input="&lt;map version=\"0.9.0\"&gt;" + "&lt;!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net --&gt;" + "&lt;node CREATED=\"1337970913625\" ID=\"ID_1753131052\" MODIFIED=\"1337970913625\" TEXT=\"Neue Mindmap\"/&gt;"+ "&lt;/map&gt;";" is 271.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>doUpdate</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "Reader updateReader=Tools.getUpdateReader(new StringReader(input),MindMapMapModel.FREEMIND_VERSION_UPDATER_XSLT,getFrame());" is 124.</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>doUpdate</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2d</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testPageFormatStorage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 3d</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testPageFormatStorage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4d</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testPageFormatStorage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 5d</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testPageFormatStorage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6d</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testPageFormatStorage</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 2</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Class>ToolsTests</Class>
                        <Method>testChangedProperties</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 6</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 14</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 14</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 27</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 27</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 34</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 34</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 34</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 14</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 18</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 34</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Magic Number</Name>
                    <Description>The method contains a magic number: 4</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testPositions</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("&lt;html&gt;&lt;strong&gt;blabla&lt;/strong&gt;&lt;/html&gt;",HtmlTools.getInstance().getReplaceResult(Pattern.compile("test"),"blabla","&lt;html&gt;&lt;strong&gt;test&lt;/strong&gt;&lt;/html&gt;"));" is 165.</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testDirectReplace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("&lt;html&gt;&lt;strong&gt;blabla und so weiter&lt;/strong&gt;&lt;/html&gt;",HtmlTools.getInstance().getReplaceResult(Pattern.compile("test"),"blabla","&lt;html&gt;&lt;strong&gt;test und so weiter&lt;/strong&gt;&lt;/html&gt;"));" is 193.</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testDirectReplace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("&lt;html&gt;&lt;strong&gt;blabla&lt;/strong&gt;&lt;/html&gt;",HtmlTools.getInstance().getReplaceResult(Pattern.compile("strong"),"strang","&lt;html&gt;&lt;strong&gt;blabla&lt;/strong&gt;&lt;/html&gt;"));" is 169.</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testDirectReplace</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "assertEquals("remove regexp from '" + input + "' has lead to '"+ result+ "' but expected was '"+ outputExpected+ "'",outputExpected,result);" is 140.</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>executeRegExpRemovalAndTest</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "TimeList.IReplaceInputInformation info=new TestReplaceInputInfo("&lt;html&gt;&lt;strong&gt;test&lt;/strong&gt;&lt;/html&gt;","&lt;html&gt;&lt;strong&gt;blabla&lt;/strong&gt;&lt;/html&gt;");" is 141.</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testReplaceNodeText</Method>
                    </Entity>
                </ImplementationSmell>
                <ImplementationSmell>
                    <Name>Long Statement</Name>
                    <Description>The length of the statement "info=new TestReplaceInputInfo("&lt;html&gt;before&lt;strong&gt;tes&lt;/strong&gt;tafter&lt;/html&gt;","&lt;html&gt;before&lt;strong&gt;blabla&lt;/strong&gt;after&lt;/html&gt;");" is 129.</Description>
                    <Entity>
                        <Component>tests.freemind.findreplace</Component>
                        <Class>FindTextTests</Class>
                        <Method>testReplaceNodeText</Method>
                    </Entity>
                </ImplementationSmell>
            </ImplementationSmells>
            <ArchSmells>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 66</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: accessories.plugins; freemind.common; tests.freemind</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: accessories.plugins; freemind.modes; freemind.view.mindmapview; tests.freemind</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: accessories.plugins; freemind.modes; freemind.main; freemind.view.mindmapview; tests.freemind</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ApplyFormatPlugin]; [AutomaticLayout; AutomaticLayoutPropertyContributor; Registration; MyFreemindPropertyListener; ClonePasteAction; ClonePlugin; LogFileViewer; CloseAction; PrintOperationAction; UpdateTextAreaThread; NodeHistory; NodeHolder; Registration; ShowCloneNodes; ClonePropertiesObserver; CloneProperties; Registration]; [StylePropertyTranslator; StylePatternProperty; StylePatternListProperty]; [BlinkingNodeHook]; [TimerColorChanger]; [ChangeNodeLevelAction]; [ChangeRootNode]; [Registration]; [CreationModificationPlugin]; [EncryptNode]; [Registration]; [ExportToImage]; [ExportToOoWriter]; [ExportWithXSLT]; [FitToPage]; [FormatNewNodes]; [FormatPaste]; [FormularEditor; FormularEntity; StringEntity; CheckBoxEntity; ChoiceEntity; ChoiceElement]; [HierarchicalIcons]; [IconSelectionPlugin]; [ImportMindmanagerFiles]; [JumpLastEditLocation; JumpLastEditLocationRegistration]; [Registration]; [SetLogLevelAction]; [ManagePatterns]; [NewParentNode]; [NodeNote; NodeNoteRegistration; SouthPanel; NoteDocumentListener; NotesManager; JumpToMapAction; RemoveNote]; [SimplyHtmlResources]; [Registration]; [RevisionPlugin]; [SaveAll]; [SortNodes]; [NodeTextComparator]; [SplitNode]; [UnfoldAll; Registration]. LCC (Lack of Component Cohesion) = 0.53</Description>
                    <Entity>
                        <Component>accessories.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="DenseStructure">
                    <Name>Dense Structure</Name>
                    <Description> The tool detected the smell because all the analyzed components exhibit excessive and dense dependencies among themselves. Average degree = 10.88. All the dependencies among components: from: accessories.plugins to: freemind.modes; from: accessories.plugins to: accessories.plugins.dialogs; from: accessories.plugins to: freemind.modes.mindmapmode; from: accessories.plugins to: freemind.preferences; from: accessories.plugins to: freemind.common; from: accessories.plugins to: freemind.controller; from: accessories.plugins to: freemind.preferences.layout; from: accessories.plugins to: freemind.view.mindmapview; from: accessories.plugins to: freemind.main; from: accessories.plugins to: freemind.modes.mindmapmode.actions.xml; from: accessories.plugins to: freemind.extensions; from: accessories.plugins to: freemind.modes.common.dialogs; from: accessories.plugins to: accessories.plugins.util.html; from: accessories.plugins to: accessories.plugins.util.xslt; from: accessories.plugins to: freemind.view; from: accessories.plugins to: freemind.modes.common.plugins; from: accessories.plugins.dialogs to: freemind.modes.mindmapmode; from: accessories.plugins.dialogs to: freemind.modes.mindmapmode.dialogs; from: accessories.plugins.dialogs to: freemind.main; from: accessories.plugins.dialogs to: freemind.modes; from: accessories.plugins.dialogs to: freemind.controller; from: accessories.plugins.time to: freemind.main; from: accessories.plugins.time to: freemind.modes; from: accessories.plugins.time to: freemind.modes.common.plugins; from: accessories.plugins.time to: freemind.modes.mindmapmode; from: accessories.plugins.time to: freemind.controller; from: accessories.plugins.time to: freemind.view; from: accessories.plugins.time to: freemind.view.mindmapview; from: accessories.plugins.time to: freemind.extensions; from: accessories.plugins.util.html to: freemind.modes; from: accessories.plugins.util.html to: freemind.view.mindmapview; from: accessories.plugins.util.html to: freemind.main; from: accessories.plugins.util.xslt to: freemind.modes; from: accessories.plugins.util.xslt to: freemind.main; from: freemind.common to: freemind.main; from: freemind.common to: freemind.controller; from: freemind.common to: tests.freemind; from: freemind.common to: freemind.modes; from: freemind.common to: freemind.modes.common.dialogs; from: freemind.common to: freemind.modes.mindmapmode; from: freemind.controller to: freemind.modes; from: freemind.controller to: freemind.main; from: freemind.controller to: freemind.controller.filter; from: freemind.controller to: freemind.modes.mindmapmode.attributeactors; from: freemind.controller to: freemind.preferences; from: freemind.controller to: freemind.view; from: freemind.controller to: freemind.modes.browsemode; from: freemind.controller to: freemind.modes.attributes; from: freemind.controller to: freemind.common; from: freemind.controller to: freemind.controller.printpreview; from: freemind.controller to: freemind.preferences.layout; from: freemind.controller.filter.condition to: freemind.controller; from: freemind.controller.filter.condition to: freemind.modes; from: freemind.controller.filter.condition to: freemind.modes.attributes; from: freemind.controller.filter.condition to: freemind.main; from: freemind.controller.filter.condition to: freemind.common; from: freemind.controller.filter.condition to: freemind.controller.filter; from: freemind.controller.filter.condition to: freemind.view.mindmapview; from: freemind.controller.filter to: freemind.controller.filter.condition; from: freemind.controller.filter to: freemind.controller; from: freemind.controller.filter to: freemind.modes; from: freemind.controller.filter to: freemind.view.mindmapview; from: freemind.controller.filter to: freemind.controller.filter.util; from: freemind.controller.filter to: freemind.modes.attributes; from: freemind.controller.filter to: freemind.main; from: freemind.controller.filter to: freemind.common; from: freemind.controller.filter to: freemind.view; from: freemind.controller.filter to: freemind.modes.common.plugins; from: freemind.controller.printpreview to: freemind.view.mindmapview; from: freemind.controller.printpreview to: freemind.main; from: freemind.extensions to: freemind.view.mindmapview; from: freemind.extensions to: freemind.modes; from: freemind.extensions to: freemind.main; from: freemind.extensions to: freemind.modes.mindmapmode.actions.xml; from: freemind.main to: freemind.controller; from: freemind.main to: freemind.view.mindmapview; from: freemind.main to: freemind.modes; from: freemind.main to: freemind.view; from: freemind.main to: freemind.modes.mindmapmode; from: freemind.main to: freemind.common; from: freemind.modes to: freemind.main; from: freemind.modes to: freemind.view.mindmapview; from: freemind.modes to: freemind.controller; from: freemind.modes to: freemind.extensions; from: freemind.modes to: freemind.view.mindmapview.attributeview; from: freemind.modes to: freemind.controller.filter; from: freemind.modes to: freemind.controller.filter.condition; from: freemind.modes to: freemind.controller.filter.util; from: freemind.modes to: freemind.modes.attributes; from: freemind.modes to: freemind.preferences; from: freemind.modes to: freemind.modes.mindmapmode; from: freemind.modes to: freemind.common; from: freemind.modes.attributes to: freemind.modes.mindmapmode; from: freemind.modes.attributes to: freemind.modes; from: freemind.modes.attributes to: freemind.controller.filter.util; from: freemind.modes.attributes to: freemind.modes.mindmapmode.attributeactors; from: freemind.modes.attributes to: freemind.main; from: freemind.modes.browsemode to: freemind.modes; from: freemind.modes.browsemode to: freemind.main; from: freemind.modes.browsemode to: freemind.view.mindmapview; from: freemind.modes.browsemode to: freemind.extensions; from: freemind.modes.browsemode to: freemind.modes.viewmodes; from: freemind.modes.browsemode to: freemind.controller; from: freemind.modes.browsemode to: freemind.modes.common.plugins; from: freemind.modes.browsemode to: freemind.modes.common.dialogs; from: freemind.modes.common.actions to: freemind.modes; from: freemind.modes.common.actions to: freemind.main; from: freemind.modes.common to: freemind.modes; from: freemind.modes.common to: freemind.main; from: freemind.modes.common.dialogs to: freemind.common; from: freemind.modes.common.dialogs to: freemind.main; from: freemind.modes.common.dialogs to: freemind.modes; from: freemind.modes.common.listeners to: freemind.modes; from: freemind.modes.common.listeners to: freemind.view.mindmapview; from: freemind.modes.common.listeners to: freemind.main; from: freemind.modes.common.listeners to: freemind.controller; from: freemind.modes.common.plugins to: freemind.modes; from: freemind.modes.common.plugins to: freemind.main; from: freemind.modes.common.plugins to: freemind.extensions; from: freemind.modes.filemode to: freemind.modes; from: freemind.modes.filemode to: freemind.controller; from: freemind.modes.filemode to: freemind.view.mindmapview; from: freemind.modes.filemode to: freemind.main; from: freemind.modes.mindmapmode.actions to: freemind.modes.mindmapmode; from: freemind.modes.mindmapmode.actions to: freemind.modes; from: freemind.modes.mindmapmode.actions to: freemind.main; from: freemind.modes.mindmapmode.actions to: freemind.modes.mindmapmode.actions.xml; from: freemind.modes.mindmapmode.actions to: freemind.controller; from: freemind.modes.mindmapmode.actions to: freemind.common; from: freemind.modes.mindmapmode.actions to: freemind.view.mindmapview; from: freemind.modes.mindmapmode.actions to: freemind.extensions; from: freemind.modes.mindmapmode.actions to: freemind.controller.filter.condition; from: freemind.modes.mindmapmode.actions to: freemind.modes.attributes; from: freemind.modes.mindmapmode.actions to: freemind.modes.common; from: freemind.modes.mindmapmode.actions.xml to: freemind.modes.mindmapmode; from: freemind.modes.mindmapmode.actions.xml to: freemind.modes; from: freemind.modes.mindmapmode.actions.xml to: freemind.controller; from: freemind.modes.mindmapmode.actions.xml to: freemind.main; from: freemind.modes.mindmapmode.actions.xml to: freemind.modes.mindmapmode.actions; from: freemind.modes.mindmapmode.attributeactors to: freemind.view.mindmapview; from: freemind.modes.mindmapmode.attributeactors to: freemind.modes; from: freemind.modes.mindmapmode.attributeactors to: freemind.modes.attributes; from: freemind.modes.mindmapmode.attributeactors to: freemind.view; from: freemind.modes.mindmapmode.attributeactors to: freemind.main; from: freemind.modes.mindmapmode.attributeactors to: freemind.controller; from: freemind.modes.mindmapmode.attributeactors to: freemind.controller.filter.util; from: freemind.modes.mindmapmode.attributeactors to: freemind.modes.mindmapmode; from: freemind.modes.mindmapmode.attributeactors to: freemind.modes.mindmapmode.actions.xml; from: freemind.modes.mindmapmode.dialogs to: freemind.main; from: freemind.modes.mindmapmode.dialogs to: freemind.common; from: freemind.modes.mindmapmode.dialogs to: freemind.modes.mindmapmode; from: freemind.modes.mindmapmode.dialogs to: freemind.modes.mindmapmode.actions; from: freemind.modes.mindmapmode.dialogs to: freemind.modes; from: freemind.modes.mindmapmode to: freemind.main; from: freemind.modes.mindmapmode to: freemind.modes; from: freemind.modes.mindmapmode to: freemind.view.mindmapview; from: freemind.modes.mindmapmode to: freemind.modes.mindmapmode.actions.xml; from: freemind.modes.mindmapmode to: freemind.extensions; from: freemind.modes.mindmapmode to: freemind.modes.mindmapmode.actions; from: freemind.modes.mindmapmode to: freemind.modes.mindmapmode.attributeactors; from: freemind.modes.mindmapmode to: freemind.modes.common; from: freemind.modes.mindmapmode to: freemind.modes.common.actions; from: freemind.modes.mindmapmode to: freemind.modes.mindmapmode.hooks; from: freemind.modes.mindmapmode to: freemind.view; from: freemind.modes.mindmapmode to: freemind.controller; from: freemind.modes.mindmapmode to: freemind.modes.attributes; from: freemind.modes.mindmapmode to: freemind.common; from: freemind.modes.mindmapmode.hooks to: freemind.main; from: freemind.modes.mindmapmode.hooks to: freemind.extensions; from: freemind.modes.mindmapmode.hooks to: freemind.common; from: freemind.modes.mindmapmode.hooks to: freemind.modes; from: freemind.modes.mindmapmode.listeners to: freemind.modes; from: freemind.modes.mindmapmode.listeners to: freemind.modes.mindmapmode; from: freemind.modes.mindmapmode.listeners to: freemind.view.mindmapview; from: freemind.modes.mindmapmode.listeners to: freemind.controller; from: freemind.modes.mindmapmode.listeners to: freemind.main; from: freemind.modes.schememode to: freemind.modes; from: freemind.modes.schememode to: freemind.controller; from: freemind.modes.schememode to: freemind.main; from: freemind.modes.viewmodes to: freemind.view.mindmapview; from: freemind.modes.viewmodes to: freemind.modes.common; from: freemind.modes.viewmodes to: freemind.modes.common.actions; from: freemind.modes.viewmodes to: freemind.modes; from: freemind.preferences to: freemind.common; from: freemind.preferences.layout to: freemind.main; from: freemind.preferences.layout to: freemind.common; from: freemind.preferences.layout to: freemind.modes; from: freemind.preferences.layout to: freemind.modes.mindmapmode; from: freemind.preferences.layout to: freemind.preferences; from: freemind.preferences.layout to: freemind.controller; from: freemind.view to: freemind.modes; from: freemind.view to: freemind.view.mindmapview; from: freemind.view.mindmapview to: freemind.modes; from: freemind.view.mindmapview to: freemind.main; from: freemind.view.mindmapview to: tests.freemind; from: freemind.view.mindmapview to: freemind.controller; from: freemind.view.mindmapview to: freemind.modes.mindmapmode; from: freemind.view.mindmapview to: freemind.preferences; from: freemind.view.mindmapview to: freemind.view.mindmapview.attributeview; from: freemind.view.mindmapview.attributeview to: freemind.modes.attributes; from: freemind.view.mindmapview.attributeview to: freemind.main; from: freemind.view.mindmapview.attributeview to: freemind.modes; from: freemind.view.mindmapview.attributeview to: freemind.view.mindmapview; from: plugins.collaboration.database to: freemind.modes.mindmapmode; from: plugins.collaboration.database to: freemind.controller; from: plugins.collaboration.database to: freemind.modes; from: plugins.collaboration.database to: freemind.common; from: plugins.collaboration.database to: freemind.view; from: plugins.collaboration.database to: freemind.main; from: plugins.collaboration.database to: freemind.view.mindmapview; from: plugins.collaboration.database to: freemind.modes.mindmapmode.actions.xml; from: plugins.collaboration.database to: freemind.extensions; from: plugins.collaboration.database to: freemind.modes.mindmapmode.actions; from: plugins.collaboration.jabber to: plugins.collaboration.jabber.mindmap; from: plugins.collaboration.jabber.mindmap to: freemind.modes.mindmapmode; from: plugins.collaboration.jabber.mindmap to: freemind.main; from: plugins.collaboration.jabber.mindmap to: freemind.modes.mindmapmode.actions.xml; from: plugins.collaboration.jabber.mindmap to: plugins.collaboration.jabber.view; from: plugins.collaboration.socket to: freemind.modes.mindmapmode; from: plugins.collaboration.socket to: freemind.modes; from: plugins.collaboration.socket to: freemind.extensions; from: plugins.collaboration.socket to: freemind.main; from: plugins.collaboration.socket to: freemind.common; from: plugins.collaboration.socket to: freemind.view.mindmapview; from: plugins.collaboration.socket to: freemind.controller; from: plugins.collaboration.socket to: freemind.view; from: plugins.collaboration.socket to: freemind.modes.mindmapmode.actions.xml; from: plugins.collaboration.socket to: freemind.modes.mindmapmode.actions; from: plugins.help to: freemind.main; from: plugins.latex to: freemind.view.mindmapview; from: plugins.latex to: freemind.modes; from: plugins.latex to: freemind.main; from: plugins.map to: freemind.modes; from: plugins.map to: freemind.modes.mindmapmode; from: plugins.map to: freemind.view.mindmapview; from: plugins.map to: freemind.controller; from: plugins.map to: freemind.modes.common.plugins; from: plugins.map to: freemind.main; from: plugins.map to: freemind.common; from: plugins.map to: freemind.extensions; from: plugins.map to: accessories.plugins.time; from: plugins.map to: freemind.view; from: plugins.map to: freemind.modes.mindmapmode.actions.xml; from: plugins.map to: freemind.preferences.layout; from: plugins.script to: freemind.modes.attributes; from: plugins.script to: freemind.modes; from: plugins.script to: freemind.modes.mindmapmode; from: plugins.script to: freemind.main; from: plugins.script to: freemind.controller; from: plugins.script to: freemind.common; from: plugins.script to: freemind.preferences.layout; from: plugins.script to: freemind.modes.common.dialogs; from: plugins.svg to: freemind.modes; from: plugins.svg to: freemind.controller; from: plugins.svg to: freemind.view.mindmapview; from: plugins.svg to: freemind.main; from: tests.freemind to: freemind.main; from: tests.freemind to: freemind.common; from: tests.freemind to: freemind.view.mindmapview; from: tests.freemind to: freemind.modes.mindmapmode; from: tests.freemind to: freemind.controller; from: tests.freemind to: freemind.modes; from: tests.freemind to: de.foltin; from: tests.freemind to: freemind.controller.filter; from: tests.freemind to: plugins.script; from: tests.freemind to: accessories.plugins; from: tests.freemind.findreplace to: accessories.plugins.time; from: tests.freemind.findreplace to: freemind.main; from: tests.freemind.findreplace to: freemind.modes; from: tests.freemind.findreplace to: freemind.view.mindmapview; from: tests.freemind.findreplace to: freemind.extensions; from: tests.freemind.findreplace to: freemind.modes.attributes.</Description>
                    <Entity>
                        <Component>&lt;All packages&gt;</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: accessories.plugins.dialogs; freemind.modes.mindmapmode; freemind.view.mindmapview; tests.freemind; accessories.plugins</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.modes.mindmapmode.dialogs</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ArrayListTransferHandler; ManagePatternsPopupDialog; PatternListModel]; [ArrayListTransferable]; [ChooseFormatPopupDialog]; [EnterPasswordDialog]; [PatternListSelectionListener]. LCC (Lack of Component Cohesion) = 0.71</Description>
                    <Entity>
                        <Component>accessories.plugins.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 48</Description>
                    <Entity>
                        <Component>accessories.plugins.time</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: accessories.plugins.util.html; freemind.view.mindmapview; tests.freemind; accessories.plugins</Description>
                    <Entity>
                        <Component>accessories.plugins.util.html</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: accessories.plugins.util.html; freemind.modes; freemind.view.mindmapview; tests.freemind; accessories.plugins</Description>
                    <Entity>
                        <Component>accessories.plugins.util.html</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: accessories.plugins.util.xslt; freemind.modes; freemind.view.mindmapview; tests.freemind; accessories.plugins</Description>
                    <Entity>
                        <Component>accessories.plugins.util.xslt</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.common; freemind.main</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.common; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.common; freemind.main; freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.controller; tests.freemind; freemind.modes.common.dialogs; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.common</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 79</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller; freemind.modes; freemind.main</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller; freemind.modes; freemind.main; freemind.view.mindmapview</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.controller.filter; freemind.modes.mindmapmode.attributeactors; freemind.modes.browsemode; freemind.controller.printpreview; freemind.preferences.layout</Description>
                    <Entity>
                        <Component>freemind.controller</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.filter.condition; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.filter.condition; freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.filter.condition; freemind.controller; freemind.modes; freemind.controller.filter</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.controller.filter</Description>
                    <Entity>
                        <Component>freemind.controller.filter.condition</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.filter; freemind.controller.filter.condition</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.filter; freemind.controller.filter.condition; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.filter; freemind.controller.filter.condition; freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DefaultFilter; Filter; FilterController; FilterInfo; FilterToolbar; FilterChangeListener; EditFilterAction; UnfoldAncestorsAction; FilterComposerDialog; ConditionListSelectionListener; CloseAction; MindMapFilterFileFilter; SaveAction; LoadAction]; [AddConditionAction]; [DeleteConditionAction]; [CreateNotSatisfiedConditionAction]; [CreateConjunctConditionAction]; [CreateDisjunctConditionAction]; [ConditionListMouseListener]; [SimpleConditionChangeListener]; [SelectedAttributeChangeListener]. LCC (Lack of Component Cohesion) = 0.41</Description>
                    <Entity>
                        <Component>freemind.controller.filter</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ExtendedComboBoxModel; ExtensionDataListener; SortedListModel; SortedMapListModel; SortedComboBoxModel]; [SortedMapVector; MapElement]. LCC (Lack of Component Cohesion) = 0.29</Description>
                    <Entity>
                        <Component>freemind.controller.filter.util</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.printpreview; freemind.view.mindmapview; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.controller.printpreview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.printpreview; freemind.view.mindmapview; freemind.modes; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.controller.printpreview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.controller.printpreview; freemind.view.mindmapview; freemind.modes; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.controller.printpreview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.extensions; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.extensions; freemind.view.mindmapview; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.extensions; freemind.view.mindmapview; freemind.modes; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.extensions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 45</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.main; freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.main; freemind.controller; freemind.modes; freemind.view.mindmapview</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.controller; freemind.view.mindmapview; freemind.modes; freemind.view; freemind.modes.mindmapmode; freemind.common</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Base64Coding; Tools; BooleanHolder; DesEncrypter; SingleDesEncrypter; TripleDesEncrypter; TransformerRunnable; NameMnemonicHolder; ButtonHolder; ActionHolder; EditServer; FreeMind; FreeMindApplet; FreeMindCommon; FreeMindResourceBundle; FreeMindMain; StartupDoneListener; VersionInformation; FreeMindSplashModern; FeedBackImpl; FreeMindStarter; HtmlTools; IndexPair; IFreeMindSplash; LogFileLogHandler; LogReceiver; LoggingOutputStream; Resources; StdFormatter; XHTMLWriter; FeedBack; FixedHTMLWriter]; [ExampleFileFilter]; [MyEventQueue]; [FreeMindSecurityManager]; [ProxyAuthenticator]; [StdOutErrLevel]; [IntHolder]; [ObjectHolder]; [Pair]; [EscapeAction]; [MindMapNodePair]; [XHTMLFilterWriter]; [XMLElement; XMLParseException]. LCC (Lack of Component Cohesion) = 0.29</Description>
                    <Entity>
                        <Component>freemind.main</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 54</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes; freemind.main</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.view.mindmapview; freemind.controller; freemind.extensions; freemind.view.mindmapview.attributeview; freemind.controller.filter; freemind.controller.filter.condition; freemind.modes.attributes; freemind.preferences; freemind.modes.mindmapmode; freemind.common</Description>
                    <Entity>
                        <Component>freemind.modes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.attributes; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.attributes; freemind.modes.mindmapmode; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.attributes; freemind.modes.mindmapmode; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.attributes; freemind.modes.mindmapmode; freemind.main; freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.modes.mindmapmode; freemind.modes.mindmapmode.attributeactors</Description>
                    <Entity>
                        <Component>freemind.modes.attributes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.browsemode; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.browsemode; freemind.modes; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.browsemode; freemind.modes; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.browsemode; freemind.modes; freemind.main; freemind.view.mindmapview; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [BrowseArrowLinkModel; BrowseController; FollowMapLink; FollowLinkAction; BrowseHookFactory; BrowseMode; BrowsePopupMenu; BrowseReminderHook; BrowseToolBar]; [BrowseCloudModel]; [BrowseEdgeModel]; [BrowseMapModel; BrowseNodeModel; EncryptedBrowseNode]; [BrowseXMLElement]; [NodeNoteViewer]. LCC (Lack of Component Cohesion) = 0.38</Description>
                    <Entity>
                        <Component>freemind.modes.browsemode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.actions; freemind.modes; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.actions; freemind.modes; freemind.main; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.actions; freemind.modes; freemind.main; freemind.view.mindmapview; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.common.actions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common; freemind.modes; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.common</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common; freemind.modes; freemind.main; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.common</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common; freemind.modes; freemind.main; freemind.view.mindmapview; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.common</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.dialogs; freemind.common</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.dialogs; freemind.main; freemind.common</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.dialogs; freemind.common; freemind.main; freemind.controller; freemind.modes.browsemode</Description>
                    <Entity>
                        <Component>freemind.modes.common.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.plugins; freemind.modes; freemind.controller.filter</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.plugins; freemind.modes; freemind.controller; freemind.controller.filter</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.common.plugins; freemind.modes; freemind.main; freemind.controller; freemind.controller.filter</Description>
                    <Entity>
                        <Component>freemind.modes.common.plugins</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [FileController; FileMode; FilePopupMenu; FileToolBar]; [CenterAction; FileMapModel; OpenPathAction]; [FileEdgeModel]; [FileNodeModel]. LCC (Lack of Component Cohesion) = 0.44</Description>
                    <Entity>
                        <Component>freemind.modes.filemode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 72</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.actions; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.actions; freemind.modes.mindmapmode; freemind.modes.mindmapmode.actions.xml</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AddArrowLinkAction; FreemindAction; IconAction; NodeBackgroundColorAction; NodeColorAction; NodeHookAction; RemoveAllIconsAction; RemoveArrowLinkAction; RemoveIconAction; RevertAction; SelectBranchAction; SetLinkByTextFieldAction; AddLocalLinkAction; ApplyPatternAction; ExternalPatternAction; NodeGeneralAction; NodeStyleAction; SelectAllAction; SingleNodeOperation; UnderlinedAction; UsePlainTextAction; UseRichFormattingAction; BoldAction; NodeActorXml; ChangeArrowLinkEndPoints; ChangeArrowsInArrowLinkAction; CloudAction; CloudColorAction; ColorArrowLinkAction; EdgeStyleAction; EdgeWidthAction; FontFamilyAction; FontSizeAction; HookAction; MindMapControllerHookAction; ItalicAction; MoveNodeAction; RemoveNodeBackgroundColorAction; NodeColorBlendAction]; [CompoundActionHandler]; [CopyAction]; [CopySingleAction]; [CutAction; NodeCoordinate; UndoPasteHandler; DeleteChildAction; PasteAction; DataFlavorHandler; FileListFlavorHandler; MindMapNodesFlavorHandler; DirectHtmlFlavorHandler; HtmlFlavorHandler; StringFlavorHandler; ImageFlavorHandler]; [EdgeColorAction]; [EditAction]; [ExportBranchAction]; [ImportExplorerFavoritesAction]; [ImportFolderStructureAction]; [JoinNodesAction]; [MindMapActions; MouseWheelEventHandler]; [ModeControllerActionHandler]; [NewChildAction]; [NewPreviousSiblingAction]; [NewSiblingAction]; [NodeUpAction]; [PasteAsPlainTextAction]; [RedoAction; UndoAction]; [ToggleChildrenFoldedAction]; [ToggleFoldedAction]. LCC (Lack of Component Cohesion) = 0.29</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.actions.xml; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.actions.xml; freemind.modes.mindmapmode; freemind.extensions</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.actions.xml; freemind.modes.mindmapmode; freemind.main; freemind.controller; freemind.modes.mindmapmode.attributeactors</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.modes.mindmapmode; freemind.controller; freemind.modes.mindmapmode.actions</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.actions.xml</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 50</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.attributeactors; freemind.modes.attributes</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.attributeactors; freemind.view.mindmapview; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.attributeactors; freemind.view.mindmapview; freemind.modes; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.attributeactors; freemind.view.mindmapview; freemind.modes; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AssignAttributeDialog; AttributesListener]; [ClonedComboBoxModel]; [IteratingAction; AddAction; DeleteAttributeAction; DeleteValueAction; ReplaceValueAction; ListDialog; CloseAction; AttributeManagerDialog; EditListAction; AttributeRegistryTable; ButtonEditor; ButtonRenderer; ImportAttributesDialog; TreeNodeInfo; AttributeTreeNodeInfo; MyRenderer; ImportAction]; [ApplyAction]; [OKAction]; [CancelAction]; [ClosingListener]; [ToggleAllAction]; [InsertAttributeActor; MindMapModeAttributeController; Visitor; AttributeRenamer; AttributeChanger; AttributeRemover; AttributeValueRemover; Iterator; RegistryAttributeActor; RegistryAttributeValueActor; RemoveAttributeActor; ReplaceAttributeValueActor; SetAttributeColumnWidthActor; SetAttributeFontSizeActor; SetAttributeNameActor; SetAttributeRestrictedActor; SetAttributeValueActor; SetAttributeVisibleActor; UnregistryAttributeActor; UnregistryAttributeValueActor]; [TextChangeListener]; [ListSelectionChangeListener]; [AddAction]; [RenameAction]; [DeleteAction]. LCC (Lack of Component Cohesion) = 0.28</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.attributeactors</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.dialogs; freemind.common; tests.freemind; accessories.plugins; accessories.plugins.dialogs</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.modes.mindmapmode.actions</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.dialogs</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 37</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode; freemind.main</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode; freemind.main; freemind.view.mindmapview</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode; freemind.main; freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.modes.mindmapmode.actions; freemind.modes.mindmapmode.attributeactors; freemind.modes.common; freemind.modes.common.actions; freemind.modes.mindmapmode.hooks</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [EncryptedMindMapNode; MindMapMapModel; ReaderCreator; LockManager; DummyLockManager; DoAutomaticSave; MindMapNodeModel; MindMapXMLElement; MindMapArrowLinkModel; MindMapController; MapSourceChangeDialog; MindMapControllerPlugin; NewNodeCreator; DefaultMindMapNodeCreator; ExportToHTMLAction; ExportBranchToHTMLAction; MindMapHTMLWriter; MindMapMode; MindMapPopupMenu; ImportBranchAction; ImportLinkedBranchAction; ImportLinkedBranchWithoutRootAction; StringReaderCreator; FileReaderCreator]; [JAutoScrollBarPane; MindMapToolBar; FreeMindComboBox]; [MindMapCloudModel]; [AssignAttributesAction]; [MindMapFilter]; [SetLinkByFileChooserAction]; [SetImageByFileChooserAction]; [LinkActionBase; FollowLinkAction; OpenLinkDirectoryAction]; [EditLongAction]; [MindMapEdgeModel]. LCC (Lack of Component Cohesion) = 0.27</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.hooks; freemind.main; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.hooks; freemind.main; freemind.view.mindmapview; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.mindmapmode.hooks; freemind.main; freemind.controller; freemind.modes; freemind.modes.mindmapmode</Description>
                    <Entity>
                        <Component>freemind.modes.mindmapmode.hooks</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SchemeController; SchemeMode; SchemePopupMenu; SchemeToolBar]; [EvaluateAction]; [SchemeEdgeModel]; [SchemeMapModel; SchemeNodeModel]. LCC (Lack of Component Cohesion) = 0.5</Description>
                    <Entity>
                        <Component>freemind.modes.schememode</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.viewmodes; freemind.view.mindmapview; freemind.controller; freemind.modes.browsemode</Description>
                    <Entity>
                        <Component>freemind.modes.viewmodes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.modes.viewmodes; freemind.view.mindmapview; freemind.modes; freemind.controller; freemind.modes.browsemode</Description>
                    <Entity>
                        <Component>freemind.modes.viewmodes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.modes.common.actions</Description>
                    <Entity>
                        <Component>freemind.modes.viewmodes</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.preferences; freemind.common; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.preferences</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.preferences; freemind.common; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.preferences</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.preferences; freemind.common; freemind.main; freemind.controller; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.preferences</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.common</Description>
                    <Entity>
                        <Component>freemind.preferences</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.preferences.layout; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.preferences.layout; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.preferences.layout; freemind.main; freemind.view.mindmapview; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.preferences.layout</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view; freemind.modes; freemind.main</Description>
                    <Entity>
                        <Component>freemind.view</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view; freemind.modes; freemind.main; freemind.controller</Description>
                    <Entity>
                        <Component>freemind.view</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): freemind.view.mindmapview</Description>
                    <Entity>
                        <Component>freemind.view</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 52</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view.mindmapview; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view.mindmapview; freemind.modes; freemind.main</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): tests.freemind; freemind.modes.mindmapmode; freemind.view.mindmapview.attributeview</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view.mindmapview.attributeview; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view.mindmapview.attributeview; freemind.modes.attributes; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view.mindmapview.attributeview; freemind.modes.attributes; freemind.modes.mindmapmode; freemind.modes</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: freemind.view.mindmapview.attributeview; freemind.modes.attributes; freemind.modes.mindmapmode; freemind.main; freemind.view.mindmapview</Description>
                    <Entity>
                        <Component>freemind.view.mindmapview.attributeview</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [JabberListener; JabberSender; MapSharingController; NextButtonClickListener; FreeMindJabberMessageListener]; [CloseButtonClickListener]; [BackButtonClickListener]; [AcceptButtonClickListener]; [DeclineButtonClickListener]. LCC (Lack of Component Cohesion) = 0.56</Description>
                    <Entity>
                        <Component>plugins.collaboration.jabber.mindmap</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="GodComponent">
                    <Name>God Component</Name>
                    <Description>The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 63</Description>
                    <Entity>
                        <Component>plugins.map</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: plugins.script; freemind.common; tests.freemind</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: plugins.script; freemind.modes; freemind.view.mindmapview; tests.freemind</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: plugins.script; freemind.modes.attributes; freemind.modes.mindmapmode; freemind.view.mindmapview; tests.freemind</Description>
                    <Entity>
                        <Component>plugins.script</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: tests.freemind; freemind.common</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: tests.freemind; freemind.main; freemind.view.mindmapview</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: tests.freemind; freemind.main; freemind.controller; freemind.common</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="CyclicDependency">
                    <Name>Cyclic Dependency</Name>
                    <Description>The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: tests.freemind; freemind.main; freemind.controller; freemind.modes; freemind.view.mindmapview</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="UnstableDependency">
                    <Name>Unstable Dependency</Name>
                    <Description>The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): accessories.plugins</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
                <ArchSmell Key="FeatureConcentration">
                    <Name>Feature Concentration</Name>
                    <Description>The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AllTests]; [Base64Tests; FreeMindTestBase; HtmlConversionTests; LastOpenedTests; LastStorageManagementTests; LayoutTests; MarshallerTests; ScriptEditorPanelTest; SplashTests; ToolsTests; A; B; TransformTest; DontShowAgainDialogTests; ExportTests; FreeMindMainMock; MindMapControllerMock; MindMapMock; FreeMindTaskTests; TestTask]; [PrintGraphics]; [TestScriptModel]; [SignedScriptTests]. LCC (Lack of Component Cohesion) = 0.21</Description>
                    <Entity>
                        <Component>tests.freemind</Component>
                        <Project>freemind-v1.0.0</Project>
                    </Entity>
                    <ResponsibleClasses>NA</ResponsibleClasses>
                </ArchSmell>
            </ArchSmells>
        </Project>
    </Solution>
</Analysis>
